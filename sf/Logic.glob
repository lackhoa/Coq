DIGEST 94972668933d008916e019c2086992ea
FLogic
R45:51 Tactics <> <> lib
R939:941 Coq.Init.Logic <> :type_scope:x_'='_x not
R981:983 Coq.Init.Datatypes <> nat ind
R991:993 Coq.Init.Logic <> :type_scope:x_'='_x not
R987:989 Basics <> :nat_scope:x_'+'_x not
R986:986 Logic <> n var
R990:990 Logic <> m var
R995:997 Basics <> :nat_scope:x_'+'_x not
R994:994 Logic <> m var
R998:998 Logic <> n var
R1259:1261 Coq.Init.Datatypes <> nat ind
R1265:1267 Coq.Init.Logic <> :type_scope:x_'='_x not
R1264:1264 Logic <> n var
R1295:1297 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 1627:1639 <> plus_2_2_is_4
R1650:1652 Coq.Init.Logic <> :type_scope:x_'='_x not
R1646:1648 Basics <> :nat_scope:x_'+'_x not
def 1890:1898 <> plus_fact
R1915:1917 Coq.Init.Logic <> :type_scope:x_'='_x not
R1911:1913 Basics <> :nat_scope:x_'+'_x not
R1927:1935 Logic <> plus_fact def
prf 2120:2136 <> plus_fact_is_true
R2142:2150 Logic <> plus_fact def
def 2475:2482 <> is_three
R2489:2491 Coq.Init.Datatypes <> nat ind
R2507:2509 Coq.Init.Logic <> :type_scope:x_'='_x not
R2506:2506 Logic <> n var
R2519:2526 Logic <> is_three def
def 2783:2791 <> injective
R2809:2809 Logic <> B var
R2804:2804 Logic <> A var
R2830:2830 Logic <> A var
R2847:2849 Coq.Init.Logic <> :type_scope:x_'='_x not
R2846:2846 Logic <> x var
R2850:2850 Logic <> y var
R2836:2838 Coq.Init.Logic <> :type_scope:x_'='_x not
R2833:2833 Logic <> f var
R2835:2835 Logic <> x var
R2839:2839 Logic <> f var
R2841:2841 Logic <> y var
prf 2860:2867 <> succ_inj
R2871:2879 Logic <> injective def
R2881:2881 Coq.Init.Datatypes <> S constr
R3213:3214 Coq.Init.Logic <> eq ind
def 3812:3822 <> and_example
R3835:3838 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R3831:3833 Coq.Init.Logic <> :type_scope:x_'='_x not
R3827:3829 Basics <> :nat_scope:x_'+'_x not
R3844:3846 Coq.Init.Logic <> :type_scope:x_'='_x not
R3840:3842 Basics <> :nat_scope:x_'*'_x not
prf 4253:4261 <> and_intro
R4295:4298 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4294:4294 Logic <> A var
R4299:4299 Logic <> B var
R4289:4289 Logic <> B var
R4284:4284 Logic <> A var
def 4604:4615 <> and_example'
R4628:4631 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4624:4626 Coq.Init.Logic <> :type_scope:x_'='_x not
R4620:4622 Basics <> :nat_scope:x_'+'_x not
R4637:4639 Coq.Init.Logic <> :type_scope:x_'='_x not
R4633:4635 Basics <> :nat_scope:x_'*'_x not
R4658:4666 Logic <> and_intro thm
R4658:4666 Logic <> and_intro thm
def 4795:4806 <> and_exercise
R4825:4827 Coq.Init.Datatypes <> nat ind
R4848:4851 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R4844:4846 Coq.Init.Logic <> :type_scope:x_'='_x not
R4843:4843 Logic <> n var
R4853:4855 Coq.Init.Logic <> :type_scope:x_'='_x not
R4852:4852 Logic <> m var
R4835:4837 Coq.Init.Logic <> :type_scope:x_'='_x not
R4831:4833 Basics <> :nat_scope:x_'+'_x not
R4830:4830 Logic <> n var
R4834:4834 Logic <> m var
prf 5483:5494 <> and_example2
R5513:5515 Coq.Init.Datatypes <> nat ind
R5541:5543 Coq.Init.Logic <> :type_scope:x_'='_x not
R5537:5539 Basics <> :nat_scope:x_'+'_x not
R5536:5536 Logic <> n var
R5540:5540 Logic <> m var
R5523:5526 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5519:5521 Coq.Init.Logic <> :type_scope:x_'='_x not
R5518:5518 Logic <> n var
R5528:5530 Coq.Init.Logic <> :type_scope:x_'='_x not
R5527:5527 Logic <> m var
prf 5795:5807 <> and_example2'
R5826:5828 Coq.Init.Datatypes <> nat ind
R5854:5856 Coq.Init.Logic <> :type_scope:x_'='_x not
R5850:5852 Basics <> :nat_scope:x_'+'_x not
R5849:5849 Logic <> n var
R5853:5853 Logic <> m var
R5836:5839 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R5832:5834 Coq.Init.Logic <> :type_scope:x_'='_x not
R5831:5831 Logic <> n var
R5841:5843 Coq.Init.Logic <> :type_scope:x_'='_x not
R5840:5840 Logic <> m var
prf 6135:6148 <> and_example2''
R6167:6169 Coq.Init.Datatypes <> nat ind
R6195:6197 Coq.Init.Logic <> :type_scope:x_'='_x not
R6191:6193 Basics <> :nat_scope:x_'+'_x not
R6190:6190 Logic <> n var
R6194:6194 Logic <> m var
R6182:6184 Coq.Init.Logic <> :type_scope:x_'='_x not
R6181:6181 Logic <> m var
R6173:6175 Coq.Init.Logic <> :type_scope:x_'='_x not
R6172:6172 Logic <> n var
prf 6550:6561 <> and_example3
R6580:6582 Coq.Init.Datatypes <> nat ind
R6603:6605 Coq.Init.Logic <> :type_scope:x_'='_x not
R6599:6601 Basics <> :nat_scope:x_'*'_x not
R6598:6598 Logic <> n var
R6602:6602 Logic <> m var
R6590:6592 Coq.Init.Logic <> :type_scope:x_'='_x not
R6586:6588 Basics <> :nat_scope:x_'+'_x not
R6585:6585 Logic <> n var
R6589:6589 Logic <> m var
R6652:6655 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6648:6650 Coq.Init.Logic <> :type_scope:x_'='_x not
R6657:6659 Coq.Init.Logic <> :type_scope:x_'='_x not
R6652:6655 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6648:6650 Coq.Init.Logic <> :type_scope:x_'='_x not
R6657:6659 Coq.Init.Logic <> :type_scope:x_'='_x not
R6674:6685 Logic <> and_exercise def
R6674:6685 Logic <> and_exercise def
prf 6947:6951 <> proj1
R6986:6986 Logic <> P var
R6977:6980 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6976:6976 Logic <> P var
R6981:6981 Logic <> Q var
prf 7091:7095 <> proj2
R7130:7130 Logic <> Q var
R7121:7124 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7120:7120 Logic <> P var
R7125:7125 Logic <> Q var
prf 7405:7414 <> and_commut
R7450:7453 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7449:7449 Logic <> Q var
R7454:7454 Logic <> P var
R7440:7443 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7439:7439 Logic <> P var
R7444:7444 Logic <> Q var
prf 7851:7859 <> and_assoc
R7903:7903 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7910:7914 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7905:7908 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7904:7904 Logic <> P var
R7909:7909 Logic <> Q var
R7915:7915 Logic <> R var
R7887:7891 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7898:7898 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7886:7886 Logic <> P var
R7893:7896 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R7892:7892 Logic <> Q var
R7897:7897 Logic <> R var
R8209:8211 Coq.Init.Logic <> and ind
prf 8771:8780 <> or_example
R8799:8801 Coq.Init.Datatypes <> nat ind
R8827:8829 Coq.Init.Logic <> :type_scope:x_'='_x not
R8823:8825 Basics <> :nat_scope:x_'*'_x not
R8822:8822 Logic <> n var
R8826:8826 Logic <> m var
R8809:8812 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R8805:8807 Coq.Init.Logic <> :type_scope:x_'='_x not
R8804:8804 Logic <> n var
R8814:8816 Coq.Init.Logic <> :type_scope:x_'='_x not
R8813:8813 Logic <> m var
R9044:9051 Coq.Init.Peano <> mult_n_O thm
R9044:9051 Coq.Init.Peano <> mult_n_O thm
prf 9407:9414 <> or_intro
R9443:9446 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9442:9442 Logic <> A var
R9447:9447 Logic <> B var
R9437:9437 Logic <> A var
prf 9597:9608 <> zero_or_succ
R9625:9627 Coq.Init.Datatypes <> nat ind
R9635:9638 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9631:9633 Coq.Init.Logic <> :type_scope:x_'='_x not
R9630:9630 Logic <> n var
R9640:9642 Coq.Init.Logic <> :type_scope:x_'='_x not
R9639:9639 Logic <> n var
R9643:9643 Coq.Init.Datatypes <> S constr
R9646:9649 Coq.Init.Peano <> pred def
R9651:9651 Logic <> n var
prf 9778:9786 <> mult_eq_0
R9822:9825 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R9818:9820 Coq.Init.Logic <> :type_scope:x_'='_x not
R9817:9817 Logic <> n var
R9827:9829 Coq.Init.Logic <> :type_scope:x_'='_x not
R9826:9826 Logic <> m var
R9809:9811 Coq.Init.Logic <> :type_scope:x_'='_x not
R9805:9807 Basics <> :nat_scope:x_'*'_x not
R9804:9804 Logic <> n var
R9808:9808 Logic <> m var
prf 10020:10028 <> or_commut
R10065:10068 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10064:10064 Logic <> Q var
R10069:10069 Logic <> P var
R10054:10057 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R10053:10053 Logic <> P var
R10058:10058 Logic <> Q var
mod 11098:11102 <> MyNot
def 11117:11119 MyNot not
R11138:11142 Coq.Init.Logic <> False ind
R11133:11133 Logic <> P var
R11165:11167 Logic MyNot not def
not 11155 MyNot :type_scope:'~'_x
R11193:11195 Logic MyNot not def
R11227:11231 Logic <> <> mod
prf 11437:11454 <> ex_falso_quodlibet
R11486:11486 Logic <> P var
R11477:11481 Coq.Init.Logic <> False ind
prf 11896:11914 <> not_implies_our_not
R11967:11967 Logic <> Q var
R11962:11962 Logic <> P var
R11937:11938 Coq.Init.Logic <> :type_scope:'~'_x not
R11939:11939 Logic <> P var
prf 12031:12049 <> our_not_implies_not
R12108:12109 Coq.Init.Logic <> :type_scope:'~'_x not
R12110:12110 Logic <> P var
R12075:12079 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12103:12103 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R12074:12074 Logic <> P var
R12102:12102 Logic <> Q var
R12097:12097 Logic <> P var
prf 12334:12345 <> zero_not_one
R12349:12350 Coq.Init.Logic <> :type_scope:'~'_x not
R12356:12356 Coq.Init.Logic <> :type_scope:'~'_x not
R12352:12354 Coq.Init.Logic <> :type_scope:x_'='_x not
R12515:12518 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12548:12560 <> zero_not_one'
R12565:12568 Coq.Init.Logic <> :type_scope:x_'<>'_x not
prf 12974:12982 <> not_False
R12988:12989 Coq.Init.Logic <> :type_scope:'~'_x not
R12990:12994 Coq.Init.Logic <> False ind
R13013:13015 Coq.Init.Logic <> not def
prf 13054:13083 <> contradiction_implies_anything
R13121:13121 Logic <> Q var
R13110:13113 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R13109:13109 Logic <> P var
R13114:13114 Coq.Init.Logic <> :type_scope:'~'_x not
R13115:13115 Logic <> P var
R13185:13187 Coq.Init.Logic <> not def
prf 13244:13253 <> double_neg
R13281:13281 Coq.Init.Logic <> :type_scope:'~'_x not
R13282:13282 Coq.Init.Logic <> :type_scope:'~'_x not
R13283:13283 Logic <> P var
R13276:13276 Logic <> P var
R13338:13340 Coq.Init.Logic <> not def
prf 13866:13879 <> contrapositive
R13925:13925 Coq.Init.Logic <> :type_scope:'~'_x not
R13926:13926 Logic <> P var
R13919:13919 Coq.Init.Logic <> :type_scope:'~'_x not
R13920:13920 Logic <> Q var
R13912:13912 Logic <> Q var
R13907:13907 Logic <> P var
R13954:13956 Coq.Init.Logic <> not def
prf 14079:14101 <> not_both_true_and_false
R14124:14126 Coq.Init.Logic <> :type_scope:'~'_x not
R14134:14134 Coq.Init.Logic <> :type_scope:'~'_x not
R14128:14131 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R14127:14127 Logic <> P var
R14132:14132 Coq.Init.Logic <> :type_scope:'~'_x not
R14133:14133 Logic <> P var
R14161:14163 Coq.Init.Logic <> not def
prf 14884:14900 <> not_true_is_false
R14915:14918 Basics <> bool ind
R14937:14939 Coq.Init.Logic <> :type_scope:x_'='_x not
R14936:14936 Logic <> b var
R14940:14944 Basics <> false constr
R14924:14927 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R14923:14923 Logic <> b var
R14928:14931 Basics <> true constr
R14999:15001 Coq.Init.Logic <> not def
R15019:15036 Logic <> ex_falso_quodlibet thm
R15019:15036 Logic <> ex_falso_quodlibet thm
prf 15247:15264 <> not_true_is_false'
R15279:15282 Basics <> bool ind
R15301:15303 Coq.Init.Logic <> :type_scope:x_'='_x not
R15300:15300 Logic <> b var
R15304:15308 Basics <> false constr
R15288:15291 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R15287:15287 Logic <> b var
R15292:15295 Basics <> true constr
R15364:15366 Coq.Init.Logic <> not def
prf 15743:15754 <> True_is_true
R15758:15761 Coq.Init.Logic <> True ind
R15777:15777 Coq.Init.Logic <> I constr
R15777:15777 Coq.Init.Logic <> I constr
mod 16457:16461 <> MyIff
def 16476:16478 MyIff iff
R16496:16496 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16503:16508 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16515:16515 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R16502:16502 Logic <> Q var
R16497:16497 Logic <> P var
R16514:16514 Logic <> P var
R16509:16509 Logic <> Q var
R16542:16544 Logic MyIff iff def
not 16528 MyIff :type_scope:x_'<->'_x
R16646:16650 Logic <> <> mod
prf 16662:16668 <> iff_sym
R16708:16712 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16707:16707 Logic <> Q var
R16713:16713 Logic <> P var
R16695:16699 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16694:16694 Logic <> P var
R16700:16700 Logic <> Q var
prf 16842:16859 <> not_true_iff_false
R16884:16888 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16876:16879 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R16875:16875 Logic <> b var
R16880:16883 Basics <> true constr
R16890:16892 Coq.Init.Logic <> :type_scope:x_'='_x not
R16889:16889 Logic <> b var
R16893:16897 Basics <> false constr
R16969:16985 Logic <> not_true_is_false thm
R16969:16985 Logic <> not_true_is_false thm
prf 17252:17259 <> iff_refl
R17283:17287 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17282:17282 Logic <> P var
R17288:17288 Logic <> P var
prf 17363:17371 <> iff_trans
R17426:17430 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17425:17425 Logic <> P var
R17431:17431 Logic <> R var
R17413:17417 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17412:17412 Logic <> Q var
R17418:17418 Logic <> R var
R17400:17404 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17399:17399 Logic <> P var
R17405:17405 Logic <> Q var
prf 17609:17631 <> or_distributes_over_and
R17671:17675 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R17659:17663 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17670:17670 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17658:17658 Logic <> P var
R17665:17668 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17664:17664 Logic <> Q var
R17669:17669 Logic <> R var
R17676:17676 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17683:17688 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17695:17695 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R17678:17681 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17677:17677 Logic <> P var
R17682:17682 Logic <> Q var
R17690:17693 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R17689:17689 Logic <> P var
R17694:17694 Logic <> R var
R18259:18276 Coq.Setoids.Setoid <> <> lib
prf 18430:18435 <> mult_0
R18460:18464 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18456:18458 Coq.Init.Logic <> :type_scope:x_'='_x not
R18452:18454 Basics <> :nat_scope:x_'*'_x not
R18451:18451 Logic <> n var
R18455:18455 Logic <> m var
R18470:18473 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18466:18468 Coq.Init.Logic <> :type_scope:x_'='_x not
R18465:18465 Logic <> n var
R18475:18477 Coq.Init.Logic <> :type_scope:x_'='_x not
R18474:18474 Logic <> m var
R18507:18515 Logic <> mult_eq_0 thm
R18507:18515 Logic <> mult_eq_0 thm
R18528:18537 Logic <> or_example thm
R18528:18537 Logic <> or_example thm
prf 18552:18559 <> or_assoc
R18599:18603 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R18587:18591 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18598:18598 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18586:18586 Logic <> P var
R18593:18596 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18592:18592 Logic <> Q var
R18597:18597 Logic <> R var
R18604:18604 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18611:18615 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18606:18609 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R18605:18605 Logic <> P var
R18610:18610 Logic <> Q var
R18616:18616 Logic <> R var
prf 19064:19071 <> mult_0_3
R19104:19108 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R19100:19102 Coq.Init.Logic <> :type_scope:x_'='_x not
R19096:19098 Basics <> :nat_scope:x_'*'_x not
R19092:19094 Basics <> :nat_scope:x_'*'_x not
R19091:19091 Logic <> n var
R19095:19095 Logic <> m var
R19099:19099 Logic <> p var
R19114:19117 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19110:19112 Coq.Init.Logic <> :type_scope:x_'='_x not
R19109:19109 Logic <> n var
R19123:19126 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19119:19121 Coq.Init.Logic <> :type_scope:x_'='_x not
R19118:19118 Logic <> m var
R19128:19130 Coq.Init.Logic <> :type_scope:x_'='_x not
R19127:19127 Logic <> p var
R19167:19172 Logic <> mult_0 thm
R19167:19172 Logic <> mult_0 thm
R19183:19188 Logic <> mult_0 thm
R19183:19188 Logic <> mult_0 thm
R19199:19206 Logic <> or_assoc thm
R19199:19206 Logic <> or_assoc thm
prf 19404:19420 <> apply_iff_example
R19439:19441 Coq.Init.Datatypes <> nat ind
R19462:19465 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R19458:19460 Coq.Init.Logic <> :type_scope:x_'='_x not
R19457:19457 Logic <> n var
R19467:19469 Coq.Init.Logic <> :type_scope:x_'='_x not
R19466:19466 Logic <> m var
R19449:19451 Coq.Init.Logic <> :type_scope:x_'='_x not
R19445:19447 Basics <> :nat_scope:x_'*'_x not
R19444:19444 Logic <> n var
R19448:19448 Logic <> m var
R19502:19507 Logic <> mult_0 thm
R19502:19507 Logic <> mult_0 thm
prf 20381:20392 <> four_is_even
R20396:20402 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20410:20411 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20407:20409 Coq.Init.Datatypes <> nat ind
R20413:20415 Coq.Init.Logic <> :type_scope:x_'='_x not
R20417:20419 Basics <> :nat_scope:x_'+'_x not
R20416:20416 Logic <> n var
R20420:20420 Logic <> n var
prf 20655:20670 <> exists_example_2
R20714:20720 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20722:20723 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20725:20727 Coq.Init.Logic <> :type_scope:x_'='_x not
R20724:20724 Logic <> n var
R20729:20731 Basics <> :nat_scope:x_'+'_x not
R20732:20732 Logic <> o var
R20687:20693 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20695:20696 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R20698:20700 Coq.Init.Logic <> :type_scope:x_'='_x not
R20697:20697 Logic <> n var
R20702:20704 Basics <> :nat_scope:x_'+'_x not
R20705:20705 Logic <> m var
R20833:20835 Basics <> :nat_scope:x_'+'_x not
R20833:20835 Basics <> :nat_scope:x_'+'_x not
prf 21017:21031 <> dist_not_exists
R21056:21056 Logic <> X var
R21089:21091 Coq.Init.Logic <> :type_scope:'~'_x not
R21107:21107 Coq.Init.Logic <> :type_scope:'~'_x not
R21092:21098 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21100:21101 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21102:21103 Coq.Init.Logic <> :type_scope:'~'_x not
R21104:21104 Logic <> P var
R21106:21106 Logic <> x var
R21081:21081 Logic <> P var
R21083:21083 Logic <> x var
R21126:21128 Coq.Init.Logic <> not def
prf 21327:21340 <> dist_exists_or
R21367:21367 Logic <> X var
R21381:21381 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21402:21407 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21382:21388 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21390:21391 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21395:21398 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21392:21392 Logic <> P var
R21394:21394 Logic <> x var
R21399:21399 Logic <> Q var
R21401:21401 Logic <> x var
R21408:21408 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21422:21427 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21441:21441 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R21409:21415 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21417:21418 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21419:21419 Logic <> P var
R21421:21421 Logic <> x var
R21428:21434 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21436:21437 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R21438:21438 Logic <> Q var
R21440:21440 Logic <> x var
def 22471:22472 <> In
R22490:22490 Logic <> A var
R22498:22501 Poly <> list ind
R22503:22503 Logic <> A var
R22524:22524 Logic <> l var
R22535:22537 Poly <> nil constr
R22542:22546 Coq.Init.Logic <> False ind
R22554:22557 Poly <> ::x_'::'_x not
R22564:22564 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22571:22576 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22584:22584 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22567:22569 Coq.Init.Logic <> :type_scope:x_'='_x not
R22570:22570 Logic <> x var
R22577:22578 Logic <> In def
R22580:22580 Logic <> x var
def 22715:22726 <> In_example_1
R22730:22731 Logic <> In def
R22735:22735 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22737:22738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22740:22741 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22743:22744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22746:22747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22749:22749 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22846:22857 <> In_example_2
R22890:22896 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22899:22900 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22902:22904 Coq.Init.Logic <> :type_scope:x_'='_x not
R22901:22901 Logic <> n var
R22906:22908 Basics <> :nat_scope:x_'*'_x not
R22909:22910 Logic <> n' var
R22873:22874 Logic <> In def
R22878:22878 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22880:22881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22883:22883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22876:22876 Logic <> n var
prf 23373:23378 <> In_map
R23414:23414 Logic <> B var
R23409:23409 Logic <> A var
R23422:23425 Poly <> list ind
R23427:23427 Logic <> A var
R23435:23435 Logic <> A var
R23457:23458 Logic <> In def
R23467:23469 Poly <> map def
R23473:23473 Logic <> l var
R23471:23471 Logic <> f var
R23461:23461 Logic <> f var
R23463:23463 Logic <> x var
R23443:23444 Logic <> In def
R23448:23448 Logic <> l var
R23446:23446 Logic <> x var
prf 24218:24240 <> and_distributes_over_or
R24271:24275 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24259:24263 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24270:24270 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24258:24258 Logic <> P var
R24265:24268 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24264:24264 Logic <> Q var
R24269:24269 Logic <> R var
R24276:24276 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24283:24288 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24295:24295 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24278:24281 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24277:24277 Logic <> P var
R24282:24282 Logic <> Q var
R24290:24293 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24289:24289 Logic <> P var
R24294:24294 Logic <> R var
prf 24331:24340 <> In_map_iff
R24376:24376 Logic <> B var
R24371:24371 Logic <> A var
R24384:24387 Poly <> list ind
R24389:24389 Logic <> A var
R24397:24397 Logic <> B var
R24419:24427 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24405:24406 Logic <> In def
R24411:24413 Poly <> map def
R24417:24417 Logic <> l var
R24415:24415 Logic <> f var
R24408:24408 Logic <> y var
R24428:24434 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24436:24437 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24445:24448 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R24441:24443 Coq.Init.Logic <> :type_scope:x_'='_x not
R24438:24438 Logic <> f var
R24440:24440 Logic <> x var
R24444:24444 Logic <> y var
R24449:24450 Logic <> In def
R24454:24454 Logic <> l var
R24452:24452 Logic <> x var
prf 24965:24974 <> in_app_iff
R24995:24995 Logic <> A var
R25013:25017 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25001:25002 Logic <> In def
R25008:25009 Poly <> ::x_'++'_x not
R25007:25007 Logic <> l var
R25010:25011 Logic <> l' var
R25004:25004 Logic <> a var
R25024:25027 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R25018:25019 Logic <> In def
R25023:25023 Logic <> l var
R25021:25021 Logic <> a var
R25028:25029 Logic <> In def
R25033:25034 Logic <> l' var
R25031:25031 Logic <> a var
def 26093:26095 <> All
R26113:26113 Logic <> T var
R26129:26132 Poly <> list ind
R26134:26134 Logic <> T var
R26153:26153 Logic <> l var
R26164:26166 Poly <> nil constr
R26171:26174 Coq.Init.Logic <> True ind
R26182:26185 Poly <> ::x_'::'_x not
R26196:26199 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26192:26192 Logic <> P var
R26200:26202 Logic <> All def
R26204:26204 Logic <> P var
prf 26223:26230 <> or_imply
R26257:26257 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26271:26279 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26300:26300 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26270:26270 Logic <> R var
R26260:26263 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R26259:26259 Logic <> P var
R26264:26264 Logic <> Q var
R26280:26280 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26287:26292 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26299:26299 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26286:26286 Logic <> R var
R26281:26281 Logic <> P var
R26298:26298 Logic <> R var
R26293:26293 Logic <> Q var
prf 26450:26455 <> All_In
R26476:26476 Logic <> T var
R26492:26495 Poly <> list ind
R26497:26497 Logic <> T var
R26505:26505 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26529:26538 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26526:26526 Logic <> P var
R26528:26528 Logic <> x var
R26516:26517 Logic <> In def
R26521:26521 Logic <> l var
R26519:26519 Logic <> x var
R26539:26541 Logic <> All def
R26545:26545 Logic <> l var
R26543:26543 Logic <> P var
def 27277:27292 <> combine_odd_even
R27308:27310 Coq.Init.Datatypes <> nat ind
R27323:27325 Coq.Init.Datatypes <> nat ind
R27349:27351 Coq.Init.Datatypes <> nat ind
R27361:27364 Basics <> oddb def
R27366:27366 Logic <> n var
R27386:27390 Logic <> Peven var
R27392:27392 Logic <> n var
R27374:27377 Logic <> Podd var
R27379:27379 Logic <> n var
prf 27465:27486 <> combine_odd_even_intro
R27513:27515 Coq.Init.Datatypes <> nat ind
R27531:27533 Coq.Init.Datatypes <> nat ind
R27609:27624 Logic <> combine_odd_even def
R27637:27637 Logic <> n var
R27631:27635 Logic <> Peven var
R27626:27629 Logic <> Podd var
R27593:27597 Logic <> Peven var
R27599:27599 Logic <> n var
R27581:27583 Coq.Init.Logic <> :type_scope:x_'='_x not
R27575:27578 Basics <> oddb def
R27580:27580 Logic <> n var
R27584:27588 Basics <> false constr
R27559:27562 Logic <> Podd var
R27564:27564 Logic <> n var
R27548:27550 Coq.Init.Logic <> :type_scope:x_'='_x not
R27542:27545 Basics <> oddb def
R27547:27547 Logic <> n var
R27551:27554 Basics <> true constr
R27691:27706 Logic <> combine_odd_even def
R27723:27726 Basics <> oddb def
R27752:27767 Logic <> combine_odd_even def
R27780:27783 Basics <> oddb def
R27786:27786 Coq.Init.Datatypes <> S constr
R27780:27783 Basics <> oddb def
R27786:27786 Coq.Init.Datatypes <> S constr
prf 27857:27881 <> combine_odd_even_elim_odd
R27908:27910 Coq.Init.Datatypes <> nat ind
R27926:27928 Coq.Init.Datatypes <> nat ind
R27994:27997 Logic <> Podd var
R27999:27999 Logic <> n var
R27979:27981 Coq.Init.Logic <> :type_scope:x_'='_x not
R27973:27976 Basics <> oddb def
R27978:27978 Logic <> n var
R27982:27985 Basics <> true constr
R27936:27951 Logic <> combine_odd_even def
R27964:27964 Logic <> n var
R27958:27962 Logic <> Peven var
R27953:27956 Logic <> Podd var
R28026:28041 Logic <> combine_odd_even def
prf 28089:28114 <> combine_odd_even_elim_even
R28141:28143 Coq.Init.Datatypes <> nat ind
R28159:28161 Coq.Init.Datatypes <> nat ind
R28228:28232 Logic <> Peven var
R28234:28234 Logic <> n var
R28212:28214 Coq.Init.Logic <> :type_scope:x_'='_x not
R28206:28209 Basics <> oddb def
R28211:28211 Logic <> n var
R28215:28219 Basics <> false constr
R28169:28184 Logic <> combine_odd_even def
R28197:28197 Logic <> n var
R28191:28195 Logic <> Peven var
R28186:28189 Logic <> Podd var
R28261:28276 Logic <> combine_odd_even def
R29047:29055 Induction <> plus_comm prfax
prf 30372:30381 <> plus_comm3
R30412:30414 Coq.Init.Logic <> :type_scope:x_'='_x not
R30402:30405 Basics <> :nat_scope:x_'+'_x not
R30411:30411 Basics <> :nat_scope:x_'+'_x not
R30401:30401 Logic <> n var
R30407:30409 Basics <> :nat_scope:x_'+'_x not
R30406:30406 Logic <> m var
R30410:30410 Logic <> p var
R30415:30415 Basics <> :nat_scope:x_'+'_x not
R30421:30424 Basics <> :nat_scope:x_'+'_x not
R30417:30419 Basics <> :nat_scope:x_'+'_x not
R30416:30416 Logic <> p var
R30420:30420 Logic <> m var
R30425:30425 Logic <> n var
R30698:30706 Induction <> plus_comm prfax
R30698:30706 Induction <> plus_comm prfax
R30719:30727 Induction <> plus_comm prfax
R30719:30727 Induction <> plus_comm prfax
prf 30999:31014 <> plus_comm3_take2
R31045:31047 Coq.Init.Logic <> :type_scope:x_'='_x not
R31035:31038 Basics <> :nat_scope:x_'+'_x not
R31044:31044 Basics <> :nat_scope:x_'+'_x not
R31034:31034 Logic <> n var
R31040:31042 Basics <> :nat_scope:x_'+'_x not
R31039:31039 Logic <> m var
R31043:31043 Logic <> p var
R31048:31048 Basics <> :nat_scope:x_'+'_x not
R31054:31057 Basics <> :nat_scope:x_'+'_x not
R31050:31052 Basics <> :nat_scope:x_'+'_x not
R31049:31049 Logic <> p var
R31053:31053 Logic <> m var
R31058:31058 Logic <> n var
R31094:31102 Induction <> plus_comm prfax
R31094:31102 Induction <> plus_comm prfax
R31124:31126 Coq.Init.Logic <> :type_scope:x_'='_x not
R31120:31122 Basics <> :nat_scope:x_'+'_x not
R31128:31130 Basics <> :nat_scope:x_'+'_x not
R31124:31126 Coq.Init.Logic <> :type_scope:x_'='_x not
R31120:31122 Basics <> :nat_scope:x_'+'_x not
R31128:31130 Basics <> :nat_scope:x_'+'_x not
R31147:31155 Induction <> plus_comm prfax
R31147:31155 Induction <> plus_comm prfax
prf 31414:31429 <> plus_comm3_take3
R31460:31462 Coq.Init.Logic <> :type_scope:x_'='_x not
R31450:31453 Basics <> :nat_scope:x_'+'_x not
R31459:31459 Basics <> :nat_scope:x_'+'_x not
R31449:31449 Logic <> n var
R31455:31457 Basics <> :nat_scope:x_'+'_x not
R31454:31454 Logic <> m var
R31458:31458 Logic <> p var
R31463:31463 Basics <> :nat_scope:x_'+'_x not
R31469:31472 Basics <> :nat_scope:x_'+'_x not
R31465:31467 Basics <> :nat_scope:x_'+'_x not
R31464:31464 Logic <> p var
R31468:31468 Logic <> m var
R31473:31473 Logic <> n var
R31509:31517 Induction <> plus_comm prfax
R31509:31517 Induction <> plus_comm prfax
R31531:31539 Induction <> plus_comm prfax
R31531:31539 Induction <> plus_comm prfax
def 32018:32037 <> lemma_application_ex
R32055:32057 Coq.Init.Datatypes <> nat ind
R32066:32069 Poly <> list ind
R32071:32073 Coq.Init.Datatypes <> nat ind
R32120:32122 Coq.Init.Logic <> :type_scope:x_'='_x not
R32119:32119 Logic <> n var
R32081:32082 Logic <> In def
R32087:32089 Poly <> map def
R32108:32109 Logic <> ns var
R32102:32104 Basics <> :nat_scope:x_'*'_x not
R32101:32101 Logic <> m var
R32084:32084 Logic <> n var
R32162:32166 Logic <> proj1 thm
R32173:32182 Logic <> In_map_iff thm
R32162:32166 Logic <> proj1 thm
R32173:32182 Logic <> In_map_iff thm
R32234:32241 Induction <> mult_0_r prfax
R32234:32241 Induction <> mult_0_r prfax
def 34168:34188 <> function_equality_ex1
R34198:34200 Coq.Init.Logic <> :type_scope:x_'='_x not
R34192:34195 Coq.Init.Peano <> plus def
R34201:34204 Coq.Init.Peano <> plus def
R34207:34210 Coq.Init.Peano <> pred def
def 34934:34954 <> function_equality_ex2
R34960:34960 Coq.Init.Logic <> :type_scope:x_'='_x not
R34978:34982 Coq.Init.Logic <> :type_scope:x_'='_x not
R35000:35000 Coq.Init.Logic <> :type_scope:x_'='_x not
R34970:34973 Coq.Init.Peano <> plus def
R34975:34975 Logic <> x var
R34992:34995 Coq.Init.Peano <> plus def
R34999:34999 Logic <> x var
ax 35144:35168 <> functional_extensionality
R35239:35239 Logic <> Y var
R35234:35234 Logic <> X var
R35275:35277 Coq.Init.Logic <> :type_scope:x_'='_x not
R35274:35274 Logic <> f var
R35278:35278 Logic <> g var
R35256:35256 Logic <> X var
R35263:35265 Coq.Init.Logic <> :type_scope:x_'='_x not
R35260:35260 Logic <> f var
R35262:35262 Logic <> x var
R35266:35266 Logic <> g var
R35268:35268 Logic <> x var
def 35566:35586 <> function_equality_ex2
R35592:35592 Coq.Init.Logic <> :type_scope:x_'='_x not
R35610:35614 Coq.Init.Logic <> :type_scope:x_'='_x not
R35632:35632 Coq.Init.Logic <> :type_scope:x_'='_x not
R35602:35605 Coq.Init.Peano <> plus def
R35607:35607 Logic <> x var
R35624:35627 Coq.Init.Peano <> plus def
R35631:35631 Logic <> x var
R35650:35674 Logic <> functional_extensionality prfax
R35650:35674 Logic <> functional_extensionality prfax
R35695:35703 Induction <> plus_comm prfax
R35695:35703 Induction <> plus_comm prfax
R36353:36373 Logic <> function_equality_ex2 def
def 36909:36918 <> rev_append
R36933:36936 Poly <> list ind
R36938:36938 Logic <> X var
R36943:36946 Poly <> list ind
R36948:36948 Logic <> X var
R36961:36962 Logic <> l1 var
R36973:36974 Poly <> ::'['_']' not
R36979:36980 Logic <> l2 var
R36987:36990 Poly <> ::x_'::'_x not
R36998:37007 Logic <> rev_append def
R37015:37018 Poly <> ::x_'::'_x not
R37019:37020 Logic <> l2 var
def 37042:37047 <> tr_rev
R37058:37061 Poly <> list ind
R37063:37063 Logic <> X var
R37068:37071 Poly <> list ind
R37073:37073 Logic <> X var
R37080:37089 Logic <> rev_append def
R37093:37094 Poly <> ::'['_']' not
R37091:37091 Logic <> l var
prf 37450:37463 <> rev_append_app
R37494:37497 Poly <> list ind
R37499:37499 Logic <> X var
R37521:37523 Coq.Init.Logic <> :type_scope:x_'='_x not
R37505:37514 Logic <> rev_append def
R37519:37520 Logic <> l2 var
R37516:37517 Logic <> l1 var
R37524:37524 Poly <> ::x_'++'_x not
R37541:37545 Poly <> ::x_'++'_x not
R37525:37534 Logic <> rev_append def
R37539:37540 Poly <> ::'['_']' not
R37536:37537 Logic <> l1 var
R37546:37547 Logic <> l2 var
R37706:37714 Poly <> app_nil_r thm
R37706:37714 Poly <> app_nil_r thm
R37735:37735 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37738:37738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37735:37735 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37738:37738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37753:37761 Poly <> app_assoc thm
R37753:37761 Poly <> app_assoc thm
prf 37791:37800 <> tr_rev_app
R37831:37834 Poly <> list ind
R37836:37836 Logic <> X var
R37859:37861 Coq.Init.Logic <> :type_scope:x_'='_x not
R37842:37847 Logic <> tr_rev def
R37852:37855 Poly <> ::x_'++'_x not
R37850:37851 Logic <> l1 var
R37856:37857 Logic <> l2 var
R37871:37874 Poly <> ::x_'++'_x not
R37862:37867 Logic <> tr_rev def
R37869:37870 Logic <> l2 var
R37875:37880 Logic <> tr_rev def
R37882:37883 Logic <> l1 var
R37910:37915 Logic <> tr_rev def
R38009:38017 Poly <> app_nil_r thm
R38009:38017 Poly <> app_nil_r thm
R38057:38070 Logic <> rev_append_app thm
R38078:38078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38082:38082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38057:38070 Logic <> rev_append_app thm
R38078:38078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38082:38082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38100:38108 Poly <> app_assoc thm
R38100:38108 Poly <> app_assoc thm
R38140:38153 Logic <> rev_append_app thm
R38140:38153 Logic <> rev_append_app thm
prf 38176:38189 <> tr_rev_correct
R38212:38214 Coq.Init.Logic <> :type_scope:x_'='_x not
R38204:38209 Logic <> tr_rev def
R38211:38211 Logic <> X var
R38216:38218 Poly <> rev def
R38220:38220 Logic <> X var
R38248:38272 Logic <> functional_extensionality prfax
R38248:38272 Logic <> functional_extensionality prfax
R38339:38344 Logic <> tr_rev def
R38361:38366 Logic <> tr_rev def
R38497:38510 Logic <> rev_append_app thm
R38497:38510 Logic <> rev_append_app thm
R38530:38543 Logic <> rev_append_app thm
R38551:38551 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38554:38554 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38530:38543 Logic <> rev_append_app thm
R38551:38551 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38554:38554 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R38569:38577 Poly <> app_assoc thm
R38569:38577 Poly <> app_assoc thm
prf 39323:39334 <> evenb_double
R39364:39366 Coq.Init.Logic <> :type_scope:x_'='_x not
R39348:39352 Basics <> evenb def
R39355:39360 Induction <> double def
R39362:39362 Logic <> k var
R39367:39370 Basics <> true constr
prf 39524:39540 <> evenb_double_conv
R39556:39562 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39564:39565 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R39567:39569 Coq.Init.Logic <> :type_scope:x_'='_x not
R39566:39566 Logic <> n var
R39573:39577 Basics <> evenb def
R39579:39579 Logic <> n var
R39616:39616 Coq.Init.Datatypes <> S constr
R39619:39624 Induction <> double def
R39626:39626 Logic <> k var
R39586:39591 Induction <> double def
R39593:39593 Logic <> k var
R39762:39768 Induction <> evenb_S prfax
R39762:39768 Induction <> evenb_S prfax
R39781:39785 Basics <> evenb def
R39781:39785 Basics <> evenb def
R39840:39842 Coq.Init.Logic <> :type_scope:x_'='_x not
R39928:39928 Coq.Init.Datatypes <> S constr
R39928:39928 Coq.Init.Datatypes <> S constr
prf 39965:39978 <> even_bool_prop
R40008:40012 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R40001:40003 Coq.Init.Logic <> :type_scope:x_'='_x not
R39994:39998 Basics <> evenb def
R40000:40000 Logic <> n var
R40004:40007 Basics <> true constr
R40013:40019 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40021:40022 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R40024:40026 Coq.Init.Logic <> :type_scope:x_'='_x not
R40023:40023 Logic <> n var
R40027:40032 Induction <> double def
R40034:40034 Logic <> k var
R40087:40103 Logic <> evenb_double_conv thm
R40087:40103 Logic <> evenb_double_conv thm
R40206:40217 Logic <> evenb_double thm
R40206:40217 Logic <> evenb_double thm
prf 40422:40437 <> beq_nat_true_iff
R40456:40458 Coq.Init.Datatypes <> nat ind
R40483:40487 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R40476:40478 Coq.Init.Logic <> :type_scope:x_'='_x not
R40463:40469 Basics <> beq_nat def
R40474:40475 Logic <> n2 var
R40471:40472 Logic <> n1 var
R40479:40482 Basics <> true constr
R40490:40492 Coq.Init.Logic <> :type_scope:x_'='_x not
R40488:40489 Logic <> n1 var
R40493:40494 Logic <> n2 var
R40537:40548 Tactics <> beq_nat_true thm
R40537:40548 Tactics <> beq_nat_true thm
R40587:40598 Induction <> beq_nat_refl prfax
R40587:40598 Induction <> beq_nat_refl prfax
def 41823:41835 <> is_even_prime
R41848:41850 Coq.Init.Logic <> :type_scope:x_'='_x not
R41847:41847 Logic <> n var
R41870:41874 Basics <> false constr
R41858:41861 Basics <> true constr
def 43406:43414 <> even_1000
R43418:43424 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43426:43427 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43432:43434 Coq.Init.Logic <> :type_scope:x_'='_x not
R43435:43440 Induction <> double def
R43442:43442 Logic <> k var
def 43676:43685 <> even_1000'
R43699:43701 Coq.Init.Logic <> :type_scope:x_'='_x not
R43689:43693 Basics <> evenb def
R43702:43705 Basics <> true constr
def 43928:43938 <> even_1000''
R43942:43948 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43950:43951 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43956:43958 Coq.Init.Logic <> :type_scope:x_'='_x not
R43959:43964 Induction <> double def
R43966:43966 Logic <> k var
R43982:43995 Logic <> even_bool_prop thm
R43982:43995 Logic <> even_bool_prop thm
prf 44711:44723 <> andb_true_iff
R44740:44743 Basics <> bool ind
R44763:44767 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44756:44758 Coq.Init.Logic <> :type_scope:x_'='_x not
R44750:44753 Basics <> ::x_'&&'_x not
R44748:44749 Logic <> b1 var
R44754:44755 Logic <> b2 var
R44759:44762 Basics <> true constr
R44777:44780 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44770:44772 Coq.Init.Logic <> :type_scope:x_'='_x not
R44768:44769 Logic <> b1 var
R44773:44776 Basics <> true constr
R44783:44785 Coq.Init.Logic <> :type_scope:x_'='_x not
R44781:44782 Logic <> b2 var
R44786:44789 Basics <> true constr
R44848:44862 Basics <> andb_true_elim2 prfax
R44848:44862 Basics <> andb_true_elim2 prfax
R44880:44895 Basics <> andb_commutative thm
R44880:44895 Basics <> andb_commutative thm
R44917:44931 Basics <> andb_true_elim2 prfax
R44917:44931 Basics <> andb_true_elim2 prfax
prf 45007:45018 <> orb_true_iff
R45053:45057 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45046:45048 Coq.Init.Logic <> :type_scope:x_'='_x not
R45040:45043 Basics <> ::x_'||'_x not
R45038:45039 Logic <> b1 var
R45044:45045 Logic <> b2 var
R45049:45052 Basics <> true constr
R45067:45070 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R45060:45062 Coq.Init.Logic <> :type_scope:x_'='_x not
R45058:45059 Logic <> b1 var
R45063:45066 Basics <> true constr
R45073:45075 Coq.Init.Logic <> :type_scope:x_'='_x not
R45071:45072 Logic <> b2 var
R45076:45079 Basics <> true constr
prf 45538:45554 <> beq_nat_false_iff
R45571:45573 Coq.Init.Datatypes <> nat ind
R45597:45601 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45589:45591 Coq.Init.Logic <> :type_scope:x_'='_x not
R45578:45584 Basics <> beq_nat def
R45588:45588 Logic <> y var
R45586:45586 Logic <> x var
R45592:45596 Basics <> false constr
R45603:45606 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R45602:45602 Logic <> x var
R45607:45607 Logic <> y var
R45801:45803 Coq.Init.Logic <> not def
R46034:46036 Coq.Init.Logic <> not def
R46051:46053 Coq.Init.Logic <> not def
R46102:46108 Tactics <> f_equal thm
R46102:46108 Tactics <> f_equal thm
def 46530:46537 <> beq_list
R46567:46570 Basics <> bool ind
R46562:46562 Logic <> A var
R46557:46557 Logic <> A var
R46600:46603 Poly <> list ind
R46605:46605 Logic <> A var
R46610:46613 Basics <> bool ind
R46624:46625 Logic <> l1 var
R46636:46638 Poly <> nil constr
R46649:46650 Logic <> l2 var
R46663:46665 Poly <> nil constr
R46670:46673 Basics <> true constr
R46682:46685 Poly <> ::x_'::'_x not
R46691:46695 Basics <> false constr
R46712:46715 Poly <> ::x_'::'_x not
R46729:46730 Logic <> l2 var
R46743:46745 Poly <> nil constr
R46750:46754 Basics <> false constr
R46765:46768 Poly <> ::x_'::'_x not
R46776:46776 Basics <> ::x_'&&'_x not
R46788:46793 Basics <> ::x_'&&'_x not
R46814:46814 Basics <> ::x_'&&'_x not
R46777:46779 Logic <> beq var
R46794:46801 Logic <> beq_list def
R46803:46805 Logic <> beq var
def 46840:46851 <> beq_list_ex1
R46877:46879 Coq.Init.Logic <> :type_scope:x_'='_x not
R46855:46862 Logic <> beq_list def
R46875:46876 Poly <> ::'['_']' not
R46872:46873 Poly <> ::'['_']' not
R46864:46870 Basics <> beq_nat def
R46880:46883 Basics <> true constr
def 46912:46923 <> beq_list_ex2
R46953:46955 Coq.Init.Logic <> :type_scope:x_'='_x not
R46927:46934 Logic <> beq_list def
R46947:46947 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R46949:46950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R46952:46952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R46944:46945 Poly <> ::'['_']' not
R46936:46942 Basics <> beq_nat def
R46956:46960 Basics <> false constr
def 46989:47000 <> beq_list_ex3
R47030:47032 Coq.Init.Logic <> :type_scope:x_'='_x not
R47004:47011 Logic <> beq_list def
R47028:47029 Poly <> ::'['_']' not
R47021:47021 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47023:47024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47026:47026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47013:47019 Basics <> beq_nat def
R47033:47037 Basics <> false constr
def 47066:47077 <> beq_list_ex4
R47123:47125 Coq.Init.Logic <> :type_scope:x_'='_x not
R47081:47088 Logic <> beq_list def
R47111:47111 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47113:47114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47116:47117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47119:47120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47122:47122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47098:47098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47100:47101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47103:47104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47106:47107 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47109:47109 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R47090:47096 Basics <> beq_nat def
R47126:47129 Basics <> true constr
prf 47157:47173 <> beq_list_true_iff
R47205:47208 Basics <> bool ind
R47200:47200 Logic <> A var
R47195:47195 Logic <> A var
R47307:47311 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47300:47302 Coq.Init.Logic <> :type_scope:x_'='_x not
R47282:47289 Logic <> beq_list def
R47298:47299 Logic <> l2 var
R47295:47296 Logic <> l1 var
R47291:47293 Logic <> beq var
R47303:47306 Basics <> true constr
R47314:47316 Coq.Init.Logic <> :type_scope:x_'='_x not
R47312:47313 Logic <> l1 var
R47317:47318 Logic <> l2 var
R47247:47251 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47240:47242 Coq.Init.Logic <> :type_scope:x_'='_x not
R47231:47233 Logic <> beq var
R47238:47239 Logic <> a2 var
R47235:47236 Logic <> a1 var
R47243:47246 Basics <> true constr
R47254:47256 Coq.Init.Logic <> :type_scope:x_'='_x not
R47252:47253 Logic <> a1 var
R47257:47258 Logic <> a2 var
R47620:47632 Logic <> andb_true_iff thm
R47620:47632 Logic <> andb_true_iff thm
R47789:47801 Logic <> andb_true_iff thm
R47789:47801 Logic <> andb_true_iff thm
def 48060:48066 <> forallb
R48092:48095 Basics <> bool ind
R48087:48087 Logic <> X var
R48103:48106 Poly <> list ind
R48108:48108 Logic <> X var
R48113:48116 Basics <> bool ind
R48129:48129 Logic <> l var
R48140:48141 Poly <> ::'['_']' not
R48146:48149 Basics <> true constr
R48156:48159 Poly <> ::x_'::'_x not
R48166:48169 Basics <> andb def
R48181:48187 Logic <> forallb def
R48189:48192 Logic <> test var
R48172:48175 Logic <> test var
prf 48320:48335 <> forallb_true_iff
R48358:48361 Poly <> list ind
R48363:48363 Logic <> X var
R48391:48395 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48384:48386 Coq.Init.Logic <> :type_scope:x_'='_x not
R48370:48376 Logic <> forallb def
R48383:48383 Logic <> l var
R48378:48381 Logic <> test var
R48387:48390 Basics <> true constr
R48396:48398 Logic <> All def
R48425:48425 Logic <> l var
R48416:48418 Coq.Init.Logic <> :type_scope:x_'='_x not
R48410:48413 Logic <> test var
R48415:48415 Logic <> x var
R48419:48422 Basics <> true constr
R48532:48544 Logic <> andb_true_iff thm
R48532:48544 Logic <> andb_true_iff thm
def 49307:49321 <> excluded_middle
R49346:49349 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R49345:49345 Logic <> P var
R49350:49351 Coq.Init.Logic <> :type_scope:'~'_x not
R49352:49352 Logic <> P var
prf 50112:50137 <> restricted_excluded_middle
R50176:50179 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50175:50175 Logic <> P var
R50180:50181 Coq.Init.Logic <> :type_scope:'~'_x not
R50182:50182 Logic <> P var
R50157:50161 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R50156:50156 Logic <> P var
R50163:50165 Coq.Init.Logic <> :type_scope:x_'='_x not
R50162:50162 Logic <> b var
R50166:50169 Basics <> true constr
prf 50428:50456 <> restricted_excluded_middle_eq
R50474:50476 Coq.Init.Datatypes <> nat ind
R50487:50490 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R50483:50485 Coq.Init.Logic <> :type_scope:x_'='_x not
R50482:50482 Logic <> n var
R50486:50486 Logic <> m var
R50492:50495 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R50491:50491 Logic <> n var
R50496:50496 Logic <> m var
R50529:50554 Logic <> restricted_excluded_middle thm
R50565:50571 Basics <> beq_nat def
R50558:50560 Coq.Init.Logic <> :type_scope:x_'='_x not
R50529:50554 Logic <> restricted_excluded_middle thm
R50565:50571 Basics <> beq_nat def
R50558:50560 Coq.Init.Logic <> :type_scope:x_'='_x not
R50600:50615 Logic <> beq_nat_true_iff thm
R50600:50615 Logic <> beq_nat_true_iff thm
R54675:54678 Coq.Init.Logic <> :type_scope:x_'\/'_x not
prf 54697:54723 <> excluded_middle_irrefutable
R54746:54747 Coq.Init.Logic <> :type_scope:'~'_x not
R54748:54750 Coq.Init.Logic <> :type_scope:'~'_x not
R54759:54759 Coq.Init.Logic <> :type_scope:'~'_x not
R54752:54755 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54751:54751 Logic <> P var
R54756:54757 Coq.Init.Logic <> :type_scope:'~'_x not
R54758:54758 Logic <> P var
R54778:54780 Coq.Init.Logic <> not def
R54802:54809 Logic <> or_imply thm
R54802:54809 Logic <> or_imply thm
prf 54865:54892 <> excluded_middle_irrefutable'
R54915:54916 Coq.Init.Logic <> :type_scope:'~'_x not
R54917:54919 Coq.Init.Logic <> :type_scope:'~'_x not
R54928:54928 Coq.Init.Logic <> :type_scope:'~'_x not
R54921:54924 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54920:54920 Logic <> P var
R54925:54926 Coq.Init.Logic <> :type_scope:'~'_x not
R54927:54927 Logic <> P var
R54947:54949 Coq.Init.Logic <> not def
prf 55464:55478 <> not_exists_dist
R55526:55526 Logic <> X var
R55576:55576 Logic <> P var
R55578:55578 Logic <> x var
R55542:55544 Coq.Init.Logic <> :type_scope:'~'_x not
R55560:55560 Coq.Init.Logic <> :type_scope:'~'_x not
R55545:55551 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55553:55554 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R55555:55556 Coq.Init.Logic <> :type_scope:'~'_x not
R55557:55557 Logic <> P var
R55559:55559 Logic <> x var
R55484:55498 Logic <> excluded_middle def
R55598:55612 Logic <> excluded_middle def
R55622:55624 Coq.Init.Logic <> not def
def 56284:56289 <> peirce
R56327:56327 Logic <> P var
R56323:56323 Logic <> P var
R56319:56319 Logic <> Q var
R56316:56316 Logic <> P var
def 56342:56368 <> double_negation_elimination
R56397:56397 Logic <> P var
R56390:56390 Coq.Init.Logic <> :type_scope:'~'_x not
R56391:56391 Coq.Init.Logic <> :type_scope:'~'_x not
R56392:56392 Logic <> P var
def 56412:56432 <> de_morgan_not_and_not
R56472:56473 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56471:56471 Logic <> P var
R56474:56474 Logic <> Q var
R56456:56457 Coq.Init.Logic <> :type_scope:'~'_x not
R56466:56466 Coq.Init.Logic <> :type_scope:'~'_x not
R56460:56463 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R56458:56458 Coq.Init.Logic <> :type_scope:'~'_x not
R56459:56459 Logic <> P var
R56464:56464 Coq.Init.Logic <> :type_scope:'~'_x not
R56465:56465 Logic <> Q var
def 56489:56501 <> implies_to_or
R56538:56539 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R56536:56536 Coq.Init.Logic <> :type_scope:'~'_x not
R56537:56537 Logic <> P var
R56540:56540 Logic <> Q var
R56529:56529 Logic <> Q var
R56526:56526 Logic <> P var
prf 56553:56562 <> lem_peirce
R56581:56585 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R56566:56580 Logic <> excluded_middle def
R56586:56591 Logic <> peirce def
R56610:56624 Logic <> excluded_middle def
R56634:56639 Logic <> peirce def
R56649:56651 Coq.Init.Logic <> not def
R56827:56831 Coq.Init.Logic <> False ind
R56827:56831 Coq.Init.Logic <> False ind
prf 56909:56922 <> lem_double_neg
R56941:56945 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R56926:56940 Logic <> excluded_middle def
R56946:56972 Logic <> double_negation_elimination def
R56991:57005 Logic <> excluded_middle def
R57015:57041 Logic <> double_negation_elimination def
R57051:57053 Coq.Init.Logic <> not def
prf 57215:57229 <> lem_not_and_not
R57248:57252 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R57233:57247 Logic <> excluded_middle def
R57253:57273 Logic <> de_morgan_not_and_not def
R57292:57312 Logic <> de_morgan_not_and_not def
R57322:57336 Logic <> excluded_middle def
R57346:57348 Coq.Init.Logic <> not def
prf 57533:57549 <> lem_implies_to_or
R57568:57572 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R57553:57567 Logic <> excluded_middle def
R57573:57585 Logic <> implies_to_or def
R57604:57618 Logic <> excluded_middle def
R57628:57640 Logic <> implies_to_or def
R57650:57652 Coq.Init.Logic <> not def
R57721:57727 Coq.Init.Logic <> or_comm thm
R57721:57727 Coq.Init.Logic <> or_comm thm
