DIGEST b3d08633f32197808466e41c604ff231
FImp
R1032:1044 Coq.Bool.Bool <> <> lib
R1062:1076 Coq.Arith.Arith <> <> lib
R1094:1108 Coq.Arith.EqNat <> <> lib
R1126:1140 Coq.omega.Omega <> <> lib
R1158:1171 Coq.Lists.List <> <> lib
R1212:1215 Maps <> <> lib
mod 1716:1719 <> AExp
ind 1836:1839 AExp aexp
constr 1855:1858 AExp ANum
constr 1878:1882 AExp APlus
constr 1911:1916 AExp AMinus
constr 1945:1949 AExp AMult
R1869:1872 Imp <> aexp ind
R1862:1864 Coq.Init.Datatypes <> nat ind
R1902:1905 Imp <> aexp ind
R1894:1897 Imp <> aexp ind
R1886:1889 Imp <> aexp ind
R1936:1939 Imp <> aexp ind
R1928:1931 Imp <> aexp ind
R1920:1923 Imp <> aexp ind
R1969:1972 Imp <> aexp ind
R1961:1964 Imp <> aexp ind
R1953:1956 Imp <> aexp ind
ind 1986:1989 AExp bexp
constr 2005:2009 AExp BTrue
constr 2022:2027 AExp BFalse
constr 2040:2042 AExp BEq
constr 2071:2073 AExp BLe
constr 2102:2105 AExp BNot
constr 2126:2129 AExp BAnd
R2013:2016 Imp <> bexp ind
R2031:2034 Imp <> bexp ind
R2062:2065 Imp <> bexp ind
R2054:2057 Imp AExp aexp ind
R2046:2049 Imp AExp aexp ind
R2093:2096 Imp <> bexp ind
R2085:2088 Imp AExp aexp ind
R2077:2080 Imp AExp aexp ind
R2117:2120 Imp <> bexp ind
R2109:2112 Imp <> bexp ind
R2149:2152 Imp <> bexp ind
R2141:2144 Imp <> bexp ind
R2133:2136 Imp <> bexp ind
def 4819:4823 AExp aeval
R4830:4833 Imp AExp aexp ind
R4838:4840 Coq.Init.Datatypes <> nat ind
R4853:4853 Imp <> a var
R4864:4867 Imp AExp ANum constr
R4880:4884 Imp AExp APlus constr
R4895:4895 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4904:4908 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4917:4917 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4896:4900 Imp <> aeval def
R4909:4913 Imp <> aeval def
R4923:4928 Imp AExp AMinus constr
R4940:4940 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4949:4953 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4962:4962 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4941:4945 Imp <> aeval def
R4954:4958 Imp <> aeval def
R4968:4972 Imp AExp AMult constr
R4983:4983 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4992:4996 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5005:5005 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R4984:4988 Imp <> aeval def
R4997:5001 Imp <> aeval def
def 5023:5033 AExp test_aeval1
R5069:5071 Coq.Init.Logic <> :type_scope:x_'='_x not
R5038:5042 Imp AExp aeval def
R5045:5049 Imp AExp APlus constr
R5061:5064 Imp AExp ANum constr
R5052:5055 Imp AExp ANum constr
def 5179:5183 AExp beval
R5190:5193 Imp AExp bexp ind
R5198:5201 Coq.Init.Datatypes <> bool ind
R5214:5214 Imp <> b var
R5225:5229 Imp AExp BTrue constr
R5240:5243 Coq.Init.Datatypes <> true constr
R5249:5254 Imp AExp BFalse constr
R5264:5268 Coq.Init.Datatypes <> false constr
R5274:5276 Imp AExp BEq constr
R5289:5295 Coq.Arith.EqNat <> beq_nat def
R5309:5313 Imp AExp aeval def
R5298:5302 Imp AExp aeval def
R5323:5325 Imp AExp BLe constr
R5338:5340 Coq.Arith.Compare_dec <> leb def
R5354:5358 Imp AExp aeval def
R5343:5347 Imp AExp aeval def
R5368:5371 Imp AExp BNot constr
R5383:5386 Coq.Init.Datatypes <> negb def
R5389:5393 Imp <> beval def
R5403:5406 Imp AExp BAnd constr
R5418:5421 Coq.Init.Datatypes <> andb def
R5435:5439 Imp <> beval def
R5424:5428 Imp <> beval def
def 5848:5861 AExp optimize_0plus
R5866:5869 Imp AExp aexp ind
R5874:5877 Imp AExp aexp ind
R5890:5890 Imp <> a var
R5901:5904 Imp AExp ANum constr
R5917:5920 Imp AExp ANum constr
R5928:5932 Imp AExp APlus constr
R5935:5938 Imp AExp ANum constr
R5955:5968 Imp <> optimize_0plus def
R5977:5981 Imp AExp APlus constr
R5998:6002 Imp AExp APlus constr
R6025:6038 Imp <> optimize_0plus def
R6005:6018 Imp <> optimize_0plus def
R6048:6053 Imp AExp AMinus constr
R6070:6075 Imp AExp AMinus constr
R6098:6111 Imp <> optimize_0plus def
R6078:6091 Imp <> optimize_0plus def
R6121:6125 Imp AExp AMult constr
R6142:6146 Imp AExp AMult constr
R6169:6182 Imp <> optimize_0plus def
R6149:6162 Imp <> optimize_0plus def
def 6335:6353 AExp test_optimize_0plus
R6487:6491 Coq.Init.Logic <> :type_scope:x_'='_x not
R6358:6371 Imp AExp optimize_0plus def
R6374:6378 Imp AExp APlus constr
R6414:6418 Imp AExp APlus constr
R6461:6465 Imp AExp APlus constr
R6477:6480 Imp AExp ANum constr
R6468:6471 Imp AExp ANum constr
R6421:6424 Imp AExp ANum constr
R6381:6384 Imp AExp ANum constr
R6492:6496 Imp AExp APlus constr
R6508:6511 Imp AExp ANum constr
R6499:6502 Imp AExp ANum constr
prf 6731:6750 AExp optimize_0plus_sound
R6789:6791 Coq.Init.Logic <> :type_scope:x_'='_x not
R6765:6769 Imp AExp aeval def
R6772:6785 Imp AExp optimize_0plus def
R6787:6787 Imp <> a var
R6792:6796 Imp AExp aeval def
R6798:6798 Imp <> a var
prf 8923:8928 AExp silly1
R8951:8953 Coq.Init.Logic <> :type_scope:x_'='_x not
R8943:8947 Imp AExp aeval def
R8949:8950 Imp <> ae var
R8954:8958 Imp AExp aeval def
R8960:8961 Imp <> ae var
prf 9037:9042 AExp silly2
R9070:9070 Imp <> P var
R9065:9065 Imp <> P var
prf 9809:9811 AExp foo
R9832:9834 Coq.Init.Logic <> :type_scope:x_'='_x not
R9825:9827 Coq.Arith.Compare_dec <> leb def
R9831:9831 Imp <> n var
R9835:9838 Coq.Init.Datatypes <> true constr
prf 10085:10088 AExp foo'
R10109:10111 Coq.Init.Logic <> :type_scope:x_'='_x not
R10102:10104 Coq.Arith.Compare_dec <> leb def
R10108:10108 Imp <> n var
R10112:10115 Coq.Init.Datatypes <> true constr
prf 10452:10472 AExp optimize_0plus_sound'
R10511:10513 Coq.Init.Logic <> :type_scope:x_'='_x not
R10487:10491 Imp AExp aeval def
R10494:10507 Imp AExp optimize_0plus def
R10509:10509 Imp <> a var
R10514:10518 Imp AExp aeval def
R10520:10520 Imp <> a var
prf 13343:13364 AExp optimize_0plus_sound''
R13403:13405 Coq.Init.Logic <> :type_scope:x_'='_x not
R13379:13383 Imp AExp aeval def
R13386:13399 Imp AExp optimize_0plus def
R13401:13401 Imp <> a var
R13406:13410 Imp AExp aeval def
R13412:13412 Imp <> a var
prf 14773:14776 AExp In10
R14780:14781 Coq.Lists.List <> In def
R14786:14786 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14788:14788 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14790:14790 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14792:14792 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14794:14794 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14796:14796 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14798:14798 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14800:14800 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14802:14802 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14804:14804 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R14807:14807 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
prf 15072:15076 AExp In10'
R15080:15081 Coq.Lists.List <> In def
R15086:15086 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15088:15088 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15090:15090 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15092:15092 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15094:15094 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15096:15096 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15098:15098 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15100:15100 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15102:15102 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15104:15104 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R15107:15107 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 16309:16324 AExp optimize_0plus_b
R16331:16334 Imp AExp bexp ind
R16339:16342 Imp AExp bexp ind
R16353:16353 Imp <> b var
R16364:16368 Imp AExp BTrue constr
R16373:16377 Imp AExp BTrue constr
R16383:16388 Imp AExp BFalse constr
R16393:16398 Imp AExp BFalse constr
R16404:16406 Imp AExp BEq constr
R16417:16419 Imp AExp BEq constr
R16442:16455 Imp AExp optimize_0plus def
R16422:16435 Imp AExp optimize_0plus def
R16465:16467 Imp AExp BLe constr
R16478:16480 Imp AExp BLe constr
R16503:16516 Imp AExp optimize_0plus def
R16483:16496 Imp AExp optimize_0plus def
R16526:16529 Imp AExp BNot constr
R16536:16539 Imp AExp BNot constr
R16541:16541 Imp <> b var
R16547:16550 Imp AExp BAnd constr
R16561:16564 Imp AExp BAnd constr
prf 16586:16607 AExp optimize_0plus_b_sound
R16649:16651 Coq.Init.Logic <> :type_scope:x_'='_x not
R16623:16627 Imp AExp beval def
R16630:16645 Imp AExp optimize_0plus_b def
R16647:16647 Imp <> b var
R16652:16656 Imp AExp beval def
R16658:16658 Imp <> b var
R16719:16738 Imp AExp optimize_0plus_sound thm
R16719:16738 Imp AExp optimize_0plus_sound thm
R16719:16738 Imp AExp optimize_0plus_sound thm
R16719:16738 Imp AExp optimize_0plus_sound thm
R16771:16790 Imp AExp optimize_0plus_sound thm
R16771:16790 Imp AExp optimize_0plus_sound thm
R16771:16790 Imp AExp optimize_0plus_sound thm
R16771:16790 Imp AExp optimize_0plus_sound thm
R19698:19712 Coq.omega.Omega <> <> lib
def 19724:19747 AExp silly_presburger_example
R19807:19810 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19806:19806 Imp <> m var
R19811:19811 Imp <> p var
R19783:19786 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19774:19777 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19770:19772 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19769:19769 Imp <> m var
R19773:19773 Imp <> n var
R19779:19781 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19778:19778 Imp <> n var
R19782:19782 Imp <> o var
R19792:19794 Coq.Init.Logic <> :type_scope:x_'='_x not
R19788:19790 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19787:19787 Imp <> o var
R19796:19798 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19795:19795 Imp <> p var
mod 21626:21641 <> AExp.aevalR_first_try
ind 21655:21660 AExp.aevalR_first_try aevalR
constr 21691:21696 AExp.aevalR_first_try E_ANum
constr 21746:21752 AExp.aevalR_first_try E_APlus
constr 21876:21883 AExp.aevalR_first_try E_AMinus
constr 22007:22013 AExp.aevalR_first_try E_AMult
R21672:21674 Coq.Init.Datatypes <> nat ind
R21664:21667 Imp AExp.aevalR_first_try aexp ind
R21712:21714 Coq.Init.Datatypes <> nat ind
R21724:21729 Imp <> aevalR ind
R21740:21740 Imp <> n var
R21732:21735 Imp AExp.aevalR_first_try ANum constr
R21737:21737 Imp <> n var
R21771:21774 Imp AExp.aevalR_first_try aexp ind
R21785:21787 Coq.Init.Datatypes <> nat ind
R21841:21846 Imp <> aevalR ind
R21865:21867 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21863:21864 Imp <> n1 var
R21868:21869 Imp <> n2 var
R21849:21853 Imp AExp.aevalR_first_try APlus constr
R21858:21859 Imp <> e2 var
R21855:21856 Imp <> e1 var
R21819:21824 Imp <> aevalR ind
R21829:21830 Imp <> n2 var
R21826:21827 Imp <> e2 var
R21797:21802 Imp <> aevalR ind
R21807:21808 Imp <> n1 var
R21804:21805 Imp <> e1 var
R21901:21904 Imp AExp.aevalR_first_try aexp ind
R21915:21917 Coq.Init.Datatypes <> nat ind
R21971:21976 Imp <> aevalR ind
R21996:21998 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R21994:21995 Imp <> n1 var
R21999:22000 Imp <> n2 var
R21979:21984 Imp AExp.aevalR_first_try AMinus constr
R21989:21990 Imp <> e2 var
R21986:21987 Imp <> e1 var
R21949:21954 Imp <> aevalR ind
R21959:21960 Imp <> n2 var
R21956:21957 Imp <> e2 var
R21927:21932 Imp <> aevalR ind
R21937:21938 Imp <> n1 var
R21934:21935 Imp <> e1 var
R22032:22035 Imp AExp.aevalR_first_try aexp ind
R22046:22048 Coq.Init.Datatypes <> nat ind
R22102:22107 Imp <> aevalR ind
R22126:22128 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R22124:22125 Imp <> n1 var
R22129:22130 Imp <> n2 var
R22110:22114 Imp AExp.aevalR_first_try AMult constr
R22119:22120 Imp <> e2 var
R22116:22117 Imp <> e1 var
R22080:22085 Imp <> aevalR ind
R22090:22091 Imp <> n2 var
R22087:22088 Imp <> e2 var
R22058:22063 Imp <> aevalR ind
R22068:22069 Imp <> n1 var
R22065:22066 Imp <> e1 var
R22652:22657 Imp AExp.aevalR_first_try aevalR ind
not 22628 AExp.aevalR_first_try :type_scope:x_'\\'_x
R22738:22753 Imp aevalR_first_try <> mod
ind 23284:23289 AExp aevalR
constr 23320:23325 AExp E_ANum
constr 23369:23375 AExp E_APlus
constr 23480:23487 AExp E_AMinus
constr 23593:23599 AExp E_AMult
R23301:23303 Coq.Init.Datatypes <> nat ind
R23293:23296 Imp AExp aexp ind
R23725:23730 Imp <> aevalR ind
R23339:23341 Coq.Init.Datatypes <> nat ind
R23351:23351 Imp AExp :type_scope:x_'\\'_x not
R23358:23362 Imp AExp :type_scope:x_'\\'_x not
R23352:23355 Imp AExp ANum constr
R23357:23357 Imp <> n var
R23363:23363 Imp <> n var
R23394:23397 Imp AExp aexp ind
R23409:23411 Coq.Init.Datatypes <> nat ind
R23449:23449 Imp AExp :type_scope:x_'\\'_x not
R23461:23466 Imp AExp :type_scope:x_'\\'_x not
R23474:23474 Imp AExp :type_scope:x_'\\'_x not
R23450:23454 Imp AExp APlus constr
R23459:23460 Imp <> e2 var
R23456:23457 Imp <> e1 var
R23469:23471 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23467:23468 Imp <> n1 var
R23472:23473 Imp <> n2 var
R23438:23441 Imp AExp :type_scope:x_'\\'_x not
R23436:23437 Imp <> e2 var
R23442:23443 Imp <> n2 var
R23424:23427 Imp AExp :type_scope:x_'\\'_x not
R23422:23423 Imp <> e1 var
R23428:23429 Imp <> n1 var
R23506:23509 Imp AExp aexp ind
R23521:23523 Coq.Init.Datatypes <> nat ind
R23561:23561 Imp AExp :type_scope:x_'\\'_x not
R23574:23579 Imp AExp :type_scope:x_'\\'_x not
R23587:23587 Imp AExp :type_scope:x_'\\'_x not
R23562:23567 Imp AExp AMinus constr
R23572:23573 Imp <> e2 var
R23569:23570 Imp <> e1 var
R23582:23584 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23580:23581 Imp <> n1 var
R23585:23586 Imp <> n2 var
R23550:23553 Imp AExp :type_scope:x_'\\'_x not
R23548:23549 Imp <> e2 var
R23554:23555 Imp <> n2 var
R23536:23539 Imp AExp :type_scope:x_'\\'_x not
R23534:23535 Imp <> e1 var
R23540:23541 Imp <> n1 var
R23619:23622 Imp AExp aexp ind
R23634:23636 Coq.Init.Datatypes <> nat ind
R23674:23674 Imp AExp :type_scope:x_'\\'_x not
R23686:23691 Imp AExp :type_scope:x_'\\'_x not
R23699:23699 Imp AExp :type_scope:x_'\\'_x not
R23675:23679 Imp AExp AMult constr
R23684:23685 Imp <> e2 var
R23681:23682 Imp <> e1 var
R23694:23696 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23692:23693 Imp <> n1 var
R23697:23698 Imp <> n2 var
R23663:23666 Imp AExp :type_scope:x_'\\'_x not
R23661:23662 Imp <> e2 var
R23667:23668 Imp <> n2 var
R23649:23652 Imp AExp :type_scope:x_'\\'_x not
R23647:23648 Imp <> e1 var
R23653:23654 Imp <> n1 var
R23725:23730 Imp AExp aevalR ind
not 23710 AExp :type_scope:x_'\\'_x
prf 26599:26614 AExp aeval_iff_aevalR
R26632:26632 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26639:26644 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26634:26637 Imp AExp :type_scope:x_'\\'_x not
R26633:26633 Imp <> a var
R26638:26638 Imp <> n var
R26652:26654 Coq.Init.Logic <> :type_scope:x_'='_x not
R26645:26649 Imp AExp aeval def
R26651:26651 Imp <> a var
R26655:26655 Imp <> n var
R27099:27104 Imp AExp E_ANum constr
R27099:27104 Imp AExp E_ANum constr
R27135:27141 Imp AExp E_APlus constr
R27135:27141 Imp AExp E_APlus constr
R27235:27242 Imp AExp E_AMinus constr
R27235:27242 Imp AExp E_AMinus constr
R27335:27341 Imp AExp E_AMult constr
R27335:27341 Imp AExp E_AMult constr
prf 27507:27523 AExp aeval_iff_aevalR'
R27541:27541 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27548:27553 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27543:27546 Imp AExp :type_scope:x_'\\'_x not
R27542:27542 Imp <> a var
R27547:27547 Imp <> n var
R27561:27563 Coq.Init.Logic <> :type_scope:x_'='_x not
R27554:27558 Imp AExp aeval def
R27560:27560 Imp <> a var
R27564:27564 Imp <> n var
ind 27981:27986 AExp bevalR
constr 28017:28023 AExp E_BTrue
constr 28049:28056 AExp E_BFalse
constr 28084:28088 AExp E_BEq
constr 28188:28192 AExp E_BLe
constr 28283:28288 AExp E_BNot
constr 28347:28352 AExp E_BAnd
R27997:28000 Coq.Init.Datatypes <> bool ind
R27989:27992 Imp AExp bexp ind
R28027:28032 Imp <> bevalR ind
R28040:28043 Coq.Init.Datatypes <> true constr
R28034:28038 Imp AExp BTrue constr
R28060:28065 Imp <> bevalR ind
R28074:28078 Coq.Init.Datatypes <> false constr
R28067:28072 Imp AExp BFalse constr
R28149:28154 Imp <> bevalR ind
R28169:28175 Coq.Arith.EqNat <> beq_nat def
R28180:28181 Imp <> n2 var
R28177:28178 Imp <> n1 var
R28157:28159 Imp AExp BEq constr
R28164:28165 Imp <> e2 var
R28161:28162 Imp <> e1 var
R28133:28136 Imp AExp :type_scope:x_'\\'_x not
R28131:28132 Imp <> e2 var
R28137:28138 Imp <> n2 var
R28119:28122 Imp AExp :type_scope:x_'\\'_x not
R28117:28118 Imp <> e1 var
R28123:28124 Imp <> n1 var
R28248:28253 Imp <> bevalR ind
R28268:28270 Coq.Arith.Compare_dec <> leb def
R28275:28276 Imp <> n2 var
R28272:28273 Imp <> n1 var
R28256:28258 Imp AExp BLe constr
R28263:28264 Imp <> e2 var
R28260:28261 Imp <> e1 var
R28237:28240 Imp AExp :type_scope:x_'\\'_x not
R28235:28236 Imp <> e2 var
R28241:28242 Imp <> n2 var
R28223:28226 Imp AExp :type_scope:x_'\\'_x not
R28221:28222 Imp <> e1 var
R28227:28228 Imp <> n1 var
R28318:28323 Imp <> bevalR ind
R28335:28338 Coq.Init.Datatypes <> negb def
R28340:28340 Imp <> b var
R28326:28329 Imp AExp BNot constr
R28331:28331 Imp <> e var
R28304:28309 Imp <> bevalR ind
R28313:28313 Imp <> b var
R28311:28311 Imp <> e var
R28418:28423 Imp <> bevalR ind
R28441:28444 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R28439:28440 Imp <> b1 var
R28445:28446 Imp <> b2 var
R28426:28429 Imp AExp BAnd constr
R28434:28435 Imp <> e2 var
R28431:28432 Imp <> e1 var
R28397:28402 Imp <> bevalR ind
R28407:28408 Imp <> b2 var
R28404:28405 Imp <> e2 var
R28381:28386 Imp <> bevalR ind
R28391:28392 Imp <> b1 var
R28388:28389 Imp <> e1 var
prf 28457:28472 AExp beval_iff_bevalR
R28502:28506 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28491:28496 Imp AExp bevalR ind
R28500:28501 Imp <> bv var
R28498:28498 Imp <> b var
R28514:28516 Coq.Init.Logic <> :type_scope:x_'='_x not
R28507:28511 Imp AExp beval def
R28513:28513 Imp <> b var
R28517:28518 Imp <> bv var
R28587:28602 Imp AExp aeval_iff_aevalR thm
R28587:28602 Imp AExp aeval_iff_aevalR thm
R28616:28631 Imp AExp aeval_iff_aevalR thm
R28616:28631 Imp AExp aeval_iff_aevalR thm
R28654:28669 Imp AExp aeval_iff_aevalR thm
R28654:28669 Imp AExp aeval_iff_aevalR thm
R28683:28698 Imp AExp aeval_iff_aevalR thm
R28683:28698 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28841:28856 Imp AExp aeval_iff_aevalR thm
R28888:28891 Imp <> <> mod
mod 29354:29368 <> aevalR_division
ind 29507:29510 aevalR_division aexp
constr 29526:29529 aevalR_division ANum
constr 29549:29553 aevalR_division APlus
constr 29582:29587 aevalR_division AMinus
constr 29616:29620 aevalR_division AMult
constr 29649:29652 aevalR_division ADiv
R29540:29543 Imp <> aexp ind
R29533:29535 Coq.Init.Datatypes <> nat ind
R29573:29576 Imp <> aexp ind
R29565:29568 Imp <> aexp ind
R29557:29560 Imp <> aexp ind
R29607:29610 Imp <> aexp ind
R29599:29602 Imp <> aexp ind
R29591:29594 Imp <> aexp ind
R29640:29643 Imp <> aexp ind
R29632:29635 Imp <> aexp ind
R29624:29627 Imp <> aexp ind
R29672:29675 Imp <> aexp ind
R29664:29667 Imp <> aexp ind
R29656:29659 Imp <> aexp ind
ind 30015:30020 aevalR_division aevalR
constr 30051:30056 aevalR_division E_ANum
constr 30100:30106 aevalR_division E_APlus
constr 30211:30218 aevalR_division E_AMinus
constr 30324:30330 aevalR_division E_AMult
constr 30436:30441 aevalR_division E_ADiv
R30032:30034 Coq.Init.Datatypes <> nat ind
R30024:30027 Imp aevalR_division aexp ind
R30598:30603 Imp <> aevalR ind
R30070:30072 Coq.Init.Datatypes <> nat ind
R30082:30082 Imp aevalR_division :type_scope:x_'\\'_x not
R30089:30093 Imp aevalR_division :type_scope:x_'\\'_x not
R30083:30086 Imp aevalR_division ANum constr
R30088:30088 Imp <> n var
R30094:30094 Imp <> n var
R30125:30128 Imp aevalR_division aexp ind
R30140:30142 Coq.Init.Datatypes <> nat ind
R30180:30180 Imp aevalR_division :type_scope:x_'\\'_x not
R30192:30197 Imp aevalR_division :type_scope:x_'\\'_x not
R30205:30205 Imp aevalR_division :type_scope:x_'\\'_x not
R30181:30185 Imp aevalR_division APlus constr
R30190:30191 Imp <> a2 var
R30187:30188 Imp <> a1 var
R30200:30202 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30198:30199 Imp <> n1 var
R30203:30204 Imp <> n2 var
R30169:30172 Imp aevalR_division :type_scope:x_'\\'_x not
R30167:30168 Imp <> a2 var
R30173:30174 Imp <> n2 var
R30155:30158 Imp aevalR_division :type_scope:x_'\\'_x not
R30153:30154 Imp <> a1 var
R30159:30160 Imp <> n1 var
R30237:30240 Imp aevalR_division aexp ind
R30252:30254 Coq.Init.Datatypes <> nat ind
R30292:30292 Imp aevalR_division :type_scope:x_'\\'_x not
R30305:30310 Imp aevalR_division :type_scope:x_'\\'_x not
R30318:30318 Imp aevalR_division :type_scope:x_'\\'_x not
R30293:30298 Imp aevalR_division AMinus constr
R30303:30304 Imp <> a2 var
R30300:30301 Imp <> a1 var
R30313:30315 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R30311:30312 Imp <> n1 var
R30316:30317 Imp <> n2 var
R30281:30284 Imp aevalR_division :type_scope:x_'\\'_x not
R30279:30280 Imp <> a2 var
R30285:30286 Imp <> n2 var
R30267:30270 Imp aevalR_division :type_scope:x_'\\'_x not
R30265:30266 Imp <> a1 var
R30271:30272 Imp <> n1 var
R30350:30353 Imp aevalR_division aexp ind
R30365:30367 Coq.Init.Datatypes <> nat ind
R30405:30405 Imp aevalR_division :type_scope:x_'\\'_x not
R30417:30422 Imp aevalR_division :type_scope:x_'\\'_x not
R30430:30430 Imp aevalR_division :type_scope:x_'\\'_x not
R30406:30410 Imp aevalR_division AMult constr
R30415:30416 Imp <> a2 var
R30412:30413 Imp <> a1 var
R30425:30427 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R30423:30424 Imp <> n1 var
R30428:30429 Imp <> n2 var
R30394:30397 Imp aevalR_division :type_scope:x_'\\'_x not
R30392:30393 Imp <> a2 var
R30398:30399 Imp <> n2 var
R30380:30383 Imp aevalR_division :type_scope:x_'\\'_x not
R30378:30379 Imp <> a1 var
R30384:30385 Imp <> n1 var
R30461:30464 Imp aevalR_division aexp ind
R30478:30480 Coq.Init.Datatypes <> nat ind
R30557:30557 Imp aevalR_division :type_scope:x_'\\'_x not
R30568:30572 Imp aevalR_division :type_scope:x_'\\'_x not
R30558:30561 Imp aevalR_division ADiv constr
R30566:30567 Imp <> a2 var
R30563:30564 Imp <> a1 var
R30573:30574 Imp <> n3 var
R30547:30549 Coq.Init.Logic <> :type_scope:x_'='_x not
R30537:30540 Coq.Init.Peano <> mult def
R30545:30546 Imp <> n3 var
R30542:30543 Imp <> n2 var
R30550:30551 Imp <> n1 var
R30521:30523 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R30519:30520 Imp <> n2 var
R30507:30510 Imp aevalR_division :type_scope:x_'\\'_x not
R30505:30506 Imp <> a2 var
R30511:30512 Imp <> n2 var
R30493:30496 Imp aevalR_division :type_scope:x_'\\'_x not
R30491:30492 Imp <> a1 var
R30497:30498 Imp <> n1 var
R30598:30603 Imp aevalR_division aevalR ind
not 30583 aevalR_division :type_scope:x_'\\'_x
R30629:30643 Imp <> <> mod
mod 30654:30668 <> aevalR_extended
ind 31217:31220 aevalR_extended aexp
constr 31236:31239 aevalR_extended AAny
constr 31286:31289 aevalR_extended ANum
constr 31309:31313 aevalR_extended APlus
constr 31342:31347 aevalR_extended AMinus
constr 31376:31380 aevalR_extended AMult
R31244:31247 Imp <> aexp ind
R31300:31303 Imp <> aexp ind
R31293:31295 Coq.Init.Datatypes <> nat ind
R31333:31336 Imp <> aexp ind
R31325:31328 Imp <> aexp ind
R31317:31320 Imp <> aexp ind
R31367:31370 Imp <> aexp ind
R31359:31362 Imp <> aexp ind
R31351:31354 Imp <> aexp ind
R31400:31403 Imp <> aexp ind
R31392:31395 Imp <> aexp ind
R31384:31387 Imp <> aexp ind
ind 31597:31602 aevalR_extended aevalR
constr 31633:31637 aevalR_extended E_Any
constr 31708:31713 aevalR_extended E_ANum
constr 31757:31763 aevalR_extended E_APlus
constr 31868:31875 aevalR_extended E_AMinus
constr 31981:31987 aevalR_extended E_AMult
R31614:31616 Coq.Init.Datatypes <> nat ind
R31606:31609 Imp aevalR_extended aexp ind
R32111:32116 Imp <> aevalR ind
R31651:31653 Coq.Init.Datatypes <> nat ind
R31667:31670 Imp aevalR_extended :type_scope:x_'\\'_x not
R31663:31666 Imp aevalR_extended AAny constr
R31671:31671 Imp <> n var
R31727:31729 Coq.Init.Datatypes <> nat ind
R31739:31739 Imp aevalR_extended :type_scope:x_'\\'_x not
R31746:31750 Imp aevalR_extended :type_scope:x_'\\'_x not
R31740:31743 Imp aevalR_extended ANum constr
R31745:31745 Imp <> n var
R31751:31751 Imp <> n var
R31782:31785 Imp aevalR_extended aexp ind
R31797:31799 Coq.Init.Datatypes <> nat ind
R31837:31837 Imp aevalR_extended :type_scope:x_'\\'_x not
R31849:31854 Imp aevalR_extended :type_scope:x_'\\'_x not
R31862:31862 Imp aevalR_extended :type_scope:x_'\\'_x not
R31838:31842 Imp aevalR_extended APlus constr
R31847:31848 Imp <> a2 var
R31844:31845 Imp <> a1 var
R31857:31859 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31855:31856 Imp <> n1 var
R31860:31861 Imp <> n2 var
R31826:31829 Imp aevalR_extended :type_scope:x_'\\'_x not
R31824:31825 Imp <> a2 var
R31830:31831 Imp <> n2 var
R31812:31815 Imp aevalR_extended :type_scope:x_'\\'_x not
R31810:31811 Imp <> a1 var
R31816:31817 Imp <> n1 var
R31894:31897 Imp aevalR_extended aexp ind
R31909:31911 Coq.Init.Datatypes <> nat ind
R31949:31949 Imp aevalR_extended :type_scope:x_'\\'_x not
R31962:31967 Imp aevalR_extended :type_scope:x_'\\'_x not
R31975:31975 Imp aevalR_extended :type_scope:x_'\\'_x not
R31950:31955 Imp aevalR_extended AMinus constr
R31960:31961 Imp <> a2 var
R31957:31958 Imp <> a1 var
R31970:31972 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R31968:31969 Imp <> n1 var
R31973:31974 Imp <> n2 var
R31938:31941 Imp aevalR_extended :type_scope:x_'\\'_x not
R31936:31937 Imp <> a2 var
R31942:31943 Imp <> n2 var
R31924:31927 Imp aevalR_extended :type_scope:x_'\\'_x not
R31922:31923 Imp <> a1 var
R31928:31929 Imp <> n1 var
R32007:32010 Imp aevalR_extended aexp ind
R32022:32024 Coq.Init.Datatypes <> nat ind
R32062:32062 Imp aevalR_extended :type_scope:x_'\\'_x not
R32074:32079 Imp aevalR_extended :type_scope:x_'\\'_x not
R32087:32087 Imp aevalR_extended :type_scope:x_'\\'_x not
R32063:32067 Imp aevalR_extended AMult constr
R32072:32073 Imp <> a2 var
R32069:32070 Imp <> a1 var
R32082:32084 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R32080:32081 Imp <> n1 var
R32085:32086 Imp <> n2 var
R32051:32054 Imp aevalR_extended :type_scope:x_'\\'_x not
R32049:32050 Imp <> a2 var
R32055:32056 Imp <> n2 var
R32037:32040 Imp aevalR_extended :type_scope:x_'\\'_x not
R32035:32036 Imp <> a1 var
R32041:32042 Imp <> n1 var
R32111:32116 Imp aevalR_extended aevalR ind
not 32096 aevalR_extended :type_scope:x_'\\'_x
R32142:32156 Imp <> <> mod
def 34925:34929 <> state
R34934:34942 Maps <> total_map def
R34944:34946 Coq.Init.Datatypes <> nat ind
def 34961:34971 <> empty_state
R34975:34979 Imp <> state def
R34986:34992 Maps <> t_empty def
ind 35215:35218 <> aexp
constr 35234:35237 <> ANum
constr 35257:35259 <> AId
constr 35310:35314 <> APlus
constr 35343:35348 <> AMinus
constr 35377:35381 <> AMult
R35248:35251 Imp <> aexp ind
R35241:35243 Coq.Init.Datatypes <> nat ind
R35269:35272 Imp <> aexp ind
R35263:35264 Maps <> id ind
R35334:35337 Imp <> aexp ind
R35326:35329 Imp <> aexp ind
R35318:35321 Imp <> aexp ind
R35368:35371 Imp <> aexp ind
R35360:35363 Imp <> aexp ind
R35352:35355 Imp <> aexp ind
R35401:35404 Imp <> aexp ind
R35393:35396 Imp <> aexp ind
R35385:35388 Imp <> aexp ind
def 35521:35521 <> W
R35525:35526 Maps <> id ind
R35531:35532 Maps <> Id constr
def 35550:35550 <> X
R35554:35555 Maps <> id ind
R35560:35561 Maps <> Id constr
def 35579:35579 <> Y
R35583:35584 Maps <> id ind
R35589:35590 Maps <> Id constr
def 35608:35608 <> Z
R35612:35613 Maps <> id ind
R35618:35619 Maps <> Id constr
ind 35995:35998 <> bexp
constr 36014:36018 <> BTrue
constr 36031:36036 <> BFalse
constr 36049:36051 <> BEq
constr 36080:36082 <> BLe
constr 36111:36114 <> BNot
constr 36135:36138 <> BAnd
R36022:36025 Imp <> bexp ind
R36040:36043 Imp <> bexp ind
R36071:36074 Imp <> bexp ind
R36063:36066 Imp <> aexp ind
R36055:36058 Imp <> aexp ind
R36102:36105 Imp <> bexp ind
R36094:36097 Imp <> aexp ind
R36086:36089 Imp <> aexp ind
R36126:36129 Imp <> bexp ind
R36118:36121 Imp <> bexp ind
R36158:36161 Imp <> bexp ind
R36150:36153 Imp <> bexp ind
R36142:36145 Imp <> bexp ind
def 36447:36451 <> aeval
R36459:36463 Imp <> state def
R36471:36474 Imp <> aexp ind
R36479:36481 Coq.Init.Datatypes <> nat ind
R36494:36494 Imp <> a var
R36505:36508 Imp <> ANum constr
R36521:36523 Imp <> AId constr
R36530:36531 Imp <> st var
R36587:36591 Imp <> APlus constr
R36602:36602 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36614:36618 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36630:36630 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36603:36607 Imp <> aeval def
R36609:36610 Imp <> st var
R36619:36623 Imp <> aeval def
R36625:36626 Imp <> st var
R36636:36641 Imp <> AMinus constr
R36653:36653 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36665:36669 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36681:36681 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36654:36658 Imp <> aeval def
R36660:36661 Imp <> st var
R36670:36674 Imp <> aeval def
R36676:36677 Imp <> st var
R36687:36691 Imp <> AMult constr
R36702:36702 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36714:36718 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36730:36730 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36703:36707 Imp <> aeval def
R36709:36710 Imp <> st var
R36719:36723 Imp <> aeval def
R36725:36726 Imp <> st var
def 36749:36753 <> beval
R36761:36765 Imp <> state def
R36773:36776 Imp <> bexp ind
R36781:36784 Coq.Init.Datatypes <> bool ind
R36797:36797 Imp <> b var
R36808:36812 Imp <> BTrue constr
R36823:36826 Coq.Init.Datatypes <> true constr
R36832:36837 Imp <> BFalse constr
R36847:36851 Coq.Init.Datatypes <> false constr
R36857:36859 Imp <> BEq constr
R36872:36878 Coq.Arith.EqNat <> beq_nat def
R36895:36899 Imp <> aeval def
R36901:36902 Imp <> st var
R36881:36885 Imp <> aeval def
R36887:36888 Imp <> st var
R36912:36914 Imp <> BLe constr
R36927:36929 Coq.Arith.Compare_dec <> leb def
R36946:36950 Imp <> aeval def
R36952:36953 Imp <> st var
R36932:36936 Imp <> aeval def
R36938:36939 Imp <> st var
R36963:36966 Imp <> BNot constr
R36978:36981 Coq.Init.Datatypes <> negb def
R36984:36988 Imp <> beval def
R36990:36991 Imp <> st var
R37001:37004 Imp <> BAnd constr
R37016:37019 Coq.Init.Datatypes <> andb def
R37036:37040 Imp <> beval def
R37042:37043 Imp <> st var
R37022:37026 Imp <> beval def
R37028:37029 Imp <> st var
def 37065:37069 <> aexp1
R37157:37161 Coq.Init.Logic <> :type_scope:x_'='_x not
R37075:37079 Imp <> aeval def
R37117:37121 Imp <> APlus constr
R37133:37137 Imp <> AMult constr
R37148:37151 Imp <> ANum constr
R37140:37142 Imp <> AId constr
R37144:37144 Imp <> X def
R37124:37127 Imp <> ANum constr
R37082:37089 Maps <> t_update def
R37103:37103 Imp <> X def
R37091:37101 Imp <> empty_state def
def 37200:37204 <> bexp1
R37293:37297 Coq.Init.Logic <> :type_scope:x_'='_x not
R37210:37214 Imp <> beval def
R37252:37255 Imp <> BAnd constr
R37264:37267 Imp <> BNot constr
R37270:37272 Imp <> BLe constr
R37283:37286 Imp <> ANum constr
R37275:37277 Imp <> AId constr
R37279:37279 Imp <> X def
R37257:37261 Imp <> BTrue constr
R37217:37224 Maps <> t_update def
R37238:37238 Imp <> X def
R37226:37236 Imp <> empty_state def
R37298:37301 Coq.Init.Datatypes <> true constr
ind 38388:38390 <> com
constr 38406:38410 <> CSkip
constr 38422:38425 <> CAss
constr 38451:38454 <> CSeq
constr 38480:38482 <> CIf
constr 38516:38521 <> CWhile
R38414:38416 Imp <> com ind
R38443:38445 Imp <> com ind
R38435:38438 Imp <> aexp ind
R38429:38430 Maps <> id ind
R38472:38474 Imp <> com ind
R38465:38467 Imp <> com ind
R38458:38460 Imp <> com ind
R38508:38510 Imp <> com ind
R38501:38503 Imp <> com ind
R38494:38496 Imp <> com ind
R38486:38489 Imp <> bexp ind
R38540:38542 Imp <> com ind
R38533:38535 Imp <> com ind
R38525:38528 Imp <> bexp ind
R38900:38904 Imp <> CSkip constr
not 38886 <> ::'SKIP'
R38934:38937 Imp <> CAss constr
not 38916 <> ::x_'::='_x
R38985:38988 Imp <> CSeq constr
not 38968 <> ::x_';;'_x
R39073:39078 Imp <> CWhile constr
not 39042 <> ::'WHILE'_x_'DO'_x_'END'
R39172:39174 Imp <> CIf constr
not 39130 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 39336:39346 <> fact_in_coq
R39350:39352 Imp <> com ind
R39370:39374 Imp <> ::x_';;'_x not
R39360:39364 Imp <> ::x_'::='_x not
R39359:39359 Imp <> Z def
R39365:39367 Imp <> AId constr
R39369:39369 Imp <> X def
R39387:39391 Imp <> ::x_';;'_x not
R39376:39380 Imp <> ::x_'::='_x not
R39375:39375 Imp <> Y def
R39381:39384 Imp <> ANum constr
R39392:39397 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39425:39432 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39496:39501 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39398:39401 Imp <> BNot constr
R39404:39406 Imp <> BEq constr
R39417:39420 Imp <> ANum constr
R39409:39411 Imp <> AId constr
R39413:39413 Imp <> Z def
R39460:39466 Imp <> ::x_';;'_x not
R39434:39438 Imp <> ::x_'::='_x not
R39433:39433 Imp <> Y def
R39439:39443 Imp <> AMult constr
R39454:39456 Imp <> AId constr
R39458:39458 Imp <> Z def
R39446:39448 Imp <> AId constr
R39450:39450 Imp <> Y def
R39468:39472 Imp <> ::x_'::='_x not
R39467:39467 Imp <> Z def
R39473:39478 Imp <> AMinus constr
R39489:39492 Imp <> ANum constr
R39481:39483 Imp <> AId constr
R39485:39485 Imp <> Z def
def 39633:39637 <> plus2
R39641:39643 Imp <> com ind
R39651:39656 Imp <> ::x_'::='_x not
R39679:39679 Imp <> ::x_'::='_x not
R39650:39650 Imp <> X def
R39657:39661 Imp <> APlus constr
R39672:39675 Imp <> ANum constr
R39664:39666 Imp <> AId constr
R39668:39668 Imp <> X def
def 39694:39703 <> XtimesYinZ
R39707:39709 Imp <> com ind
R39717:39722 Imp <> ::x_'::='_x not
R39744:39744 Imp <> ::x_'::='_x not
R39716:39716 Imp <> Z def
R39723:39727 Imp <> AMult constr
R39738:39740 Imp <> AId constr
R39742:39742 Imp <> Y def
R39730:39732 Imp <> AId constr
R39734:39734 Imp <> X def
def 39759:39778 <> subtract_slowly_body
R39782:39784 Imp <> com ind
R39820:39825 Imp <> ::x_';;'_x not
R39792:39796 Imp <> ::x_'::='_x not
R39791:39791 Imp <> Z def
R39797:39802 Imp <> AMinus constr
R39813:39816 Imp <> ANum constr
R39805:39807 Imp <> AId constr
R39809:39809 Imp <> Z def
R39827:39831 Imp <> ::x_'::='_x not
R39826:39826 Imp <> X def
R39832:39837 Imp <> AMinus constr
R39848:39851 Imp <> ANum constr
R39840:39842 Imp <> AId constr
R39844:39844 Imp <> X def
def 39959:39973 <> subtract_slowly
R39977:39979 Imp <> com ind
R39986:39991 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40019:40026 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40047:40052 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39992:39995 Imp <> BNot constr
R39998:40000 Imp <> BEq constr
R40011:40014 Imp <> ANum constr
R40003:40005 Imp <> AId constr
R40007:40007 Imp <> X def
R40027:40046 Imp <> subtract_slowly_body def
def 40067:40090 <> subtract_3_from_5_slowly
R40094:40096 Imp <> com ind
R40115:40120 Imp <> ::x_';;'_x not
R40104:40108 Imp <> ::x_'::='_x not
R40103:40103 Imp <> X def
R40109:40112 Imp <> ANum constr
R40133:40138 Imp <> ::x_';;'_x not
R40122:40126 Imp <> ::x_'::='_x not
R40121:40121 Imp <> Z def
R40127:40130 Imp <> ANum constr
R40139:40153 Imp <> subtract_slowly def
def 40270:40273 <> loop
R40277:40279 Imp <> com ind
R40286:40291 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40297:40304 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40309:40314 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40292:40296 Imp <> BTrue constr
R40305:40308 Imp <> ::'SKIP' not
def 40962:40979 <> ceval_fun_no_while
R40987:40991 Imp <> state def
R40999:41001 Imp <> com ind
R41032:41036 Imp <> state def
R41049:41049 Imp <> c var
R41062:41065 Imp <> ::'SKIP' not
R41078:41079 Imp <> st var
R41088:41092 Imp <> ::x_'::='_x not
R41107:41114 Maps <> t_update def
R41122:41126 Imp <> aeval def
R41128:41129 Imp <> st var
R41116:41117 Imp <> st var
R41143:41146 Imp <> ::x_';;'_x not
R41172:41189 Imp <> ceval_fun_no_while def
R41191:41192 Imp <> st var
R41208:41225 Imp <> ceval_fun_no_while def
R41227:41229 Imp <> st' var
R41240:41243 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41245:41250 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41253:41258 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41261:41263 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41280:41284 Imp <> beval def
R41286:41287 Imp <> st var
R41347:41364 Imp <> ceval_fun_no_while def
R41366:41367 Imp <> st var
R41307:41324 Imp <> ceval_fun_no_while def
R41326:41327 Imp <> st var
R41378:41383 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41385:41388 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41390:41393 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41406:41407 Imp <> st var
ind 45588:45592 <> ceval
constr 45633:45638 <> E_Skip
constr 45679:45683 <> E_Ass
constr 45778:45782 <> E_Seq
constr 45897:45904 <> E_IfTrue
constr 46031:46039 <> E_IfFalse
constr 46167:46176 <> E_WhileEnd
constr 46263:46273 <> E_WhileLoop
R45612:45616 Imp <> state def
R45603:45607 Imp <> state def
R45596:45598 Imp <> com ind
R46465:46469 Imp <> ceval ind
R45663:45665 Imp <> ::x_'/'_x_'\\'_x not
R45668:45671 Imp <> ::x_'/'_x_'\\'_x not
R45659:45662 Imp <> ::'SKIP' not
R45666:45667 Imp <> st var
R45672:45673 Imp <> st var
R45737:45737 Imp <> ::x_'/'_x_'\\'_x not
R45746:45749 Imp <> ::x_'/'_x_'\\'_x not
R45752:45756 Imp <> ::x_'/'_x_'\\'_x not
R45772:45772 Imp <> ::x_'/'_x_'\\'_x not
R45739:45743 Imp <> ::x_'::='_x not
R45738:45738 Imp <> x var
R45744:45745 Imp <> a1 var
R45750:45751 Imp <> st var
R45757:45764 Maps <> t_update def
R45771:45771 Imp <> n var
R45769:45769 Imp <> x var
R45766:45767 Imp <> st var
R45723:45725 Coq.Init.Logic <> :type_scope:x_'='_x not
R45712:45716 Imp <> aeval def
R45721:45722 Imp <> a1 var
R45718:45719 Imp <> st var
R45726:45726 Imp <> n var
R45869:45869 Imp <> ::x_'/'_x_'\\'_x not
R45878:45881 Imp <> ::x_'/'_x_'\\'_x not
R45884:45887 Imp <> ::x_'/'_x_'\\'_x not
R45872:45875 Imp <> ::x_';;'_x not
R45870:45871 Imp <> c1 var
R45876:45877 Imp <> c2 var
R45882:45883 Imp <> st var
R45888:45891 Imp <> st'' var
R45845:45847 Imp <> ::x_'/'_x_'\\'_x not
R45851:45854 Imp <> ::x_'/'_x_'\\'_x not
R45843:45844 Imp <> c2 var
R45848:45850 Imp <> st' var
R45855:45858 Imp <> st'' var
R45820:45822 Imp <> ::x_'/'_x_'\\'_x not
R45825:45829 Imp <> ::x_'/'_x_'\\'_x not
R45818:45819 Imp <> c1 var
R45823:45824 Imp <> st var
R45830:45832 Imp <> st' var
R45988:45988 Imp <> ::x_'/'_x_'\\'_x not
R46013:46016 Imp <> ::x_'/'_x_'\\'_x not
R46019:46022 Imp <> ::x_'/'_x_'\\'_x not
R45989:45992 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45994:45999 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46002:46007 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46010:46012 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R45993:45993 Imp <> b var
R46000:46001 Imp <> c1 var
R46008:46009 Imp <> c2 var
R46017:46018 Imp <> st var
R46023:46025 Imp <> st' var
R45966:45968 Imp <> ::x_'/'_x_'\\'_x not
R45971:45974 Imp <> ::x_'/'_x_'\\'_x not
R45964:45965 Imp <> c1 var
R45969:45970 Imp <> st var
R45975:45977 Imp <> st' var
R45947:45949 Coq.Init.Logic <> :type_scope:x_'='_x not
R45937:45941 Imp <> beval def
R45946:45946 Imp <> b var
R45943:45944 Imp <> st var
R45950:45953 Coq.Init.Datatypes <> true constr
R46124:46124 Imp <> ::x_'/'_x_'\\'_x not
R46149:46152 Imp <> ::x_'/'_x_'\\'_x not
R46155:46158 Imp <> ::x_'/'_x_'\\'_x not
R46125:46128 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46130:46135 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46138:46143 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46146:46148 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46129:46129 Imp <> b var
R46136:46137 Imp <> c1 var
R46144:46145 Imp <> c2 var
R46153:46154 Imp <> st var
R46159:46161 Imp <> st' var
R46102:46104 Imp <> ::x_'/'_x_'\\'_x not
R46107:46110 Imp <> ::x_'/'_x_'\\'_x not
R46100:46101 Imp <> c2 var
R46105:46106 Imp <> st var
R46111:46113 Imp <> st' var
R46082:46084 Coq.Init.Logic <> :type_scope:x_'='_x not
R46072:46076 Imp <> beval def
R46081:46081 Imp <> b var
R46078:46079 Imp <> st var
R46085:46089 Coq.Init.Datatypes <> false constr
R46229:46229 Imp <> ::x_'/'_x_'\\'_x not
R46246:46249 Imp <> ::x_'/'_x_'\\'_x not
R46252:46255 Imp <> ::x_'/'_x_'\\'_x not
R46230:46235 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46237:46240 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46242:46245 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46236:46236 Imp <> b var
R46241:46241 Imp <> c var
R46250:46251 Imp <> st var
R46256:46257 Imp <> st var
R46211:46213 Coq.Init.Logic <> :type_scope:x_'='_x not
R46201:46205 Imp <> beval def
R46210:46210 Imp <> b var
R46207:46208 Imp <> st var
R46214:46218 Coq.Init.Datatypes <> false constr
R46399:46399 Imp <> ::x_'/'_x_'\\'_x not
R46416:46419 Imp <> ::x_'/'_x_'\\'_x not
R46422:46425 Imp <> ::x_'/'_x_'\\'_x not
R46400:46405 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46407:46410 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46412:46415 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46406:46406 Imp <> b var
R46411:46411 Imp <> c var
R46420:46421 Imp <> st var
R46426:46429 Imp <> st'' var
R46357:46357 Imp <> ::x_'/'_x_'\\'_x not
R46374:46377 Imp <> ::x_'/'_x_'\\'_x not
R46381:46384 Imp <> ::x_'/'_x_'\\'_x not
R46358:46363 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46365:46368 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46370:46373 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46364:46364 Imp <> b var
R46369:46369 Imp <> c var
R46378:46380 Imp <> st' var
R46385:46388 Imp <> st'' var
R46335:46337 Imp <> ::x_'/'_x_'\\'_x not
R46340:46343 Imp <> ::x_'/'_x_'\\'_x not
R46334:46334 Imp <> c var
R46338:46339 Imp <> st var
R46344:46346 Imp <> st' var
R46317:46319 Coq.Init.Logic <> :type_scope:x_'='_x not
R46307:46311 Imp <> beval def
R46316:46316 Imp <> b var
R46313:46314 Imp <> st var
R46320:46323 Coq.Init.Datatypes <> true constr
R46465:46469 Imp <> ceval ind
not 46440 <> ::x_'/'_x_'\\'_x
def 46739:46752 <> ceval_example1
R46759:46759 Imp <> ::x_'/'_x_'\\'_x not
R46862:46868 Imp <> ::x_'/'_x_'\\'_x not
R46880:46887 Imp <> ::x_'/'_x_'\\'_x not
R46927:46927 Imp <> ::x_'/'_x_'\\'_x not
R46772:46779 Imp <> ::x_';;'_x not
R46761:46765 Imp <> ::x_'::='_x not
R46760:46760 Imp <> X def
R46766:46769 Imp <> ANum constr
R46780:46783 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46804:46816 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46829:46841 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46854:46861 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46784:46786 Imp <> BLe constr
R46797:46800 Imp <> ANum constr
R46789:46791 Imp <> AId constr
R46793:46793 Imp <> X def
R46818:46822 Imp <> ::x_'::='_x not
R46817:46817 Imp <> Y def
R46823:46826 Imp <> ANum constr
R46843:46847 Imp <> ::x_'::='_x not
R46842:46842 Imp <> Z def
R46848:46851 Imp <> ANum constr
R46869:46879 Imp <> empty_state def
R46888:46895 Maps <> t_update def
R46924:46924 Imp <> Z def
R46898:46905 Maps <> t_update def
R46919:46919 Imp <> X def
R46907:46917 Imp <> empty_state def
R47003:47010 Maps <> t_update def
R47024:47024 Imp <> X def
R47012:47022 Imp <> empty_state def
R46991:46995 Imp <> E_Seq constr
R47003:47010 Maps <> t_update def
R47024:47024 Imp <> X def
R47012:47022 Imp <> empty_state def
R46991:46995 Imp <> E_Seq constr
R47069:47073 Imp <> E_Ass constr
R47069:47073 Imp <> E_Ass constr
R47120:47128 Imp <> E_IfFalse constr
R47120:47128 Imp <> E_IfFalse constr
R47162:47166 Imp <> E_Ass constr
R47162:47166 Imp <> E_Ass constr
def 47245:47258 <> ceval_example2
R47265:47265 Imp <> ::x_'/'_x_'\\'_x not
R47308:47311 Imp <> ::x_'/'_x_'\\'_x not
R47323:47331 Imp <> ::x_'/'_x_'\\'_x not
R47386:47386 Imp <> ::x_'/'_x_'\\'_x not
R47278:47280 Imp <> ::x_';;'_x not
R47267:47271 Imp <> ::x_'::='_x not
R47266:47266 Imp <> X def
R47272:47275 Imp <> ANum constr
R47293:47295 Imp <> ::x_';;'_x not
R47282:47286 Imp <> ::x_'::='_x not
R47281:47281 Imp <> Y def
R47287:47290 Imp <> ANum constr
R47297:47301 Imp <> ::x_'::='_x not
R47296:47296 Imp <> Z def
R47302:47305 Imp <> ANum constr
R47312:47322 Imp <> empty_state def
R47332:47339 Maps <> t_update def
R47383:47383 Imp <> Z def
R47342:47349 Maps <> t_update def
R47378:47378 Imp <> Y def
R47352:47359 Maps <> t_update def
R47373:47373 Imp <> X def
R47361:47371 Imp <> empty_state def
R47414:47421 Maps <> t_update def
R47435:47435 Imp <> X def
R47423:47433 Imp <> empty_state def
R47402:47406 Imp <> E_Seq constr
R47414:47421 Maps <> t_update def
R47435:47435 Imp <> X def
R47423:47433 Imp <> empty_state def
R47402:47406 Imp <> E_Seq constr
R47469:47473 Imp <> E_Ass constr
R47469:47473 Imp <> E_Ass constr
R47502:47509 Maps <> t_update def
R47538:47538 Imp <> Y def
R47512:47519 Maps <> t_update def
R47533:47533 Imp <> X def
R47521:47531 Imp <> empty_state def
R47490:47494 Imp <> E_Seq constr
R47502:47509 Maps <> t_update def
R47538:47538 Imp <> Y def
R47512:47519 Maps <> t_update def
R47533:47533 Imp <> X def
R47521:47531 Imp <> empty_state def
R47490:47494 Imp <> E_Seq constr
R47574:47578 Imp <> E_Ass constr
R47574:47578 Imp <> E_Ass constr
R47617:47621 Imp <> E_Ass constr
R47617:47621 Imp <> E_Ass constr
def 47939:47946 <> pup_to_n
R47950:47952 Imp <> com ind
R47990:48022 Imp <> ::x_';;'_x not
R47979:47983 Imp <> ::x_'::='_x not
R47978:47978 Imp <> Y def
R47984:47987 Imp <> ANum constr
R48023:48029 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48057:48087 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48170:48175 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48030:48033 Imp <> BNot constr
R48036:48038 Imp <> BEq constr
R48049:48052 Imp <> ANum constr
R48041:48043 Imp <> AId constr
R48045:48045 Imp <> X def
R48115:48140 Imp <> ::x_';;'_x not
R48089:48093 Imp <> ::x_'::='_x not
R48088:48088 Imp <> Y def
R48094:48098 Imp <> APlus constr
R48109:48111 Imp <> AId constr
R48113:48113 Imp <> X def
R48101:48103 Imp <> AId constr
R48105:48105 Imp <> Y def
R48142:48146 Imp <> ::x_'::='_x not
R48141:48141 Imp <> X def
R48147:48152 Imp <> AMinus constr
R48163:48166 Imp <> ANum constr
R48155:48157 Imp <> AId constr
R48159:48159 Imp <> X def
prf 48187:48200 <> pup_to_2_ceval
R48214:48217 Imp <> ::x_'/'_x_'\\'_x not
R48242:48250 Imp <> ::x_'/'_x_'\\'_x not
R48206:48213 Imp <> pup_to_n def
R48218:48225 Maps <> t_update def
R48239:48239 Imp <> X def
R48227:48237 Imp <> empty_state def
R48251:48258 Maps <> t_update def
R48353:48353 Imp <> X def
R48261:48268 Maps <> t_update def
R48348:48348 Imp <> Y def
R48271:48278 Maps <> t_update def
R48343:48343 Imp <> X def
R48281:48288 Maps <> t_update def
R48338:48338 Imp <> Y def
R48291:48298 Maps <> t_update def
R48333:48333 Imp <> Y def
R48301:48308 Maps <> t_update def
R48328:48328 Imp <> X def
R48310:48320 Imp <> empty_state def
R48372:48379 Imp <> pup_to_n def
R48400:48407 Maps <> t_update def
R48436:48436 Imp <> Y def
R48410:48417 Maps <> t_update def
R48431:48431 Imp <> X def
R48419:48429 Imp <> empty_state def
R48388:48392 Imp <> E_Seq constr
R48400:48407 Maps <> t_update def
R48436:48436 Imp <> Y def
R48410:48417 Maps <> t_update def
R48431:48431 Imp <> X def
R48419:48429 Imp <> empty_state def
R48388:48392 Imp <> E_Seq constr
R48450:48454 Imp <> E_Ass constr
R48450:48454 Imp <> E_Ass constr
R48551:48558 Maps <> t_update def
R48620:48620 Imp <> X def
R48561:48568 Maps <> t_update def
R48615:48615 Imp <> Y def
R48571:48578 Maps <> t_update def
R48610:48610 Imp <> Y def
R48584:48591 Maps <> t_update def
R48605:48605 Imp <> X def
R48593:48603 Imp <> empty_state def
R48527:48537 Imp <> E_WhileLoop constr
R48551:48558 Maps <> t_update def
R48620:48620 Imp <> X def
R48561:48568 Maps <> t_update def
R48615:48615 Imp <> Y def
R48571:48578 Maps <> t_update def
R48610:48610 Imp <> Y def
R48584:48591 Maps <> t_update def
R48605:48605 Imp <> X def
R48593:48603 Imp <> empty_state def
R48527:48537 Imp <> E_WhileLoop constr
R48675:48682 Maps <> t_update def
R48726:48726 Imp <> Y def
R48685:48692 Maps <> t_update def
R48721:48721 Imp <> Y def
R48695:48702 Maps <> t_update def
R48716:48716 Imp <> X def
R48704:48714 Imp <> empty_state def
R48663:48667 Imp <> E_Seq constr
R48741:48745 Imp <> E_Ass constr
R48675:48682 Maps <> t_update def
R48726:48726 Imp <> Y def
R48685:48692 Maps <> t_update def
R48721:48721 Imp <> Y def
R48695:48702 Maps <> t_update def
R48716:48716 Imp <> X def
R48704:48714 Imp <> empty_state def
R48663:48667 Imp <> E_Seq constr
R48741:48745 Imp <> E_Ass constr
R48741:48745 Imp <> E_Ass constr
R48782:48789 Maps <> t_update def
R48890:48890 Imp <> X def
R48794:48801 Maps <> t_update def
R48885:48885 Imp <> Y def
R48809:48816 Maps <> t_update def
R48875:48875 Imp <> X def
R48819:48826 Maps <> t_update def
R48870:48870 Imp <> Y def
R48829:48836 Maps <> t_update def
R48865:48865 Imp <> Y def
R48839:48846 Maps <> t_update def
R48860:48860 Imp <> X def
R48848:48858 Imp <> empty_state def
R48764:48774 Imp <> E_WhileLoop constr
R48782:48789 Maps <> t_update def
R48890:48890 Imp <> X def
R48794:48801 Maps <> t_update def
R48885:48885 Imp <> Y def
R48809:48816 Maps <> t_update def
R48875:48875 Imp <> X def
R48819:48826 Maps <> t_update def
R48870:48870 Imp <> Y def
R48829:48836 Maps <> t_update def
R48865:48865 Imp <> Y def
R48839:48846 Maps <> t_update def
R48860:48860 Imp <> X def
R48848:48858 Imp <> empty_state def
R48764:48774 Imp <> E_WhileLoop constr
R48931:48938 Maps <> t_update def
R49022:49022 Imp <> Y def
R48946:48953 Maps <> t_update def
R49012:49012 Imp <> X def
R48956:48963 Maps <> t_update def
R49007:49007 Imp <> Y def
R48966:48973 Maps <> t_update def
R49002:49002 Imp <> Y def
R48976:48983 Maps <> t_update def
R48997:48997 Imp <> X def
R48985:48995 Imp <> empty_state def
R48919:48923 Imp <> E_Seq constr
R49034:49038 Imp <> E_Ass constr
R48931:48938 Maps <> t_update def
R49022:49022 Imp <> Y def
R48946:48953 Maps <> t_update def
R49012:49012 Imp <> X def
R48956:48963 Maps <> t_update def
R49007:49007 Imp <> Y def
R48966:48973 Maps <> t_update def
R49002:49002 Imp <> Y def
R48976:48983 Maps <> t_update def
R48997:48997 Imp <> X def
R48985:48995 Imp <> empty_state def
R48919:48923 Imp <> E_Seq constr
R49034:49038 Imp <> E_Ass constr
R49034:49038 Imp <> E_Ass constr
R49057:49066 Imp <> E_WhileEnd constr
R49057:49066 Imp <> E_WhileEnd constr
prf 49863:49881 <> ceval_deterministic
R49958:49960 Coq.Init.Logic <> :type_scope:x_'='_x not
R49955:49957 Imp <> st1 var
R49961:49963 Imp <> st2 var
R49934:49936 Imp <> ::x_'/'_x_'\\'_x not
R49939:49942 Imp <> ::x_'/'_x_'\\'_x not
R49933:49933 Imp <> c var
R49937:49938 Imp <> st var
R49943:49945 Imp <> st2 var
R49911:49913 Imp <> ::x_'/'_x_'\\'_x not
R49916:49919 Imp <> ::x_'/'_x_'\\'_x not
R49910:49910 Imp <> c var
R49914:49915 Imp <> st var
R49920:49922 Imp <> st1 var
R50183:50185 Coq.Init.Logic <> :type_scope:x_'='_x not
R50183:50185 Coq.Init.Logic <> :type_scope:x_'='_x not
R50950:50952 Coq.Init.Logic <> :type_scope:x_'='_x not
R50950:50952 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 51432:51441 <> plus2_spec
R51506:51508 Coq.Init.Logic <> :type_scope:x_'='_x not
R51501:51503 Imp <> st' var
R51505:51505 Imp <> X def
R51510:51512 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51509:51509 Imp <> n var
R51483:51485 Imp <> ::x_'/'_x_'\\'_x not
R51488:51491 Imp <> ::x_'/'_x_'\\'_x not
R51478:51482 Imp <> plus2 def
R51486:51487 Imp <> st var
R51492:51494 Imp <> st' var
R51468:51470 Coq.Init.Logic <> :type_scope:x_'='_x not
R51464:51465 Imp <> st var
R51467:51467 Imp <> X def
R51471:51471 Imp <> n var
R51838:51848 Maps <> t_update_eq thm
R51838:51848 Maps <> t_update_eq thm
prf 51985:51999 <> XtimesYinZ_spec
R52083:52085 Coq.Init.Logic <> :type_scope:x_'='_x not
R52078:52080 Imp <> st' var
R52082:52082 Imp <> Z def
R52087:52089 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R52086:52086 Imp <> n var
R52090:52090 Imp <> m var
R52060:52062 Imp <> ::x_'/'_x_'\\'_x not
R52065:52068 Imp <> ::x_'/'_x_'\\'_x not
R52050:52059 Imp <> XtimesYinZ def
R52063:52064 Imp <> st var
R52069:52071 Imp <> st' var
R52040:52042 Coq.Init.Logic <> :type_scope:x_'='_x not
R52036:52037 Imp <> st var
R52039:52039 Imp <> Y def
R52043:52043 Imp <> m var
R52028:52030 Coq.Init.Logic <> :type_scope:x_'='_x not
R52024:52025 Imp <> st var
R52027:52027 Imp <> X def
R52031:52031 Imp <> n var
R52142:52152 Maps <> t_update_eq thm
R52142:52152 Maps <> t_update_eq thm
prf 52243:52258 <> loop_never_stops
R52279:52280 Coq.Init.Logic <> :type_scope:'~'_x not
R52297:52297 Coq.Init.Logic <> :type_scope:'~'_x not
R52285:52287 Imp <> ::x_'/'_x_'\\'_x not
R52290:52293 Imp <> ::x_'/'_x_'\\'_x not
R52281:52284 Imp <> loop def
R52288:52289 Imp <> st var
R52294:52296 Imp <> st' var
R52338:52341 Imp <> loop def
R52366:52371 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52377:52380 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52385:52388 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52372:52376 Imp <> BTrue constr
R52381:52384 Imp <> ::'SKIP' not
R52366:52371 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52377:52380 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52385:52388 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52372:52376 Imp <> BTrue constr
R52381:52384 Imp <> ::'SKIP' not
def 52849:52857 <> no_whiles
R52864:52866 Imp <> com ind
R52871:52874 Coq.Init.Datatypes <> bool ind
R52887:52887 Imp <> c var
R52898:52901 Imp <> ::'SKIP' not
R52912:52915 Coq.Init.Datatypes <> true constr
R52922:52926 Imp <> ::x_'::='_x not
R52938:52941 Coq.Init.Datatypes <> true constr
R52949:52952 Imp <> ::x_';;'_x not
R52965:52968 Coq.Init.Datatypes <> andb def
R52986:52994 Imp <> no_whiles def
R52971:52979 Imp <> no_whiles def
R53004:53007 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53009:53014 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53017:53022 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53025:53027 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53038:53041 Coq.Init.Datatypes <> andb def
R53059:53067 Imp <> no_whiles def
R53044:53052 Imp <> no_whiles def
R53077:53082 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53084:53087 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53089:53092 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53104:53108 Coq.Init.Datatypes <> false constr
ind 53404:53413 <> no_whilesR
constr 53434:53448 <> no_whilesR_Skip
constr 53471:53484 <> no_whilesR_Ass
constr 53525:53538 <> no_whilesR_Seq
constr 53621:53633 <> no_whilesR_If
R53416:53418 Imp <> com ind
R53452:53461 Imp <> no_whilesR ind
R53463:53466 Imp <> ::'SKIP' not
R53500:53509 Imp <> no_whilesR ind
R53512:53515 Imp <> CAss constr
R53519:53519 Imp <> a var
R53517:53517 Imp <> i var
R53594:53603 Imp <> no_whilesR ind
R53606:53609 Imp <> CSeq constr
R53614:53615 Imp <> c2 var
R53611:53612 Imp <> c1 var
R53577:53586 Imp <> no_whilesR ind
R53588:53589 Imp <> c2 var
R53560:53569 Imp <> no_whilesR ind
R53571:53572 Imp <> c1 var
R53690:53699 Imp <> no_whilesR ind
R53702:53704 Imp <> CIf constr
R53711:53712 Imp <> cf var
R53708:53709 Imp <> ct var
R53706:53706 Imp <> b var
R53673:53682 Imp <> no_whilesR ind
R53684:53685 Imp <> cf var
R53656:53665 Imp <> no_whilesR ind
R53667:53668 Imp <> ct var
prf 53725:53737 <> no_whiles_eqv
R53771:53775 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R53764:53766 Coq.Init.Logic <> :type_scope:x_'='_x not
R53753:53761 Imp <> no_whiles def
R53763:53763 Imp <> c var
R53767:53770 Coq.Init.Datatypes <> true constr
R53776:53785 Imp <> no_whilesR ind
R53787:53787 Imp <> c var
R53877:53891 Imp <> no_whilesR_Skip constr
R53877:53891 Imp <> no_whilesR_Skip constr
R53904:53917 Imp <> no_whilesR_Ass constr
R53904:53917 Imp <> no_whilesR_Ass constr
R53930:53942 Coq.Bool.Bool <> andb_true_iff thm
R53930:53942 Coq.Bool.Bool <> andb_true_iff thm
R53988:54001 Imp <> no_whilesR_Seq constr
R53988:54001 Imp <> no_whilesR_Seq constr
R54053:54065 Coq.Bool.Bool <> andb_true_iff thm
R54053:54065 Coq.Bool.Bool <> andb_true_iff thm
R54111:54123 Imp <> no_whilesR_If constr
R54111:54123 Imp <> no_whilesR_If constr
prf 54638:54658 <> no_whiles_terminating
R54707:54714 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54726:54728 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54721:54725 Imp <> state def
R54730:54732 Imp <> ::x_'/'_x_'\\'_x not
R54735:54738 Imp <> ::x_'/'_x_'\\'_x not
R54729:54729 Imp <> c var
R54733:54734 Imp <> st var
R54739:54741 Imp <> st' var
R54685:54687 Coq.Init.Logic <> :type_scope:x_'='_x not
R54674:54682 Imp <> no_whiles def
R54684:54684 Imp <> c var
R54688:54691 Coq.Init.Datatypes <> true constr
R54822:54829 Maps <> t_update def
R54837:54841 Imp <> aeval def
R54822:54829 Maps <> t_update def
R54837:54841 Imp <> aeval def
R54893:54905 Coq.Bool.Bool <> andb_true_iff thm
R54893:54905 Coq.Bool.Bool <> andb_true_iff thm
R55087:55091 Imp <> E_Seq constr
R55087:55091 Imp <> E_Seq constr
R55169:55181 Coq.Bool.Bool <> andb_true_iff thm
R55169:55181 Coq.Bool.Bool <> andb_true_iff thm
R55386:55390 Imp <> beval def
R55386:55390 Imp <> beval def
R55470:55477 Imp <> E_IfTrue constr
R55470:55477 Imp <> E_IfTrue constr
R55518:55526 Imp <> E_IfFalse constr
R55518:55526 Imp <> E_IfFalse constr
ind 57062:57067 <> sinstr
constr 57081:57085 <> SPush
constr 57105:57109 <> SLoad
constr 57128:57132 <> SPlus
constr 57145:57150 <> SMinus
constr 57163:57167 <> SMult
R57096:57101 Imp <> sinstr ind
R57089:57091 Coq.Init.Datatypes <> nat ind
R57119:57124 Imp <> sinstr ind
R57113:57114 Maps <> id ind
R57136:57141 Imp <> sinstr ind
R57154:57159 Imp <> sinstr ind
R57171:57176 Imp <> sinstr ind
def 57841:57849 <> s_execute
R57857:57861 Imp <> state def
R57873:57876 Coq.Init.Datatypes <> list ind
R57878:57880 Coq.Init.Datatypes <> nat ind
R57910:57913 Coq.Init.Datatypes <> list ind
R57915:57920 Imp <> sinstr ind
R57942:57945 Coq.Init.Datatypes <> list ind
R57947:57949 Coq.Init.Datatypes <> nat ind
R57960:57963 Imp <> prog var
R57974:57976 Coq.Init.Datatypes <> nil constr
R57981:57985 Imp <> stack var
R57995:57998 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58032:58036 Imp <> SPush constr
R58043:58051 Imp <> s_execute def
R58058:58061 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58062:58066 Imp <> stack var
R58053:58054 Imp <> st var
R58082:58086 Imp <> SLoad constr
R58093:58101 Imp <> s_execute def
R58107:58107 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58124:58128 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58108:58112 Imp <> aeval def
R58118:58120 Imp <> AId constr
R58114:58115 Imp <> st var
R58129:58133 Imp <> stack var
R58103:58104 Imp <> st var
R58149:58153 Imp <> SPlus constr
R58164:58168 Imp <> stack var
R58183:58185 Coq.Init.Datatypes <> nil constr
R58190:58198 Imp <> s_execute def
R58203:58207 Imp <> stack var
R58200:58201 Imp <> st var
R58253:58256 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58297:58299 Coq.Init.Datatypes <> nil constr
R58304:58312 Imp <> s_execute def
R58317:58321 Imp <> stack var
R58314:58315 Imp <> st var
R58370:58373 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58386:58394 Imp <> s_execute def
R58400:58400 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58408:58412 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58403:58405 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R58396:58397 Imp <> st var
R58458:58463 Imp <> SMinus constr
R58474:58478 Imp <> stack var
R58493:58495 Coq.Init.Datatypes <> nil constr
R58500:58508 Imp <> s_execute def
R58513:58517 Imp <> stack var
R58510:58511 Imp <> st var
R58564:58567 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58608:58610 Coq.Init.Datatypes <> nil constr
R58615:58623 Imp <> s_execute def
R58628:58632 Imp <> stack var
R58625:58626 Imp <> st var
R58681:58684 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58697:58705 Imp <> s_execute def
R58711:58711 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58719:58723 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58714:58716 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R58707:58708 Imp <> st var
R58771:58775 Imp <> SMult constr
R58786:58790 Imp <> stack var
R58805:58807 Coq.Init.Datatypes <> nil constr
R58812:58820 Imp <> s_execute def
R58825:58829 Imp <> stack var
R58822:58823 Imp <> st var
R58875:58878 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58919:58921 Coq.Init.Datatypes <> nil constr
R58926:58934 Imp <> s_execute def
R58939:58943 Imp <> stack var
R58936:58937 Imp <> st var
R58992:58995 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59008:59016 Imp <> s_execute def
R59022:59022 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59030:59034 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59025:59027 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R59018:59019 Imp <> st var
def 59193:59202 <> s_execute1
R59278:59283 Coq.Init.Logic <> :type_scope:x_'='_x not
R59211:59219 Imp <> s_execute def
R59243:59243 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59251:59252 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59260:59261 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59269:59270 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59277:59277 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59271:59276 Imp <> SMinus constr
R59262:59266 Imp <> SPush constr
R59253:59257 Imp <> SPush constr
R59244:59248 Imp <> SPush constr
R59233:59234 Coq.Lists.List ListNotations :list_scope:'['_']' not
R59221:59231 Imp <> empty_state def
R59284:59284 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59286:59287 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59289:59289 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 59319:59328 <> s_execute2
R59419:59424 Coq.Init.Logic <> :type_scope:x_'='_x not
R59337:59345 Imp <> s_execute def
R59387:59387 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59395:59396 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59404:59405 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59411:59412 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59418:59418 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59413:59417 Imp <> SPlus constr
R59406:59410 Imp <> SMult constr
R59397:59401 Imp <> SLoad constr
R59403:59403 Imp <> X def
R59388:59392 Imp <> SPush constr
R59374:59374 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59376:59376 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59378:59378 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59348:59355 Maps <> t_update def
R59369:59369 Imp <> X def
R59357:59367 Imp <> empty_state def
R59425:59425 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59428:59429 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59431:59431 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 59661:59669 <> s_compile
R59676:59679 Imp <> aexp ind
R59684:59687 Coq.Init.Datatypes <> list ind
R59689:59694 Imp <> sinstr ind
R59705:59705 Imp <> e var
R59716:59719 Imp <> ANum constr
R59726:59727 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59735:59736 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59728:59732 Imp <> SPush constr
R59742:59744 Imp <> AId constr
R59751:59752 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59760:59761 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59753:59757 Imp <> SLoad constr
R59767:59771 Imp <> APlus constr
R59782:59782 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59795:59799 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59783:59791 Imp <> s_compile def
R59800:59800 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59813:59817 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59801:59809 Imp <> s_compile def
R59818:59818 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59824:59824 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59819:59823 Imp <> SPlus constr
R59830:59835 Imp <> AMinus constr
R59846:59846 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59859:59863 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59847:59855 Imp <> s_compile def
R59864:59864 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59877:59881 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59865:59873 Imp <> s_compile def
R59882:59882 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59889:59889 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59883:59888 Imp <> SMinus constr
R59895:59899 Imp <> AMult constr
R59910:59910 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59923:59927 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59911:59919 Imp <> s_compile def
R59928:59928 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59941:59945 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59929:59937 Imp <> s_compile def
R59946:59946 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59952:59952 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R59947:59951 Imp <> SMult constr
def 60057:60069 <> s_compile_ex1
R60128:60132 Coq.Init.Logic <> :type_scope:x_'='_x not
R60077:60085 Imp <> s_compile def
R60088:60093 Imp <> AMinus constr
R60104:60108 Imp <> AMult constr
R60120:60122 Imp <> AId constr
R60124:60124 Imp <> Y def
R60111:60114 Imp <> ANum constr
R60096:60098 Imp <> AId constr
R60100:60100 Imp <> X def
R60133:60133 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60141:60142 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60150:60151 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60159:60160 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60166:60167 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60174:60174 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60168:60173 Imp <> SMinus constr
R60161:60165 Imp <> SMult constr
R60152:60156 Imp <> SLoad constr
R60158:60158 Imp <> Y def
R60143:60147 Imp <> SPush constr
R60134:60138 Imp <> SLoad constr
R60140:60140 Imp <> X def
def 60203:60215 <> s_compile_ex2
R60257:60261 Coq.Init.Logic <> :type_scope:x_'='_x not
R60223:60231 Imp <> s_compile def
R60234:60239 Imp <> AMinus constr
R60250:60252 Imp <> AId constr
R60254:60254 Imp <> Y def
R60242:60244 Imp <> AId constr
R60246:60246 Imp <> X def
R60262:60262 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60270:60271 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60279:60280 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60287:60287 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R60281:60286 Imp <> SMinus constr
R60272:60276 Imp <> SLoad constr
R60278:60278 Imp <> Y def
R60263:60267 Imp <> SLoad constr
R60269:60269 Imp <> X def
prf 61077:61090 <> s_execute_step
R61161:61166 Coq.Init.Logic <> :type_scope:x_'='_x not
R61130:61138 Imp <> s_execute def
R61152:61155 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61148:61151 Imp <> pro1 var
R61156:61159 Imp <> pro2 var
R61143:61145 Imp <> stk var
R61140:61141 Imp <> st var
R61167:61175 Imp <> s_execute def
R61204:61207 Imp <> pro2 var
R61181:61189 Imp <> s_execute def
R61198:61201 Imp <> pro1 var
R61194:61196 Imp <> stk var
R61191:61192 Imp <> st var
R61177:61178 Imp <> st var
prf 61429:61444 <> s_execute_no_ins
R61484:61486 Coq.Init.Logic <> :type_scope:x_'='_x not
R61465:61473 Imp <> s_execute def
R61482:61483 Coq.Lists.List ListNotations :list_scope:'['_']' not
R61478:61480 Imp <> stk var
R61475:61476 Imp <> st var
R61487:61489 Imp <> stk var
prf 61510:61519 <> app_is_nil
R61548:61551 Coq.Init.Datatypes <> list ind
R61553:61553 Imp <> X var
R61583:61586 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61578:61580 Coq.Init.Logic <> :type_scope:x_'='_x not
R61576:61577 Imp <> l1 var
R61581:61582 Coq.Lists.List ListNotations :list_scope:'['_']' not
R61589:61591 Coq.Init.Logic <> :type_scope:x_'='_x not
R61587:61588 Imp <> l2 var
R61592:61593 Coq.Lists.List ListNotations :list_scope:'['_']' not
R61567:61569 Coq.Init.Logic <> :type_scope:x_'='_x not
R61561:61564 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61559:61560 Imp <> l1 var
R61565:61566 Imp <> l2 var
R61570:61571 Coq.Lists.List ListNotations :list_scope:'['_']' not
prf 61679:61693 <> compile_not_nil
R61720:61723 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R61709:61717 Imp <> s_compile def
R61719:61719 Imp <> e var
R61724:61726 Coq.Init.Datatypes <> nil constr
R61820:61828 Imp <> s_compile def
R61845:61853 Imp <> s_compile def
R61820:61828 Imp <> s_compile def
R61820:61828 Imp <> s_compile def
R61820:61828 Imp <> s_compile def
R61845:61853 Imp <> s_compile def
R61845:61853 Imp <> s_compile def
R61845:61853 Imp <> s_compile def
R61845:61853 Imp <> s_compile def
R61845:61853 Imp <> s_compile def
R61845:61853 Imp <> s_compile def
prf 62394:62415 <> s_execute_compile_more
R62468:62470 Coq.Init.Logic <> :type_scope:x_'='_x not
R62438:62446 Imp <> s_execute def
R62456:62464 Imp <> s_compile def
R62466:62466 Imp <> e var
R62451:62453 Imp <> stk var
R62448:62449 Imp <> st var
R62471:62471 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62482:62486 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62472:62476 Imp <> aeval def
R62481:62481 Imp <> e var
R62478:62479 Imp <> st var
R62487:62489 Imp <> stk var
R62550:62563 Imp <> s_execute_step thm
R62550:62563 Imp <> s_execute_step thm
R62588:62601 Imp <> s_execute_step thm
R62588:62601 Imp <> s_execute_step thm
R62641:62654 Imp <> s_execute_step thm
R62641:62654 Imp <> s_execute_step thm
R62679:62692 Imp <> s_execute_step thm
R62679:62692 Imp <> s_execute_step thm
R62732:62745 Imp <> s_execute_step thm
R62732:62745 Imp <> s_execute_step thm
R62770:62783 Imp <> s_execute_step thm
R62770:62783 Imp <> s_execute_step thm
prf 62819:62835 <> s_compile_correct
R62852:62856 Imp <> state def
R62864:62867 Imp <> aexp ind
R62902:62904 Coq.Init.Logic <> :type_scope:x_'='_x not
R62873:62881 Imp <> s_execute def
R62890:62898 Imp <> s_compile def
R62900:62900 Imp <> e var
R62886:62887 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62883:62884 Imp <> st var
R62905:62906 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62917:62918 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62907:62911 Imp <> aeval def
R62916:62916 Imp <> e var
R62913:62914 Imp <> st var
R62944:62945 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62956:62956 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62946:62950 Imp <> aeval def
R62976:62979 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62964:62964 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62975:62975 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62965:62969 Imp <> aeval def
R62980:62981 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62976:62979 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R62964:62964 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62975:62975 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62965:62969 Imp <> aeval def
R62980:62981 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62944:62945 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62956:62956 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R62946:62950 Imp <> aeval def
R62991:63012 Imp <> s_execute_compile_more thm
R62991:63012 Imp <> s_execute_compile_more thm
def 63632:63639 <> beval_sc
R63647:63651 Imp <> state def
R63659:63662 Imp <> bexp ind
R63678:63681 Coq.Init.Datatypes <> bool ind
R63694:63694 Imp <> b var
R63705:63709 Imp <> BTrue constr
R63714:63717 Coq.Init.Datatypes <> true constr
R63723:63728 Imp <> BFalse constr
R63733:63737 Coq.Init.Datatypes <> false constr
R63743:63745 Imp <> BEq constr
R63756:63762 Coq.Arith.EqNat <> beq_nat def
R63779:63783 Imp <> aeval def
R63785:63786 Imp <> st var
R63765:63769 Imp <> aeval def
R63771:63772 Imp <> st var
R63796:63798 Imp <> BLe constr
R63809:63811 Coq.Arith.Compare_dec <> leb def
R63828:63832 Imp <> aeval def
R63834:63835 Imp <> st var
R63814:63818 Imp <> aeval def
R63820:63821 Imp <> st var
R63845:63848 Imp <> BNot constr
R63856:63859 Coq.Init.Datatypes <> negb def
R63862:63866 Imp <> beval def
R63868:63869 Imp <> st var
R63879:63882 Imp <> BAnd constr
R63897:63901 Imp <> beval def
R63903:63904 Imp <> st var
R63934:63938 Coq.Init.Datatypes <> false constr
R63916:63920 Imp <> beval def
R63922:63923 Imp <> st var
prf 63956:63971 <> beval_sc_correct
R64000:64002 Coq.Init.Logic <> :type_scope:x_'='_x not
R63990:63994 Imp <> beval def
R63999:63999 Imp <> b var
R63996:63997 Imp <> st var
R64003:64010 Imp <> beval_sc def
R64015:64015 Imp <> b var
R64012:64013 Imp <> st var
mod 64066:64073 <> BreakImp
ind 64415:64417 BreakImp com
constr 64433:64437 BreakImp CSkip
constr 64449:64454 BreakImp CBreak
constr 64494:64497 BreakImp CAss
constr 64523:64526 BreakImp CSeq
constr 64552:64554 BreakImp CIf
constr 64588:64593 BreakImp CWhile
R64441:64443 Imp <> com ind
R64458:64460 Imp <> com ind
R64515:64517 Imp <> com ind
R64507:64510 Imp BreakImp aexp ind
R64501:64502 Maps <> id ind
R64544:64546 Imp <> com ind
R64537:64539 Imp <> com ind
R64530:64532 Imp <> com ind
R64580:64582 Imp <> com ind
R64573:64575 Imp <> com ind
R64566:64568 Imp <> com ind
R64558:64561 Imp BreakImp bexp ind
R64612:64614 Imp <> com ind
R64605:64607 Imp <> com ind
R64597:64600 Imp BreakImp bexp ind
R64641:64645 Imp BreakImp CSkip constr
not 64627 BreakImp ::'SKIP'
R64672:64677 Imp BreakImp CBreak constr
not 64657 BreakImp ::'BREAK'
R64707:64710 Imp BreakImp CAss constr
not 64689 BreakImp ::x_'::='_x
R64758:64761 Imp BreakImp CSeq constr
not 64741 BreakImp ::x_';;'_x
R64846:64851 Imp BreakImp CWhile constr
not 64815 BreakImp ::'WHILE'_x_'DO'_x_'END'
R64945:64947 Imp BreakImp CIf constr
not 64903 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 66048:66053 BreakImp result
constr 66069:66077 BreakImp SContinue
constr 66092:66097 BreakImp SBreak
R66081:66086 Imp <> result ind
R66101:66106 Imp <> result ind
ind 68495:68499 BreakImp ceval
constr 68550:68555 BreakImp E_Skip
constr 68607:68611 BreakImp E_Ass
constr 68718:68727 BreakImp E_SeqBreak
constr 68828:68840 BreakImp E_SeqContinue
constr 68992:68999 BreakImp E_IfTrue
constr 69151:69159 BreakImp E_IfFalse
constr 69312:69321 BreakImp E_WhileEnd
constr 69420:69438 BreakImp E_WhileLoopContinue
constr 69637:69652 BreakImp E_WhileLoopBreak
R68529:68533 Imp BreakImp state def
R68519:68524 Imp BreakImp result ind
R68510:68514 Imp BreakImp state def
R68503:68505 Imp BreakImp com ind
R69899:69903 Imp <> ceval ind
R68579:68581 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68584:68587 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68597:68599 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68574:68578 Imp BreakImp CSkip constr
R68582:68583 Imp <> st var
R68588:68596 Imp BreakImp SContinue constr
R68600:68601 Imp <> st var
R68665:68665 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68674:68677 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68680:68683 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68693:68696 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68712:68712 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68667:68671 Imp BreakImp ::x_'::='_x not
R68666:68666 Imp <> x var
R68672:68673 Imp <> a1 var
R68678:68679 Imp <> st var
R68684:68692 Imp BreakImp SContinue constr
R68697:68704 Maps <> t_update def
R68711:68711 Imp <> n var
R68709:68709 Imp <> x var
R68706:68707 Imp <> st var
R68651:68653 Coq.Init.Logic <> :type_scope:x_'='_x not
R68640:68644 Imp BreakImp aeval def
R68649:68650 Imp <> a1 var
R68646:68647 Imp <> st var
R68654:68654 Imp <> n var
R68792:68792 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68801:68804 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68807:68810 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68817:68819 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68795:68798 Imp BreakImp ::x_';;'_x not
R68793:68794 Imp <> c1 var
R68799:68800 Imp <> c2 var
R68805:68806 Imp <> st var
R68811:68816 Imp BreakImp SBreak constr
R68820:68822 Imp <> st' var
R68760:68762 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68765:68769 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68776:68778 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68758:68759 Imp <> c1 var
R68763:68764 Imp <> st var
R68770:68775 Imp BreakImp SBreak constr
R68779:68781 Imp <> st' var
R68955:68955 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68964:68967 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68970:68973 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68980:68982 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68958:68961 Imp BreakImp ::x_';;'_x not
R68956:68957 Imp <> c1 var
R68962:68963 Imp <> c2 var
R68968:68969 Imp <> st var
R68974:68979 Imp <> signal var
R68983:68986 Imp <> st'' var
R68922:68924 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68928:68931 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68938:68940 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68920:68921 Imp <> c2 var
R68925:68927 Imp <> st' var
R68932:68937 Imp <> signal var
R68941:68944 Imp <> st'' var
R68885:68887 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68890:68894 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68904:68906 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68883:68884 Imp <> c1 var
R68888:68889 Imp <> st var
R68895:68903 Imp BreakImp SContinue constr
R68907:68909 Imp <> st' var
R69099:69099 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69124:69127 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69130:69133 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69140:69142 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69100:69103 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69105:69110 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69113:69118 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69121:69123 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69104:69104 Imp <> b var
R69111:69112 Imp <> c1 var
R69119:69120 Imp <> c2 var
R69128:69129 Imp <> st var
R69134:69139 Imp <> signal var
R69143:69145 Imp <> st' var
R69068:69070 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69073:69076 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69083:69085 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69066:69067 Imp <> c1 var
R69071:69072 Imp <> st var
R69077:69082 Imp <> signal var
R69086:69088 Imp <> st' var
R69049:69051 Coq.Init.Logic <> :type_scope:x_'='_x not
R69039:69043 Imp BreakImp beval def
R69048:69048 Imp <> b var
R69045:69046 Imp <> st var
R69052:69055 Coq.Init.Datatypes <> true constr
R69260:69260 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69285:69288 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69291:69294 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69301:69303 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69261:69264 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69266:69271 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69274:69279 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69282:69284 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69265:69265 Imp <> b var
R69272:69273 Imp <> c1 var
R69280:69281 Imp <> c2 var
R69289:69290 Imp <> st var
R69295:69300 Imp <> signal var
R69304:69306 Imp <> st' var
R69229:69231 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69234:69237 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69244:69246 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69227:69228 Imp <> c2 var
R69232:69233 Imp <> st var
R69238:69243 Imp <> signal var
R69247:69249 Imp <> st' var
R69209:69211 Coq.Init.Logic <> :type_scope:x_'='_x not
R69199:69203 Imp BreakImp beval def
R69208:69208 Imp <> b var
R69205:69206 Imp <> st var
R69212:69216 Coq.Init.Datatypes <> false constr
R69374:69374 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69391:69394 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69397:69400 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69410:69412 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69375:69380 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69382:69385 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69387:69390 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69381:69381 Imp <> b var
R69386:69386 Imp <> c var
R69395:69396 Imp <> st var
R69401:69409 Imp BreakImp SContinue constr
R69413:69414 Imp <> st var
R69356:69358 Coq.Init.Logic <> :type_scope:x_'='_x not
R69346:69350 Imp BreakImp beval def
R69355:69355 Imp <> b var
R69352:69353 Imp <> st var
R69359:69363 Coq.Init.Datatypes <> false constr
R69588:69588 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69605:69608 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69611:69614 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69624:69626 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69589:69594 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69596:69599 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69601:69604 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69595:69595 Imp <> b var
R69600:69600 Imp <> c var
R69609:69610 Imp <> st var
R69615:69623 Imp BreakImp SContinue constr
R69627:69630 Imp <> st'' var
R69534:69534 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69551:69554 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69558:69561 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69571:69573 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69535:69540 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69542:69545 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69547:69550 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69541:69541 Imp <> b var
R69546:69546 Imp <> c var
R69555:69557 Imp <> st' var
R69562:69570 Imp BreakImp SContinue constr
R69574:69577 Imp <> st'' var
R69500:69502 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69505:69508 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69518:69520 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69499:69499 Imp <> c var
R69503:69504 Imp <> st var
R69509:69517 Imp BreakImp SContinue constr
R69521:69523 Imp <> st' var
R69482:69484 Coq.Init.Logic <> :type_scope:x_'='_x not
R69472:69476 Imp BreakImp beval def
R69481:69481 Imp <> b var
R69478:69479 Imp <> st var
R69485:69488 Coq.Init.Datatypes <> true constr
R69816:69816 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69833:69836 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69839:69842 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69852:69854 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69817:69822 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69824:69827 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69829:69832 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69823:69823 Imp <> b var
R69828:69828 Imp <> c var
R69837:69838 Imp <> st var
R69843:69851 Imp BreakImp SContinue constr
R69855:69857 Imp <> st' var
R69709:69711 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69714:69717 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69724:69726 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69708:69708 Imp <> c var
R69712:69713 Imp <> st var
R69718:69723 Imp BreakImp SBreak constr
R69727:69729 Imp <> st' var
R69691:69693 Coq.Init.Logic <> :type_scope:x_'='_x not
R69681:69685 Imp BreakImp beval def
R69690:69690 Imp <> b var
R69687:69688 Imp <> st var
R69694:69697 Coq.Init.Datatypes <> true constr
R69899:69903 Imp BreakImp ceval ind
not 69868 BreakImp ::x_'/'_x_'\\'_x_'/'_x
prf 70002:70013 BreakImp break_ignore
R70079:70081 Coq.Init.Logic <> :type_scope:x_'='_x not
R70077:70078 Imp <> st var
R70082:70084 Imp <> st' var
R70041:70041 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70051:70054 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70057:70060 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70062:70064 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70047:70049 Imp BreakImp ::x_';;'_x not
R70042:70046 Imp BreakImp ::'BREAK' not
R70050:70050 Imp <> c var
R70055:70056 Imp <> st var
R70061:70061 Imp <> s var
R70065:70067 Imp <> st' var
prf 70169:70182 BreakImp while_continue
R70250:70252 Coq.Init.Logic <> :type_scope:x_'='_x not
R70249:70249 Imp <> s var
R70253:70261 Imp BreakImp SContinue constr
R70209:70209 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70226:70229 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70232:70235 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70237:70239 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70210:70215 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70217:70220 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70222:70225 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70216:70216 Imp <> b var
R70221:70221 Imp <> c var
R70230:70231 Imp <> st var
R70236:70236 Imp <> s var
R70240:70242 Imp <> st' var
prf 70320:70339 BreakImp while_stops_on_break
R70415:70415 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70432:70435 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70438:70441 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70451:70453 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70416:70421 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70423:70426 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70428:70431 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70422:70422 Imp <> b var
R70427:70427 Imp <> c var
R70436:70437 Imp <> st var
R70442:70450 Imp BreakImp SContinue constr
R70454:70456 Imp <> st' var
R70388:70390 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70393:70396 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70403:70405 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70387:70387 Imp <> c var
R70391:70392 Imp <> st var
R70397:70402 Imp BreakImp SBreak constr
R70406:70408 Imp <> st' var
R70374:70376 Coq.Init.Logic <> :type_scope:x_'='_x not
R70364:70368 Imp BreakImp beval def
R70373:70373 Imp <> b var
R70370:70371 Imp <> st var
R70377:70380 Coq.Init.Datatypes <> true constr
R70480:70495 Imp BreakImp E_WhileLoopBreak constr
R70480:70495 Imp BreakImp E_WhileLoopBreak constr
prf 70600:70615 BreakImp while_break_true
R70712:70718 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R70723:70724 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R70726:70728 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70733:70736 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70743:70745 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70725:70725 Imp <> c var
R70729:70732 Imp <> st'' var
R70737:70742 Imp BreakImp SBreak constr
R70746:70748 Imp <> st' var
R70699:70701 Coq.Init.Logic <> :type_scope:x_'='_x not
R70688:70692 Imp BreakImp beval def
R70698:70698 Imp <> b var
R70694:70696 Imp <> st' var
R70702:70705 Coq.Init.Datatypes <> true constr
R70640:70640 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70657:70660 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70663:70666 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70676:70678 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70641:70646 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70648:70651 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70653:70656 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70647:70647 Imp <> b var
R70652:70652 Imp <> c var
R70661:70662 Imp <> st var
R70667:70675 Imp BreakImp SContinue constr
R70679:70681 Imp <> st' var
R70776:70781 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70783:70786 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70788:70791 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70776:70781 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70783:70786 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70788:70791 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 71114:71132 BreakImp ceval_deterministic
R71145:71147 Imp BreakImp com ind
R71237:71240 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71231:71233 Coq.Init.Logic <> :type_scope:x_'='_x not
R71228:71230 Imp <> st1 var
R71234:71236 Imp <> st2 var
R71243:71245 Coq.Init.Logic <> :type_scope:x_'='_x not
R71241:71242 Imp <> s1 var
R71246:71247 Imp <> s2 var
R71202:71204 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71207:71210 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71213:71215 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71201:71201 Imp <> c var
R71205:71206 Imp <> st var
R71211:71212 Imp <> s2 var
R71216:71218 Imp <> st2 var
R71174:71176 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71179:71182 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71185:71187 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71173:71173 Imp <> c var
R71177:71178 Imp <> st var
R71183:71184 Imp <> s1 var
R71188:71190 Imp <> st1 var
R71486:71489 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71479:71481 Coq.Init.Logic <> :type_scope:x_'='_x not
R71496:71498 Coq.Init.Logic <> :type_scope:x_'='_x not
R71490:71495 Imp BreakImp SBreak constr
R71499:71507 Imp BreakImp SContinue constr
R71486:71489 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71479:71481 Coq.Init.Logic <> :type_scope:x_'='_x not
R71496:71498 Coq.Init.Logic <> :type_scope:x_'='_x not
R71490:71495 Imp BreakImp SBreak constr
R71499:71507 Imp BreakImp SContinue constr
R71612:71615 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71606:71608 Coq.Init.Logic <> :type_scope:x_'='_x not
R71625:71627 Coq.Init.Logic <> :type_scope:x_'='_x not
R71616:71624 Imp BreakImp SContinue constr
R71628:71633 Imp BreakImp SBreak constr
R71612:71615 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71606:71608 Coq.Init.Logic <> :type_scope:x_'='_x not
R71625:71627 Coq.Init.Logic <> :type_scope:x_'='_x not
R71616:71624 Imp BreakImp SContinue constr
R71628:71633 Imp BreakImp SBreak constr
R71739:71742 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71732:71734 Coq.Init.Logic <> :type_scope:x_'='_x not
R71752:71754 Coq.Init.Logic <> :type_scope:x_'='_x not
R71743:71751 Imp BreakImp SContinue constr
R71755:71763 Imp BreakImp SContinue constr
R71739:71742 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71732:71734 Coq.Init.Logic <> :type_scope:x_'='_x not
R71752:71754 Coq.Init.Logic <> :type_scope:x_'='_x not
R71743:71751 Imp BreakImp SContinue constr
R71755:71763 Imp BreakImp SContinue constr
R72033:72038 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72040:72043 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72045:72048 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72033:72038 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72040:72043 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72045:72048 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72316:72319 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72309:72311 Coq.Init.Logic <> :type_scope:x_'='_x not
R72329:72331 Coq.Init.Logic <> :type_scope:x_'='_x not
R72320:72328 Imp BreakImp SContinue constr
R72332:72340 Imp BreakImp SContinue constr
R72316:72319 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72309:72311 Coq.Init.Logic <> :type_scope:x_'='_x not
R72329:72331 Coq.Init.Logic <> :type_scope:x_'='_x not
R72320:72328 Imp BreakImp SContinue constr
R72332:72340 Imp BreakImp SContinue constr
R72446:72449 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72440:72442 Coq.Init.Logic <> :type_scope:x_'='_x not
R72459:72461 Coq.Init.Logic <> :type_scope:x_'='_x not
R72450:72458 Imp BreakImp SContinue constr
R72462:72467 Imp BreakImp SBreak constr
R72446:72449 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72440:72442 Coq.Init.Logic <> :type_scope:x_'='_x not
R72459:72461 Coq.Init.Logic <> :type_scope:x_'='_x not
R72450:72458 Imp BreakImp SContinue constr
R72462:72467 Imp BreakImp SBreak constr
R72640:72643 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72633:72635 Coq.Init.Logic <> :type_scope:x_'='_x not
R72650:72652 Coq.Init.Logic <> :type_scope:x_'='_x not
R72644:72649 Imp BreakImp SBreak constr
R72653:72661 Imp BreakImp SContinue constr
R72640:72643 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72633:72635 Coq.Init.Logic <> :type_scope:x_'='_x not
R72650:72652 Coq.Init.Logic <> :type_scope:x_'='_x not
R72644:72649 Imp BreakImp SBreak constr
R72653:72661 Imp BreakImp SContinue constr
R72785:72788 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72779:72781 Coq.Init.Logic <> :type_scope:x_'='_x not
R72795:72797 Coq.Init.Logic <> :type_scope:x_'='_x not
R72789:72794 Imp BreakImp SBreak constr
R72798:72803 Imp BreakImp SBreak constr
R72785:72788 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72779:72781 Coq.Init.Logic <> :type_scope:x_'='_x not
R72795:72797 Coq.Init.Logic <> :type_scope:x_'='_x not
R72789:72794 Imp BreakImp SBreak constr
R72798:72803 Imp BreakImp SBreak constr
R72883:72890 Imp <> <> mod
mod 73646:73651 <> ForImp
ind 73664:73666 ForImp com
constr 73682:73686 ForImp CSkip
constr 73698:73703 ForImp CBreak
constr 73715:73718 ForImp CAss
constr 73744:73747 ForImp CSeq
constr 73773:73775 ForImp CIf
constr 73809:73814 ForImp CWhile
constr 73841:73844 ForImp CFor
R73690:73692 Imp <> com ind
R73707:73709 Imp <> com ind
R73736:73738 Imp <> com ind
R73728:73731 Imp ForImp aexp ind
R73722:73723 Maps <> id ind
R73765:73767 Imp <> com ind
R73758:73760 Imp <> com ind
R73751:73753 Imp <> com ind
R73801:73803 Imp <> com ind
R73794:73796 Imp <> com ind
R73787:73789 Imp <> com ind
R73779:73782 Imp ForImp bexp ind
R73833:73835 Imp <> com ind
R73826:73828 Imp <> com ind
R73818:73821 Imp ForImp bexp ind
R73877:73879 Imp <> com ind
R73870:73872 Imp <> com ind
R73863:73865 Imp <> com ind
R73855:73858 Imp ForImp bexp ind
R73848:73850 Imp <> com ind
ind 73901:73906 ForImp result
constr 73922:73930 ForImp SContinue
constr 73945:73950 ForImp SBreak
R73934:73939 Imp <> result ind
R73954:73959 Imp <> result ind
R74084:74088 Imp ForImp CSkip constr
not 74070 ForImp ::'SKIP'
R74115:74120 Imp ForImp CBreak constr
not 74100 ForImp ::'BREAK'
R74150:74153 Imp ForImp CAss constr
not 74132 ForImp ::x_'::='_x
R74201:74204 Imp ForImp CSeq constr
not 74184 ForImp ::x_';;'_x
R74289:74294 Imp ForImp CWhile constr
not 74258 ForImp ::'WHILE'_x_'DO'_x_'END'
R74388:74390 Imp ForImp CIf constr
not 74346 ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R74506:74509 Imp ForImp CFor constr
not 74447 ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END'
ind 74585:74589 ForImp ceval
constr 74640:74645 ForImp E_Skip
constr 74697:74701 ForImp E_Ass
constr 74808:74817 ForImp E_SeqBreak
constr 74918:74930 ForImp E_SeqContinue
constr 75082:75089 ForImp E_IfTrue
constr 75241:75249 ForImp E_IfFalse
constr 75402:75411 ForImp E_WhileEnd
constr 75512:75530 ForImp E_WhileLoopContinue
constr 75729:75744 ForImp E_WhileLoopBreak
constr 75881:75885 ForImp E_For
R74619:74623 Imp ForImp state def
R74609:74614 Imp ForImp result ind
R74600:74604 Imp ForImp state def
R74593:74595 Imp ForImp com ind
R76198:76202 Imp <> ceval ind
R74669:74671 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74674:74677 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74687:74689 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74664:74668 Imp ForImp CSkip constr
R74672:74673 Imp <> st var
R74678:74686 Imp ForImp SContinue constr
R74690:74691 Imp <> st var
R74755:74755 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74764:74767 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74770:74773 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74783:74786 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74802:74802 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74757:74761 Imp ForImp ::x_'::='_x not
R74756:74756 Imp <> x var
R74762:74763 Imp <> a1 var
R74768:74769 Imp <> st var
R74774:74782 Imp ForImp SContinue constr
R74787:74794 Maps <> t_update def
R74801:74801 Imp <> n var
R74799:74799 Imp <> x var
R74796:74797 Imp <> st var
R74741:74743 Coq.Init.Logic <> :type_scope:x_'='_x not
R74730:74734 Imp ForImp aeval def
R74739:74740 Imp <> a1 var
R74736:74737 Imp <> st var
R74744:74744 Imp <> n var
R74882:74882 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74891:74894 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74897:74900 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74907:74909 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74885:74888 Imp ForImp ::x_';;'_x not
R74883:74884 Imp <> c1 var
R74889:74890 Imp <> c2 var
R74895:74896 Imp <> st var
R74901:74906 Imp ForImp SBreak constr
R74910:74912 Imp <> st' var
R74850:74852 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74855:74859 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74866:74868 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74848:74849 Imp <> c1 var
R74853:74854 Imp <> st var
R74860:74865 Imp ForImp SBreak constr
R74869:74871 Imp <> st' var
R75045:75045 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75054:75057 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75060:75063 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75070:75072 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75048:75051 Imp ForImp ::x_';;'_x not
R75046:75047 Imp <> c1 var
R75052:75053 Imp <> c2 var
R75058:75059 Imp <> st var
R75064:75069 Imp <> signal var
R75073:75076 Imp <> st'' var
R75012:75014 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75018:75021 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75028:75030 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75010:75011 Imp <> c2 var
R75015:75017 Imp <> st' var
R75022:75027 Imp <> signal var
R75031:75034 Imp <> st'' var
R74975:74977 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74980:74984 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74994:74996 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74973:74974 Imp <> c1 var
R74978:74979 Imp <> st var
R74985:74993 Imp ForImp SContinue constr
R74997:74999 Imp <> st' var
R75189:75189 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75214:75217 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75220:75223 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75230:75232 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75190:75193 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75195:75200 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75203:75208 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75211:75213 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75194:75194 Imp <> b var
R75201:75202 Imp <> c1 var
R75209:75210 Imp <> c2 var
R75218:75219 Imp <> st var
R75224:75229 Imp <> signal var
R75233:75235 Imp <> st' var
R75158:75160 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75163:75166 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75173:75175 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75156:75157 Imp <> c1 var
R75161:75162 Imp <> st var
R75167:75172 Imp <> signal var
R75176:75178 Imp <> st' var
R75139:75141 Coq.Init.Logic <> :type_scope:x_'='_x not
R75129:75133 Imp ForImp beval def
R75138:75138 Imp <> b var
R75135:75136 Imp <> st var
R75142:75145 Coq.Init.Datatypes <> true constr
R75350:75350 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75375:75378 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75381:75384 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75391:75393 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75351:75354 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75356:75361 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75364:75369 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75372:75374 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75355:75355 Imp <> b var
R75362:75363 Imp <> c1 var
R75370:75371 Imp <> c2 var
R75379:75380 Imp <> st var
R75385:75390 Imp <> signal var
R75394:75396 Imp <> st' var
R75319:75321 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75324:75327 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75334:75336 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75317:75318 Imp <> c2 var
R75322:75323 Imp <> st var
R75328:75333 Imp <> signal var
R75337:75339 Imp <> st' var
R75299:75301 Coq.Init.Logic <> :type_scope:x_'='_x not
R75289:75293 Imp ForImp beval def
R75298:75298 Imp <> b var
R75295:75296 Imp <> st var
R75302:75306 Coq.Init.Datatypes <> false constr
R75464:75464 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75481:75484 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75487:75490 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75500:75502 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75465:75470 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75472:75475 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75477:75480 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75471:75471 Imp <> b var
R75476:75476 Imp <> c var
R75485:75486 Imp <> st var
R75491:75499 Imp ForImp SContinue constr
R75503:75504 Imp <> st var
R75446:75448 Coq.Init.Logic <> :type_scope:x_'='_x not
R75436:75440 Imp ForImp beval def
R75445:75445 Imp <> b var
R75442:75443 Imp <> st var
R75449:75453 Coq.Init.Datatypes <> false constr
R75680:75680 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75697:75700 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75703:75706 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75716:75718 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75681:75686 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75688:75691 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75693:75696 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75687:75687 Imp <> b var
R75692:75692 Imp <> c var
R75701:75702 Imp <> st var
R75707:75715 Imp ForImp SContinue constr
R75719:75722 Imp <> st'' var
R75626:75626 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75643:75646 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75650:75653 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75663:75665 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75627:75632 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75634:75637 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75639:75642 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75633:75633 Imp <> b var
R75638:75638 Imp <> c var
R75647:75649 Imp <> st' var
R75654:75662 Imp ForImp SContinue constr
R75666:75669 Imp <> st'' var
R75592:75594 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75597:75600 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75610:75612 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75591:75591 Imp <> c var
R75595:75596 Imp <> st var
R75601:75609 Imp ForImp SContinue constr
R75613:75615 Imp <> st' var
R75574:75576 Coq.Init.Logic <> :type_scope:x_'='_x not
R75564:75568 Imp ForImp beval def
R75573:75573 Imp <> b var
R75570:75571 Imp <> st var
R75577:75580 Coq.Init.Datatypes <> true constr
R75832:75832 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75849:75852 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75855:75858 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75868:75870 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75833:75838 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75840:75843 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75845:75848 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75839:75839 Imp <> b var
R75844:75844 Imp <> c var
R75853:75854 Imp <> st var
R75859:75867 Imp ForImp SContinue constr
R75871:75873 Imp <> st' var
R75801:75803 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75806:75809 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75816:75818 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75800:75800 Imp <> c var
R75804:75805 Imp <> st var
R75810:75815 Imp ForImp SBreak constr
R75819:75821 Imp <> st' var
R75783:75785 Coq.Init.Logic <> :type_scope:x_'='_x not
R75773:75777 Imp ForImp beval def
R75782:75782 Imp <> b var
R75779:75780 Imp <> st var
R75786:75789 Coq.Init.Datatypes <> true constr
R76098:76098 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76130:76133 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76136:76139 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76149:76151 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76099:76102 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76109:76110 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76112:76113 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76116:76119 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76126:76129 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76103:76108 Imp <> c_init var
R76111:76111 Imp <> b var
R76114:76115 Imp <> c2 var
R76120:76125 Imp <> c_body var
R76134:76135 Imp <> st var
R76140:76148 Imp ForImp SContinue constr
R76152:76154 Imp <> st' var
R75989:75989 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76018:76021 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76029:76032 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76042:76044 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75990:75995 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75997:76001 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76013:76017 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75996:75996 Imp <> b var
R76008:76010 Imp ForImp ::x_';;'_x not
R76002:76007 Imp <> c_body var
R76011:76012 Imp <> c2 var
R76022:76028 Imp <> st_init var
R76033:76041 Imp ForImp SContinue constr
R76045:76047 Imp <> st' var
R75943:75944 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75947:75950 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75960:75962 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75937:75942 Imp <> c_init var
R75945:75946 Imp <> st var
R75951:75959 Imp ForImp SContinue constr
R75963:75969 Imp <> st_init var
R76198:76202 Imp ForImp ceval ind
not 76167 ForImp ::x_'/'_x_'\\'_x_'/'_x
prf 76250:76261 ForImp break_ignore
R76327:76329 Coq.Init.Logic <> :type_scope:x_'='_x not
R76325:76326 Imp <> st var
R76330:76332 Imp <> st' var
R76289:76289 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76299:76302 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76305:76308 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76310:76312 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76295:76297 Imp ForImp ::x_';;'_x not
R76290:76294 Imp ForImp ::'BREAK' not
R76298:76298 Imp <> c var
R76303:76304 Imp <> st var
R76309:76309 Imp <> s var
R76313:76315 Imp <> st' var
prf 76417:76430 ForImp while_continue
R76498:76500 Coq.Init.Logic <> :type_scope:x_'='_x not
R76497:76497 Imp <> s var
R76501:76509 Imp ForImp SContinue constr
R76457:76457 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76474:76477 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76480:76483 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76485:76487 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76458:76463 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76465:76468 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76470:76473 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76464:76464 Imp <> b var
R76469:76469 Imp <> c var
R76478:76479 Imp <> st var
R76484:76484 Imp <> s var
R76488:76490 Imp <> st' var
prf 76568:76587 ForImp while_stops_on_break
R76663:76663 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76680:76683 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76686:76689 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76699:76701 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76664:76669 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76671:76674 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76676:76679 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76670:76670 Imp <> b var
R76675:76675 Imp <> c var
R76684:76685 Imp <> st var
R76690:76698 Imp ForImp SContinue constr
R76702:76704 Imp <> st' var
R76636:76638 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76641:76644 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76651:76653 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76635:76635 Imp <> c var
R76639:76640 Imp <> st var
R76645:76650 Imp ForImp SBreak constr
R76654:76656 Imp <> st' var
R76622:76624 Coq.Init.Logic <> :type_scope:x_'='_x not
R76612:76616 Imp ForImp beval def
R76621:76621 Imp <> b var
R76618:76619 Imp <> st var
R76625:76628 Coq.Init.Datatypes <> true constr
R76728:76743 Imp ForImp E_WhileLoopBreak constr
R76728:76743 Imp ForImp E_WhileLoopBreak constr
prf 76767:76782 ForImp while_break_true
R76879:76885 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R76890:76891 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R76893:76895 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76900:76903 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76910:76912 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76892:76892 Imp <> c var
R76896:76899 Imp <> st'' var
R76904:76909 Imp ForImp SBreak constr
R76913:76915 Imp <> st' var
R76866:76868 Coq.Init.Logic <> :type_scope:x_'='_x not
R76855:76859 Imp ForImp beval def
R76865:76865 Imp <> b var
R76861:76863 Imp <> st' var
R76869:76872 Coq.Init.Datatypes <> true constr
R76807:76807 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76824:76827 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76830:76833 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76843:76845 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76808:76813 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76815:76818 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76820:76823 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76814:76814 Imp <> b var
R76819:76819 Imp <> c var
R76828:76829 Imp <> st var
R76834:76842 Imp ForImp SContinue constr
R76846:76848 Imp <> st' var
R76943:76948 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76950:76953 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76955:76958 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76943:76948 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76950:76953 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76955:76958 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
def 77270:77289 ForImp Pceval_deterministic
R77295:77297 Imp ForImp com ind
R77385:77388 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77379:77381 Coq.Init.Logic <> :type_scope:x_'='_x not
R77376:77378 Imp <> st1 var
R77382:77384 Imp <> st2 var
R77391:77393 Coq.Init.Logic <> :type_scope:x_'='_x not
R77389:77390 Imp <> s1 var
R77394:77395 Imp <> s2 var
R77354:77356 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77359:77362 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77365:77366 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77353:77353 Imp <> c var
R77357:77358 Imp <> st var
R77363:77364 Imp <> s2 var
R77367:77369 Imp <> st2 var
R77331:77333 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77336:77339 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77342:77343 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77330:77330 Imp <> c var
R77334:77335 Imp <> st var
R77340:77341 Imp <> s1 var
R77344:77346 Imp <> st1 var
prf 77407:77423 ForImp seq_deterministic
R77501:77520 Imp ForImp Pceval_deterministic def
R77525:77527 Imp ForImp ::x_';;'_x not
R77523:77524 Imp <> c1 var
R77528:77529 Imp <> c2 var
R77472:77491 Imp ForImp Pceval_deterministic def
R77493:77494 Imp <> c2 var
R77443:77462 Imp ForImp Pceval_deterministic def
R77464:77465 Imp <> c1 var
R77547:77566 Imp ForImp Pceval_deterministic def
R77657:77660 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77650:77652 Coq.Init.Logic <> :type_scope:x_'='_x not
R77667:77669 Coq.Init.Logic <> :type_scope:x_'='_x not
R77661:77666 Imp ForImp SBreak constr
R77670:77678 Imp ForImp SContinue constr
R77657:77660 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77650:77652 Coq.Init.Logic <> :type_scope:x_'='_x not
R77667:77669 Coq.Init.Logic <> :type_scope:x_'='_x not
R77661:77666 Imp ForImp SBreak constr
R77670:77678 Imp ForImp SContinue constr
R77775:77778 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77769:77771 Coq.Init.Logic <> :type_scope:x_'='_x not
R77788:77790 Coq.Init.Logic <> :type_scope:x_'='_x not
R77779:77787 Imp ForImp SContinue constr
R77791:77796 Imp ForImp SBreak constr
R77775:77778 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77769:77771 Coq.Init.Logic <> :type_scope:x_'='_x not
R77788:77790 Coq.Init.Logic <> :type_scope:x_'='_x not
R77779:77787 Imp ForImp SContinue constr
R77791:77796 Imp ForImp SBreak constr
R77894:77897 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77887:77889 Coq.Init.Logic <> :type_scope:x_'='_x not
R77907:77909 Coq.Init.Logic <> :type_scope:x_'='_x not
R77898:77906 Imp ForImp SContinue constr
R77910:77918 Imp ForImp SContinue constr
R77894:77897 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77887:77889 Coq.Init.Logic <> :type_scope:x_'='_x not
R77907:77909 Coq.Init.Logic <> :type_scope:x_'='_x not
R77898:77906 Imp ForImp SContinue constr
R77910:77918 Imp ForImp SContinue constr
prf 78009:78027 ForImp while_deterministic
R78073:78092 Imp ForImp Pceval_deterministic def
R78095:78100 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78102:78105 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78107:78110 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78101:78101 Imp <> b var
R78106:78106 Imp <> c var
R78045:78064 Imp ForImp Pceval_deterministic def
R78066:78066 Imp <> c var
R78128:78147 Imp ForImp Pceval_deterministic def
R78168:78173 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78175:78178 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78180:78183 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78168:78173 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78175:78178 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78180:78183 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78457:78460 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78450:78452 Coq.Init.Logic <> :type_scope:x_'='_x not
R78470:78472 Coq.Init.Logic <> :type_scope:x_'='_x not
R78461:78469 Imp ForImp SContinue constr
R78473:78481 Imp ForImp SContinue constr
R78457:78460 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78450:78452 Coq.Init.Logic <> :type_scope:x_'='_x not
R78470:78472 Coq.Init.Logic <> :type_scope:x_'='_x not
R78461:78469 Imp ForImp SContinue constr
R78473:78481 Imp ForImp SContinue constr
R78585:78588 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78579:78581 Coq.Init.Logic <> :type_scope:x_'='_x not
R78598:78600 Coq.Init.Logic <> :type_scope:x_'='_x not
R78589:78597 Imp ForImp SContinue constr
R78601:78606 Imp ForImp SBreak constr
R78585:78588 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78579:78581 Coq.Init.Logic <> :type_scope:x_'='_x not
R78598:78600 Coq.Init.Logic <> :type_scope:x_'='_x not
R78589:78597 Imp ForImp SContinue constr
R78601:78606 Imp ForImp SBreak constr
R78778:78781 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78771:78773 Coq.Init.Logic <> :type_scope:x_'='_x not
R78788:78790 Coq.Init.Logic <> :type_scope:x_'='_x not
R78782:78787 Imp ForImp SBreak constr
R78791:78799 Imp ForImp SContinue constr
R78778:78781 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78771:78773 Coq.Init.Logic <> :type_scope:x_'='_x not
R78788:78790 Coq.Init.Logic <> :type_scope:x_'='_x not
R78782:78787 Imp ForImp SBreak constr
R78791:78799 Imp ForImp SContinue constr
R78921:78924 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78915:78917 Coq.Init.Logic <> :type_scope:x_'='_x not
R78931:78933 Coq.Init.Logic <> :type_scope:x_'='_x not
R78925:78930 Imp ForImp SBreak constr
R78934:78939 Imp ForImp SBreak constr
R78921:78924 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78915:78917 Coq.Init.Logic <> :type_scope:x_'='_x not
R78931:78933 Coq.Init.Logic <> :type_scope:x_'='_x not
R78925:78930 Imp ForImp SBreak constr
R78934:78939 Imp ForImp SBreak constr
prf 79027:79045 ForImp ceval_deterministic
R79058:79060 Imp ForImp com ind
R79150:79153 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79144:79146 Coq.Init.Logic <> :type_scope:x_'='_x not
R79141:79143 Imp <> st1 var
R79147:79149 Imp <> st2 var
R79156:79158 Coq.Init.Logic <> :type_scope:x_'='_x not
R79154:79155 Imp <> s1 var
R79159:79160 Imp <> s2 var
R79115:79117 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79120:79123 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79126:79128 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79114:79114 Imp <> c var
R79118:79119 Imp <> st var
R79124:79125 Imp <> s2 var
R79129:79131 Imp <> st2 var
R79087:79089 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79092:79095 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79098:79100 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79086:79086 Imp <> c var
R79090:79091 Imp <> st var
R79096:79097 Imp <> s1 var
R79101:79103 Imp <> st1 var
R79360:79379 Imp ForImp Pceval_deterministic def
R79384:79387 Imp ForImp ::x_';;'_x not
R79360:79379 Imp ForImp Pceval_deterministic def
R79384:79387 Imp ForImp ::x_';;'_x not
R79402:79418 Imp ForImp seq_deterministic thm
R79402:79418 Imp ForImp seq_deterministic thm
R79436:79455 Imp ForImp Pceval_deterministic def
R79696:79715 Imp ForImp Pceval_deterministic def
R79718:79723 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79725:79728 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79730:79733 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79696:79715 Imp ForImp Pceval_deterministic def
R79718:79723 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79725:79728 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79730:79733 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79746:79764 Imp ForImp while_deterministic thm
R79746:79764 Imp ForImp while_deterministic thm
R79782:79801 Imp ForImp Pceval_deterministic def
R79945:79948 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79934:79936 Coq.Init.Logic <> :type_scope:x_'='_x not
R79958:79960 Coq.Init.Logic <> :type_scope:x_'='_x not
R79949:79957 Imp ForImp SContinue constr
R79961:79969 Imp ForImp SContinue constr
R79945:79948 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79934:79936 Coq.Init.Logic <> :type_scope:x_'='_x not
R79958:79960 Coq.Init.Logic <> :type_scope:x_'='_x not
R79949:79957 Imp ForImp SContinue constr
R79961:79969 Imp ForImp SContinue constr
R80162:80181 Imp ForImp Pceval_deterministic def
R80186:80188 Imp ForImp ::x_';;'_x not
R80162:80181 Imp ForImp Pceval_deterministic def
R80186:80188 Imp ForImp ::x_';;'_x not
R80203:80219 Imp ForImp seq_deterministic thm
R80203:80219 Imp ForImp seq_deterministic thm
R80257:80276 Imp ForImp Pceval_deterministic def
R80279:80284 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80286:80289 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80297:80300 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80292:80294 Imp ForImp ::x_';;'_x not
R80257:80276 Imp ForImp Pceval_deterministic def
R80279:80284 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80286:80289 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80297:80300 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80292:80294 Imp ForImp ::x_';;'_x not
R80313:80331 Imp ForImp while_deterministic thm
R80313:80331 Imp ForImp while_deterministic thm
R80349:80368 Imp ForImp Pceval_deterministic def
R80384:80403 Imp ForImp Pceval_deterministic def
R80449:80454 Imp <> <> mod
