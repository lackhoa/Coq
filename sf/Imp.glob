DIGEST 08e121e82e2ebd150a7a357384186dc1
FImp
R1032:1044 Coq.Bool.Bool <> <> lib
R1062:1076 Coq.Arith.Arith <> <> lib
R1094:1108 Coq.Arith.EqNat <> <> lib
R1126:1140 Coq.omega.Omega <> <> lib
R1158:1171 Coq.Lists.List <> <> lib
R1248:1251 Maps <> <> lib
mod 1752:1755 <> AExp
ind 1872:1875 AExp aexp
constr 1891:1894 AExp ANum
constr 1914:1918 AExp APlus
constr 1947:1952 AExp AMinus
constr 1981:1985 AExp AMult
R1901:1904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1905:1908 Imp <> aexp ind
R1898:1900 Coq.Init.Datatypes <> nat ind
R1926:1929 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1934:1937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1938:1941 Imp <> aexp ind
R1930:1933 Imp <> aexp ind
R1922:1925 Imp <> aexp ind
R1960:1963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1968:1971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1972:1975 Imp <> aexp ind
R1964:1967 Imp <> aexp ind
R1956:1959 Imp <> aexp ind
R1993:1996 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2001:2004 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2005:2008 Imp <> aexp ind
R1997:2000 Imp <> aexp ind
R1989:1992 Imp <> aexp ind
ind 2022:2025 AExp bexp
constr 2041:2045 AExp BTrue
constr 2058:2063 AExp BFalse
constr 2076:2078 AExp BEq
constr 2107:2109 AExp BLe
constr 2138:2141 AExp BNot
constr 2162:2165 AExp BAnd
R2049:2052 Imp <> bexp ind
R2067:2070 Imp <> bexp ind
R2086:2089 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2094:2097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2098:2101 Imp <> bexp ind
R2090:2093 Imp AExp aexp ind
R2082:2085 Imp AExp aexp ind
R2117:2120 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2125:2128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2129:2132 Imp <> bexp ind
R2121:2124 Imp AExp aexp ind
R2113:2116 Imp AExp aexp ind
R2149:2152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2153:2156 Imp <> bexp ind
R2145:2148 Imp <> bexp ind
R2173:2176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2181:2184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2185:2188 Imp <> bexp ind
R2177:2180 Imp <> bexp ind
R2169:2172 Imp <> bexp ind
def 4855:4859 AExp aeval
R4866:4869 Imp AExp aexp ind
R4874:4876 Coq.Init.Datatypes <> nat ind
R4889:4889 Imp <> a var
R4900:4903 Imp AExp ANum constr
R4916:4920 Imp AExp APlus constr
R4931:4931 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4940:4944 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4953:4953 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R4932:4936 Imp <> aeval def
R4945:4949 Imp <> aeval def
R4959:4964 Imp AExp AMinus constr
R4976:4976 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4985:4989 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4998:4998 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R4977:4981 Imp <> aeval def
R4990:4994 Imp <> aeval def
R5004:5008 Imp AExp AMult constr
R5019:5019 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5028:5032 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5041:5041 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R5020:5024 Imp <> aeval def
R5033:5037 Imp <> aeval def
def 5059:5069 AExp test_aeval1
R5105:5107 Coq.Init.Logic <> :type_scope:x_'='_x not
R5074:5078 Imp AExp aeval def
R5081:5085 Imp AExp APlus constr
R5097:5100 Imp AExp ANum constr
R5088:5091 Imp AExp ANum constr
def 5215:5219 AExp beval
R5226:5229 Imp AExp bexp ind
R5234:5237 Coq.Init.Datatypes <> bool ind
R5250:5250 Imp <> b var
R5261:5265 Imp AExp BTrue constr
R5276:5279 Coq.Init.Datatypes <> true constr
R5285:5290 Imp AExp BFalse constr
R5300:5304 Coq.Init.Datatypes <> false constr
R5310:5312 Imp AExp BEq constr
R5325:5331 Coq.Arith.EqNat <> beq_nat syndef
R5345:5349 Imp AExp aeval def
R5334:5338 Imp AExp aeval def
R5359:5361 Imp AExp BLe constr
R5374:5376 Coq.Arith.Compare_dec <> leb syndef
R5390:5394 Imp AExp aeval def
R5379:5383 Imp AExp aeval def
R5404:5407 Imp AExp BNot constr
R5419:5422 Coq.Init.Datatypes <> negb def
R5425:5429 Imp <> beval def
R5439:5442 Imp AExp BAnd constr
R5454:5457 Coq.Init.Datatypes <> andb def
R5471:5475 Imp <> beval def
R5460:5464 Imp <> beval def
def 5884:5897 AExp optimize_0plus
R5902:5905 Imp AExp aexp ind
R5910:5913 Imp AExp aexp ind
R5926:5926 Imp <> a var
R5937:5940 Imp AExp ANum constr
R5953:5956 Imp AExp ANum constr
R5964:5968 Imp AExp APlus constr
R5971:5974 Imp AExp ANum constr
R5991:6004 Imp <> optimize_0plus def
R6013:6017 Imp AExp APlus constr
R6034:6038 Imp AExp APlus constr
R6061:6074 Imp <> optimize_0plus def
R6041:6054 Imp <> optimize_0plus def
R6084:6089 Imp AExp AMinus constr
R6106:6111 Imp AExp AMinus constr
R6134:6147 Imp <> optimize_0plus def
R6114:6127 Imp <> optimize_0plus def
R6157:6161 Imp AExp AMult constr
R6178:6182 Imp AExp AMult constr
R6205:6218 Imp <> optimize_0plus def
R6185:6198 Imp <> optimize_0plus def
def 6371:6389 AExp test_optimize_0plus
R6523:6527 Coq.Init.Logic <> :type_scope:x_'='_x not
R6394:6407 Imp AExp optimize_0plus def
R6410:6414 Imp AExp APlus constr
R6450:6454 Imp AExp APlus constr
R6497:6501 Imp AExp APlus constr
R6513:6516 Imp AExp ANum constr
R6504:6507 Imp AExp ANum constr
R6457:6460 Imp AExp ANum constr
R6417:6420 Imp AExp ANum constr
R6528:6532 Imp AExp APlus constr
R6544:6547 Imp AExp ANum constr
R6535:6538 Imp AExp ANum constr
prf 6767:6786 AExp optimize_0plus_sound
R6825:6827 Coq.Init.Logic <> :type_scope:x_'='_x not
R6801:6805 Imp AExp aeval def
R6808:6821 Imp AExp optimize_0plus def
R6823:6823 Imp <> a var
R6828:6832 Imp AExp aeval def
R6834:6834 Imp <> a var
prf 8959:8964 AExp silly1
R8987:8989 Coq.Init.Logic <> :type_scope:x_'='_x not
R8979:8983 Imp AExp aeval def
R8985:8986 Imp <> ae var
R8990:8994 Imp AExp aeval def
R8996:8997 Imp <> ae var
prf 9073:9078 AExp silly2
R9102:9105 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9106:9106 Imp <> P var
R9101:9101 Imp <> P var
prf 9845:9847 AExp foo
R9868:9870 Coq.Init.Logic <> :type_scope:x_'='_x not
R9861:9863 Coq.Arith.Compare_dec <> leb syndef
R9867:9867 Imp <> n var
R9871:9874 Coq.Init.Datatypes <> true constr
prf 10121:10124 AExp foo'
R10145:10147 Coq.Init.Logic <> :type_scope:x_'='_x not
R10138:10140 Coq.Arith.Compare_dec <> leb syndef
R10144:10144 Imp <> n var
R10148:10151 Coq.Init.Datatypes <> true constr
prf 10488:10508 AExp optimize_0plus_sound'
R10547:10549 Coq.Init.Logic <> :type_scope:x_'='_x not
R10523:10527 Imp AExp aeval def
R10530:10543 Imp AExp optimize_0plus def
R10545:10545 Imp <> a var
R10550:10554 Imp AExp aeval def
R10556:10556 Imp <> a var
prf 13379:13400 AExp optimize_0plus_sound''
R13439:13441 Coq.Init.Logic <> :type_scope:x_'='_x not
R13415:13419 Imp AExp aeval def
R13422:13435 Imp AExp optimize_0plus def
R13437:13437 Imp <> a var
R13442:13446 Imp AExp aeval def
R13448:13448 Imp <> a var
prf 14809:14812 AExp In10
R14816:14817 Coq.Lists.List <> In def
R14822:14822 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14824:14824 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14826:14826 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14828:14828 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14830:14830 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14832:14832 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14834:14834 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14836:14836 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14838:14838 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14840:14840 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R14843:14843 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
prf 15108:15112 AExp In10'
R15116:15117 Coq.Lists.List <> In def
R15122:15122 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15124:15124 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15126:15126 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15128:15128 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15130:15130 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15132:15132 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15134:15134 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15136:15136 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15138:15138 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15140:15140 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R15143:15143 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 16345:16360 AExp optimize_0plus_b
R16367:16370 Imp AExp bexp ind
R16375:16378 Imp AExp bexp ind
R16389:16389 Imp <> b var
R16400:16404 Imp AExp BTrue constr
R16409:16413 Imp AExp BTrue constr
R16419:16424 Imp AExp BFalse constr
R16429:16434 Imp AExp BFalse constr
R16440:16442 Imp AExp BEq constr
R16453:16455 Imp AExp BEq constr
R16478:16491 Imp AExp optimize_0plus def
R16458:16471 Imp AExp optimize_0plus def
R16501:16503 Imp AExp BLe constr
R16514:16516 Imp AExp BLe constr
R16539:16552 Imp AExp optimize_0plus def
R16519:16532 Imp AExp optimize_0plus def
R16562:16565 Imp AExp BNot constr
R16572:16575 Imp AExp BNot constr
R16577:16577 Imp <> b var
R16583:16586 Imp AExp BAnd constr
R16597:16600 Imp AExp BAnd constr
prf 16622:16643 AExp optimize_0plus_b_sound
R16685:16687 Coq.Init.Logic <> :type_scope:x_'='_x not
R16659:16663 Imp AExp beval def
R16666:16681 Imp AExp optimize_0plus_b def
R16683:16683 Imp <> b var
R16688:16692 Imp AExp beval def
R16694:16694 Imp <> b var
R16755:16774 Imp AExp optimize_0plus_sound thm
R16755:16774 Imp AExp optimize_0plus_sound thm
R16755:16774 Imp AExp optimize_0plus_sound thm
R16755:16774 Imp AExp optimize_0plus_sound thm
R16755:16774 Imp AExp optimize_0plus_sound thm
R16755:16774 Imp AExp optimize_0plus_sound thm
R16807:16826 Imp AExp optimize_0plus_sound thm
R16807:16826 Imp AExp optimize_0plus_sound thm
R16807:16826 Imp AExp optimize_0plus_sound thm
R16807:16826 Imp AExp optimize_0plus_sound thm
R16807:16826 Imp AExp optimize_0plus_sound thm
R16807:16826 Imp AExp optimize_0plus_sound thm
R19734:19748 Coq.omega.Omega <> <> lib
def 19760:19783 AExp silly_presburger_example
R19836:19841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19843:19846 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19842:19842 Imp <> m var
R19847:19847 Imp <> p var
R19819:19822 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R19810:19813 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R19806:19808 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19805:19805 Imp <> m var
R19809:19809 Imp <> n var
R19815:19817 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19814:19814 Imp <> n var
R19818:19818 Imp <> o var
R19828:19830 Coq.Init.Logic <> :type_scope:x_'='_x not
R19824:19826 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19823:19823 Imp <> o var
R19832:19834 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R19831:19831 Imp <> p var
mod 21662:21677 <> AExp.aevalR_first_try
ind 21691:21696 AExp.aevalR_first_try aevalR
constr 21727:21732 AExp.aevalR_first_try E_ANum
constr 21782:21788 AExp.aevalR_first_try E_APlus
constr 21912:21919 AExp.aevalR_first_try E_AMinus
constr 22043:22049 AExp.aevalR_first_try E_AMult
R21704:21707 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21711:21714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21708:21710 Coq.Init.Datatypes <> nat ind
R21700:21703 Imp AExp aexp ind
R21748:21750 Coq.Init.Datatypes <> nat ind
R21760:21765 Imp <> aevalR ind
R21776:21776 Imp <> n var
R21768:21771 Imp AExp ANum constr
R21773:21773 Imp <> n var
R21807:21810 Imp AExp aexp ind
R21821:21823 Coq.Init.Datatypes <> nat ind
R21845:21854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21867:21876 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21877:21882 Imp <> aevalR ind
R21901:21903 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R21899:21900 Imp <> n1 var
R21904:21905 Imp <> n2 var
R21885:21889 Imp AExp APlus constr
R21894:21895 Imp <> e2 var
R21891:21892 Imp <> e1 var
R21855:21860 Imp <> aevalR ind
R21865:21866 Imp <> n2 var
R21862:21863 Imp <> e2 var
R21833:21838 Imp <> aevalR ind
R21843:21844 Imp <> n1 var
R21840:21841 Imp <> e1 var
R21937:21940 Imp AExp aexp ind
R21951:21953 Coq.Init.Datatypes <> nat ind
R21975:21984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21997:22006 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22007:22012 Imp <> aevalR ind
R22032:22034 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R22030:22031 Imp <> n1 var
R22035:22036 Imp <> n2 var
R22015:22020 Imp AExp AMinus constr
R22025:22026 Imp <> e2 var
R22022:22023 Imp <> e1 var
R21985:21990 Imp <> aevalR ind
R21995:21996 Imp <> n2 var
R21992:21993 Imp <> e2 var
R21963:21968 Imp <> aevalR ind
R21973:21974 Imp <> n1 var
R21970:21971 Imp <> e1 var
R22068:22071 Imp AExp aexp ind
R22082:22084 Coq.Init.Datatypes <> nat ind
R22106:22115 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22128:22137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22138:22143 Imp <> aevalR ind
R22162:22164 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R22160:22161 Imp <> n1 var
R22165:22166 Imp <> n2 var
R22146:22150 Imp AExp AMult constr
R22155:22156 Imp <> e2 var
R22152:22153 Imp <> e1 var
R22116:22121 Imp <> aevalR ind
R22126:22127 Imp <> n2 var
R22123:22124 Imp <> e2 var
R22094:22099 Imp <> aevalR ind
R22104:22105 Imp <> n1 var
R22101:22102 Imp <> e1 var
R22688:22693 Imp AExp.aevalR_first_try aevalR ind
not 22664:22664 AExp.aevalR_first_try :type_scope:x_'\\'_x
R22774:22789 Imp AExp.aevalR_first_try <> mod
ind 23320:23325 AExp aevalR
constr 23356:23361 AExp E_ANum
constr 23405:23411 AExp E_APlus
constr 23516:23523 AExp E_AMinus
constr 23629:23635 AExp E_AMult
R23333:23336 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23340:23343 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23337:23339 Coq.Init.Datatypes <> nat ind
R23329:23332 Imp AExp aexp ind
R23761:23766 Imp <> aevalR var
R23375:23377 Coq.Init.Datatypes <> nat ind
R23387:23387 Imp AExp :type_scope:x_'\\'_x not
R23394:23398 Imp AExp :type_scope:x_'\\'_x not
R23388:23391 Imp AExp ANum constr
R23393:23393 Imp <> n var
R23399:23399 Imp <> n var
R23430:23433 Imp AExp aexp ind
R23445:23447 Coq.Init.Datatypes <> nat ind
R23457:23457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23466:23470 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23471:23471 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23480:23484 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23485:23485 Imp AExp :type_scope:x_'\\'_x not
R23497:23502 Imp AExp :type_scope:x_'\\'_x not
R23510:23510 Imp AExp :type_scope:x_'\\'_x not
R23486:23490 Imp AExp APlus constr
R23495:23496 Imp <> e2 var
R23492:23493 Imp <> e1 var
R23505:23507 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23503:23504 Imp <> n1 var
R23508:23509 Imp <> n2 var
R23474:23477 Imp AExp :type_scope:x_'\\'_x not
R23472:23473 Imp <> e2 var
R23478:23479 Imp <> n2 var
R23460:23463 Imp AExp :type_scope:x_'\\'_x not
R23458:23459 Imp <> e1 var
R23464:23465 Imp <> n1 var
R23542:23545 Imp AExp aexp ind
R23557:23559 Coq.Init.Datatypes <> nat ind
R23569:23569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23578:23582 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23583:23583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23592:23596 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23597:23597 Imp AExp :type_scope:x_'\\'_x not
R23610:23615 Imp AExp :type_scope:x_'\\'_x not
R23623:23623 Imp AExp :type_scope:x_'\\'_x not
R23598:23603 Imp AExp AMinus constr
R23608:23609 Imp <> e2 var
R23605:23606 Imp <> e1 var
R23618:23620 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23616:23617 Imp <> n1 var
R23621:23622 Imp <> n2 var
R23586:23589 Imp AExp :type_scope:x_'\\'_x not
R23584:23585 Imp <> e2 var
R23590:23591 Imp <> n2 var
R23572:23575 Imp AExp :type_scope:x_'\\'_x not
R23570:23571 Imp <> e1 var
R23576:23577 Imp <> n1 var
R23655:23658 Imp AExp aexp ind
R23670:23672 Coq.Init.Datatypes <> nat ind
R23682:23682 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23691:23695 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23696:23696 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23705:23709 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23710:23710 Imp AExp :type_scope:x_'\\'_x not
R23722:23727 Imp AExp :type_scope:x_'\\'_x not
R23735:23735 Imp AExp :type_scope:x_'\\'_x not
R23711:23715 Imp AExp AMult constr
R23720:23721 Imp <> e2 var
R23717:23718 Imp <> e1 var
R23730:23732 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23728:23729 Imp <> n1 var
R23733:23734 Imp <> n2 var
R23699:23702 Imp AExp :type_scope:x_'\\'_x not
R23697:23698 Imp <> e2 var
R23703:23704 Imp <> n2 var
R23685:23688 Imp AExp :type_scope:x_'\\'_x not
R23683:23684 Imp <> e1 var
R23689:23690 Imp <> n1 var
R23761:23766 Imp AExp aevalR ind
not 23746:23746 AExp :type_scope:x_'\\'_x
prf 26635:26650 AExp aeval_iff_aevalR
R26668:26668 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26675:26680 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R26670:26673 Imp AExp :type_scope:x_'\\'_x not
R26669:26669 Imp <> a var
R26674:26674 Imp <> n var
R26688:26690 Coq.Init.Logic <> :type_scope:x_'='_x not
R26681:26685 Imp AExp aeval def
R26687:26687 Imp <> a var
R26691:26691 Imp <> n var
R27135:27140 Imp AExp E_ANum constr
R27135:27140 Imp AExp E_ANum constr
R27171:27177 Imp AExp E_APlus constr
R27171:27177 Imp AExp E_APlus constr
R27271:27278 Imp AExp E_AMinus constr
R27271:27278 Imp AExp E_AMinus constr
R27371:27377 Imp AExp E_AMult constr
R27371:27377 Imp AExp E_AMult constr
prf 27543:27559 AExp aeval_iff_aevalR'
R27577:27577 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27584:27589 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R27579:27582 Imp AExp :type_scope:x_'\\'_x not
R27578:27578 Imp <> a var
R27583:27583 Imp <> n var
R27597:27599 Coq.Init.Logic <> :type_scope:x_'='_x not
R27590:27594 Imp AExp aeval def
R27596:27596 Imp <> a var
R27600:27600 Imp <> n var
ind 28017:28022 AExp bevalR
constr 28053:28059 AExp E_BTrue
constr 28085:28092 AExp E_BFalse
constr 28120:28124 AExp E_BEq
constr 28224:28228 AExp E_BLe
constr 28319:28324 AExp E_BNot
constr 28383:28388 AExp E_BAnd
R28029:28032 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28037:28040 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28033:28036 Coq.Init.Datatypes <> bool ind
R28025:28028 Imp AExp bexp ind
R28063:28068 Imp <> bevalR ind
R28076:28079 Coq.Init.Datatypes <> true constr
R28070:28074 Imp AExp BTrue constr
R28096:28101 Imp <> bevalR ind
R28110:28114 Coq.Init.Datatypes <> false constr
R28103:28108 Imp AExp BFalse constr
R28152:28152 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28161:28165 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28166:28166 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28175:28184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28185:28190 Imp <> bevalR ind
R28205:28211 Coq.Arith.EqNat <> beq_nat syndef
R28216:28217 Imp <> n2 var
R28213:28214 Imp <> n1 var
R28193:28195 Imp AExp BEq constr
R28200:28201 Imp <> e2 var
R28197:28198 Imp <> e1 var
R28169:28172 Imp AExp :type_scope:x_'\\'_x not
R28167:28168 Imp <> e2 var
R28173:28174 Imp <> n2 var
R28155:28158 Imp AExp :type_scope:x_'\\'_x not
R28153:28154 Imp <> e1 var
R28159:28160 Imp <> n1 var
R28256:28256 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28265:28269 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28270:28270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28279:28283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28284:28289 Imp <> bevalR ind
R28304:28306 Coq.Arith.Compare_dec <> leb syndef
R28311:28312 Imp <> n2 var
R28308:28309 Imp <> n1 var
R28292:28294 Imp AExp BLe constr
R28299:28300 Imp <> e2 var
R28296:28297 Imp <> e1 var
R28273:28276 Imp AExp :type_scope:x_'\\'_x not
R28271:28272 Imp <> e2 var
R28277:28278 Imp <> n2 var
R28259:28262 Imp AExp :type_scope:x_'\\'_x not
R28257:28258 Imp <> e1 var
R28263:28264 Imp <> n1 var
R28350:28353 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28354:28359 Imp <> bevalR ind
R28371:28374 Coq.Init.Datatypes <> negb def
R28376:28376 Imp <> b var
R28362:28365 Imp AExp BNot constr
R28367:28367 Imp <> e var
R28340:28345 Imp <> bevalR ind
R28349:28349 Imp <> b var
R28347:28347 Imp <> e var
R28429:28432 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28445:28453 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28454:28459 Imp <> bevalR ind
R28477:28480 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R28475:28476 Imp <> b1 var
R28481:28482 Imp <> b2 var
R28462:28465 Imp AExp BAnd constr
R28470:28471 Imp <> e2 var
R28467:28468 Imp <> e1 var
R28433:28438 Imp <> bevalR ind
R28443:28444 Imp <> b2 var
R28440:28441 Imp <> e2 var
R28417:28422 Imp <> bevalR ind
R28427:28428 Imp <> b1 var
R28424:28425 Imp <> e1 var
prf 28493:28508 AExp beval_iff_bevalR
R28538:28542 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R28527:28532 Imp AExp bevalR ind
R28536:28537 Imp <> bv var
R28534:28534 Imp <> b var
R28550:28552 Coq.Init.Logic <> :type_scope:x_'='_x not
R28543:28547 Imp AExp beval def
R28549:28549 Imp <> b var
R28553:28554 Imp <> bv var
R28623:28638 Imp AExp aeval_iff_aevalR thm
R28623:28638 Imp AExp aeval_iff_aevalR thm
R28652:28667 Imp AExp aeval_iff_aevalR thm
R28652:28667 Imp AExp aeval_iff_aevalR thm
R28690:28705 Imp AExp aeval_iff_aevalR thm
R28690:28705 Imp AExp aeval_iff_aevalR thm
R28719:28734 Imp AExp aeval_iff_aevalR thm
R28719:28734 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28877:28892 Imp AExp aeval_iff_aevalR thm
R28924:28927 Imp AExp <> mod
mod 29390:29404 <> aevalR_division
ind 29543:29546 aevalR_division aexp
constr 29562:29565 aevalR_division ANum
constr 29585:29589 aevalR_division APlus
constr 29618:29623 aevalR_division AMinus
constr 29652:29656 aevalR_division AMult
constr 29685:29688 aevalR_division ADiv
R29572:29575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29576:29579 Imp <> aexp ind
R29569:29571 Coq.Init.Datatypes <> nat ind
R29597:29600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29605:29608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29609:29612 Imp <> aexp ind
R29601:29604 Imp <> aexp ind
R29593:29596 Imp <> aexp ind
R29631:29634 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29639:29642 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29643:29646 Imp <> aexp ind
R29635:29638 Imp <> aexp ind
R29627:29630 Imp <> aexp ind
R29664:29667 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29672:29675 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29676:29679 Imp <> aexp ind
R29668:29671 Imp <> aexp ind
R29660:29663 Imp <> aexp ind
R29696:29699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29704:29707 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29708:29711 Imp <> aexp ind
R29700:29703 Imp <> aexp ind
R29692:29695 Imp <> aexp ind
ind 30051:30056 aevalR_division aevalR
constr 30087:30092 aevalR_division E_ANum
constr 30136:30142 aevalR_division E_APlus
constr 30247:30254 aevalR_division E_AMinus
constr 30360:30366 aevalR_division E_AMult
constr 30472:30477 aevalR_division E_ADiv
R30064:30067 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30071:30074 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30068:30070 Coq.Init.Datatypes <> nat ind
R30060:30063 Imp aevalR_division aexp ind
R30634:30639 Imp <> aevalR var
R30106:30108 Coq.Init.Datatypes <> nat ind
R30118:30118 Imp aevalR_division :type_scope:x_'\\'_x not
R30125:30129 Imp aevalR_division :type_scope:x_'\\'_x not
R30119:30122 Imp aevalR_division ANum constr
R30124:30124 Imp <> n var
R30130:30130 Imp <> n var
R30161:30164 Imp aevalR_division aexp ind
R30176:30178 Coq.Init.Datatypes <> nat ind
R30188:30188 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30197:30201 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30202:30202 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30211:30215 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30216:30216 Imp aevalR_division :type_scope:x_'\\'_x not
R30228:30233 Imp aevalR_division :type_scope:x_'\\'_x not
R30241:30241 Imp aevalR_division :type_scope:x_'\\'_x not
R30217:30221 Imp aevalR_division APlus constr
R30226:30227 Imp <> a2 var
R30223:30224 Imp <> a1 var
R30236:30238 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30234:30235 Imp <> n1 var
R30239:30240 Imp <> n2 var
R30205:30208 Imp aevalR_division :type_scope:x_'\\'_x not
R30203:30204 Imp <> a2 var
R30209:30210 Imp <> n2 var
R30191:30194 Imp aevalR_division :type_scope:x_'\\'_x not
R30189:30190 Imp <> a1 var
R30195:30196 Imp <> n1 var
R30273:30276 Imp aevalR_division aexp ind
R30288:30290 Coq.Init.Datatypes <> nat ind
R30300:30300 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30309:30313 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30314:30314 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30323:30327 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30328:30328 Imp aevalR_division :type_scope:x_'\\'_x not
R30341:30346 Imp aevalR_division :type_scope:x_'\\'_x not
R30354:30354 Imp aevalR_division :type_scope:x_'\\'_x not
R30329:30334 Imp aevalR_division AMinus constr
R30339:30340 Imp <> a2 var
R30336:30337 Imp <> a1 var
R30349:30351 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R30347:30348 Imp <> n1 var
R30352:30353 Imp <> n2 var
R30317:30320 Imp aevalR_division :type_scope:x_'\\'_x not
R30315:30316 Imp <> a2 var
R30321:30322 Imp <> n2 var
R30303:30306 Imp aevalR_division :type_scope:x_'\\'_x not
R30301:30302 Imp <> a1 var
R30307:30308 Imp <> n1 var
R30386:30389 Imp aevalR_division aexp ind
R30401:30403 Coq.Init.Datatypes <> nat ind
R30413:30413 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30422:30426 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30427:30427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30436:30440 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30441:30441 Imp aevalR_division :type_scope:x_'\\'_x not
R30453:30458 Imp aevalR_division :type_scope:x_'\\'_x not
R30466:30466 Imp aevalR_division :type_scope:x_'\\'_x not
R30442:30446 Imp aevalR_division AMult constr
R30451:30452 Imp <> a2 var
R30448:30449 Imp <> a1 var
R30461:30463 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R30459:30460 Imp <> n1 var
R30464:30465 Imp <> n2 var
R30430:30433 Imp aevalR_division :type_scope:x_'\\'_x not
R30428:30429 Imp <> a2 var
R30434:30435 Imp <> n2 var
R30416:30419 Imp aevalR_division :type_scope:x_'\\'_x not
R30414:30415 Imp <> a1 var
R30420:30421 Imp <> n1 var
R30497:30500 Imp aevalR_division aexp ind
R30514:30516 Coq.Init.Datatypes <> nat ind
R30526:30526 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30535:30539 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30540:30540 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30549:30553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30554:30554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30561:30571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30572:30572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30588:30592 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30593:30593 Imp aevalR_division :type_scope:x_'\\'_x not
R30604:30608 Imp aevalR_division :type_scope:x_'\\'_x not
R30594:30597 Imp aevalR_division ADiv constr
R30602:30603 Imp <> a2 var
R30599:30600 Imp <> a1 var
R30609:30610 Imp <> n3 var
R30583:30585 Coq.Init.Logic <> :type_scope:x_'='_x not
R30573:30576 Coq.Init.Peano <> mult syndef
R30581:30582 Imp <> n3 var
R30578:30579 Imp <> n2 var
R30586:30587 Imp <> n1 var
R30557:30559 Coq.Init.Peano <> :nat_scope:x_'>'_x not
R30555:30556 Imp <> n2 var
R30543:30546 Imp aevalR_division :type_scope:x_'\\'_x not
R30541:30542 Imp <> a2 var
R30547:30548 Imp <> n2 var
R30529:30532 Imp aevalR_division :type_scope:x_'\\'_x not
R30527:30528 Imp <> a1 var
R30533:30534 Imp <> n1 var
R30634:30639 Imp aevalR_division aevalR ind
not 30619:30619 aevalR_division :type_scope:x_'\\'_x
R30665:30679 Imp aevalR_division <> mod
mod 30690:30704 <> aevalR_extended
ind 31253:31256 aevalR_extended aexp
constr 31272:31275 aevalR_extended AAny
constr 31322:31325 aevalR_extended ANum
constr 31345:31349 aevalR_extended APlus
constr 31378:31383 aevalR_extended AMinus
constr 31412:31416 aevalR_extended AMult
R31280:31283 Imp <> aexp ind
R31332:31335 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31336:31339 Imp <> aexp ind
R31329:31331 Coq.Init.Datatypes <> nat ind
R31357:31360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31365:31368 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31369:31372 Imp <> aexp ind
R31361:31364 Imp <> aexp ind
R31353:31356 Imp <> aexp ind
R31391:31394 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31399:31402 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31403:31406 Imp <> aexp ind
R31395:31398 Imp <> aexp ind
R31387:31390 Imp <> aexp ind
R31424:31427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31432:31435 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31436:31439 Imp <> aexp ind
R31428:31431 Imp <> aexp ind
R31420:31423 Imp <> aexp ind
ind 31633:31638 aevalR_extended aevalR
constr 31669:31673 aevalR_extended E_Any
constr 31744:31749 aevalR_extended E_ANum
constr 31793:31799 aevalR_extended E_APlus
constr 31904:31911 aevalR_extended E_AMinus
constr 32017:32023 aevalR_extended E_AMult
R31646:31649 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31653:31656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31650:31652 Coq.Init.Datatypes <> nat ind
R31642:31645 Imp aevalR_extended aexp ind
R32147:32152 Imp <> aevalR var
R31687:31689 Coq.Init.Datatypes <> nat ind
R31703:31706 Imp aevalR_extended :type_scope:x_'\\'_x not
R31699:31702 Imp aevalR_extended AAny constr
R31707:31707 Imp <> n var
R31763:31765 Coq.Init.Datatypes <> nat ind
R31775:31775 Imp aevalR_extended :type_scope:x_'\\'_x not
R31782:31786 Imp aevalR_extended :type_scope:x_'\\'_x not
R31776:31779 Imp aevalR_extended ANum constr
R31781:31781 Imp <> n var
R31787:31787 Imp <> n var
R31818:31821 Imp aevalR_extended aexp ind
R31833:31835 Coq.Init.Datatypes <> nat ind
R31845:31845 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31854:31858 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31859:31859 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31868:31872 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31873:31873 Imp aevalR_extended :type_scope:x_'\\'_x not
R31885:31890 Imp aevalR_extended :type_scope:x_'\\'_x not
R31898:31898 Imp aevalR_extended :type_scope:x_'\\'_x not
R31874:31878 Imp aevalR_extended APlus constr
R31883:31884 Imp <> a2 var
R31880:31881 Imp <> a1 var
R31893:31895 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R31891:31892 Imp <> n1 var
R31896:31897 Imp <> n2 var
R31862:31865 Imp aevalR_extended :type_scope:x_'\\'_x not
R31860:31861 Imp <> a2 var
R31866:31867 Imp <> n2 var
R31848:31851 Imp aevalR_extended :type_scope:x_'\\'_x not
R31846:31847 Imp <> a1 var
R31852:31853 Imp <> n1 var
R31930:31933 Imp aevalR_extended aexp ind
R31945:31947 Coq.Init.Datatypes <> nat ind
R31957:31957 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31966:31970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31971:31971 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31980:31984 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31985:31985 Imp aevalR_extended :type_scope:x_'\\'_x not
R31998:32003 Imp aevalR_extended :type_scope:x_'\\'_x not
R32011:32011 Imp aevalR_extended :type_scope:x_'\\'_x not
R31986:31991 Imp aevalR_extended AMinus constr
R31996:31997 Imp <> a2 var
R31993:31994 Imp <> a1 var
R32006:32008 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R32004:32005 Imp <> n1 var
R32009:32010 Imp <> n2 var
R31974:31977 Imp aevalR_extended :type_scope:x_'\\'_x not
R31972:31973 Imp <> a2 var
R31978:31979 Imp <> n2 var
R31960:31963 Imp aevalR_extended :type_scope:x_'\\'_x not
R31958:31959 Imp <> a1 var
R31964:31965 Imp <> n1 var
R32043:32046 Imp aevalR_extended aexp ind
R32058:32060 Coq.Init.Datatypes <> nat ind
R32070:32070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32079:32083 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32084:32084 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32093:32097 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32098:32098 Imp aevalR_extended :type_scope:x_'\\'_x not
R32110:32115 Imp aevalR_extended :type_scope:x_'\\'_x not
R32123:32123 Imp aevalR_extended :type_scope:x_'\\'_x not
R32099:32103 Imp aevalR_extended AMult constr
R32108:32109 Imp <> a2 var
R32105:32106 Imp <> a1 var
R32118:32120 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R32116:32117 Imp <> n1 var
R32121:32122 Imp <> n2 var
R32087:32090 Imp aevalR_extended :type_scope:x_'\\'_x not
R32085:32086 Imp <> a2 var
R32091:32092 Imp <> n2 var
R32073:32076 Imp aevalR_extended :type_scope:x_'\\'_x not
R32071:32072 Imp <> a1 var
R32077:32078 Imp <> n1 var
R32147:32152 Imp aevalR_extended aevalR ind
not 32132:32132 aevalR_extended :type_scope:x_'\\'_x
R32178:32192 Imp aevalR_extended <> mod
def 34961:34965 <> state
R34970:34978 Maps <> total_map def
R34980:34982 Coq.Init.Datatypes <> nat ind
def 34997:35007 <> empty_state
R35011:35015 Imp <> state def
R35022:35028 Maps <> t_empty def
ind 35251:35254 <> aexp
constr 35270:35273 <> ANum
constr 35293:35295 <> AId
constr 35346:35350 <> APlus
constr 35379:35384 <> AMinus
constr 35413:35417 <> AMult
R35280:35283 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35284:35287 Imp <> aexp ind
R35277:35279 Coq.Init.Datatypes <> nat ind
R35301:35304 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35305:35308 Imp <> aexp ind
R35299:35300 Maps <> id ind
R35358:35361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35366:35369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35370:35373 Imp <> aexp ind
R35362:35365 Imp <> aexp ind
R35354:35357 Imp <> aexp ind
R35392:35395 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35400:35403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35404:35407 Imp <> aexp ind
R35396:35399 Imp <> aexp ind
R35388:35391 Imp <> aexp ind
R35425:35428 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35433:35436 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35437:35440 Imp <> aexp ind
R35429:35432 Imp <> aexp ind
R35421:35424 Imp <> aexp ind
def 35557:35557 <> W
R35561:35562 Maps <> id ind
R35567:35568 Maps <> Id constr
def 35586:35586 <> X
R35590:35591 Maps <> id ind
R35596:35597 Maps <> Id constr
def 35615:35615 <> Y
R35619:35620 Maps <> id ind
R35625:35626 Maps <> Id constr
def 35644:35644 <> Z
R35648:35649 Maps <> id ind
R35654:35655 Maps <> Id constr
ind 36031:36034 <> bexp
constr 36050:36054 <> BTrue
constr 36067:36072 <> BFalse
constr 36085:36087 <> BEq
constr 36116:36118 <> BLe
constr 36147:36150 <> BNot
constr 36171:36174 <> BAnd
R36058:36061 Imp <> bexp ind
R36076:36079 Imp <> bexp ind
R36095:36098 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36103:36106 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36107:36110 Imp <> bexp ind
R36099:36102 Imp <> aexp ind
R36091:36094 Imp <> aexp ind
R36126:36129 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36134:36137 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36138:36141 Imp <> bexp ind
R36130:36133 Imp <> aexp ind
R36122:36125 Imp <> aexp ind
R36158:36161 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36162:36165 Imp <> bexp ind
R36154:36157 Imp <> bexp ind
R36182:36185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36190:36193 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36194:36197 Imp <> bexp ind
R36186:36189 Imp <> bexp ind
R36178:36181 Imp <> bexp ind
def 36483:36487 <> aeval
R36495:36499 Imp <> state def
R36507:36510 Imp <> aexp ind
R36515:36517 Coq.Init.Datatypes <> nat ind
R36530:36530 Imp <> a var
R36541:36544 Imp <> ANum constr
R36557:36559 Imp <> AId constr
R36566:36567 Imp <> st var
R36623:36627 Imp <> APlus constr
R36638:36638 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36650:36654 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36666:36666 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R36639:36643 Imp <> aeval def
R36645:36646 Imp <> st var
R36655:36659 Imp <> aeval def
R36661:36662 Imp <> st var
R36672:36677 Imp <> AMinus constr
R36689:36689 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36701:36705 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36717:36717 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R36690:36694 Imp <> aeval def
R36696:36697 Imp <> st var
R36706:36710 Imp <> aeval def
R36712:36713 Imp <> st var
R36723:36727 Imp <> AMult constr
R36738:36738 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36750:36754 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36766:36766 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R36739:36743 Imp <> aeval def
R36745:36746 Imp <> st var
R36755:36759 Imp <> aeval def
R36761:36762 Imp <> st var
def 36785:36789 <> beval
R36797:36801 Imp <> state def
R36809:36812 Imp <> bexp ind
R36817:36820 Coq.Init.Datatypes <> bool ind
R36833:36833 Imp <> b var
R36844:36848 Imp <> BTrue constr
R36859:36862 Coq.Init.Datatypes <> true constr
R36868:36873 Imp <> BFalse constr
R36883:36887 Coq.Init.Datatypes <> false constr
R36893:36895 Imp <> BEq constr
R36908:36914 Coq.Arith.EqNat <> beq_nat syndef
R36931:36935 Imp <> aeval def
R36937:36938 Imp <> st var
R36917:36921 Imp <> aeval def
R36923:36924 Imp <> st var
R36948:36950 Imp <> BLe constr
R36963:36965 Coq.Arith.Compare_dec <> leb syndef
R36982:36986 Imp <> aeval def
R36988:36989 Imp <> st var
R36968:36972 Imp <> aeval def
R36974:36975 Imp <> st var
R36999:37002 Imp <> BNot constr
R37014:37017 Coq.Init.Datatypes <> negb def
R37020:37024 Imp <> beval def
R37026:37027 Imp <> st var
R37037:37040 Imp <> BAnd constr
R37052:37055 Coq.Init.Datatypes <> andb def
R37072:37076 Imp <> beval def
R37078:37079 Imp <> st var
R37058:37062 Imp <> beval def
R37064:37065 Imp <> st var
def 37101:37105 <> aexp1
R37193:37197 Coq.Init.Logic <> :type_scope:x_'='_x not
R37111:37115 Imp <> aeval def
R37153:37157 Imp <> APlus constr
R37169:37173 Imp <> AMult constr
R37184:37187 Imp <> ANum constr
R37176:37178 Imp <> AId constr
R37180:37180 Imp <> X def
R37160:37163 Imp <> ANum constr
R37118:37125 Maps <> t_update def
R37139:37139 Imp <> X def
R37127:37137 Imp <> empty_state def
def 37236:37240 <> bexp1
R37329:37333 Coq.Init.Logic <> :type_scope:x_'='_x not
R37246:37250 Imp <> beval def
R37288:37291 Imp <> BAnd constr
R37300:37303 Imp <> BNot constr
R37306:37308 Imp <> BLe constr
R37319:37322 Imp <> ANum constr
R37311:37313 Imp <> AId constr
R37315:37315 Imp <> X def
R37293:37297 Imp <> BTrue constr
R37253:37260 Maps <> t_update def
R37274:37274 Imp <> X def
R37262:37272 Imp <> empty_state def
R37334:37337 Coq.Init.Datatypes <> true constr
ind 38424:38426 <> com
constr 38442:38446 <> CSkip
constr 38458:38461 <> CAss
constr 38487:38490 <> CSeq
constr 38516:38518 <> CIf
constr 38552:38557 <> CWhile
R38450:38452 Imp <> com ind
R38467:38470 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38475:38478 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38479:38481 Imp <> com ind
R38471:38474 Imp <> aexp ind
R38465:38466 Maps <> id ind
R38497:38500 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38504:38507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38508:38510 Imp <> com ind
R38501:38503 Imp <> com ind
R38494:38496 Imp <> com ind
R38526:38529 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38533:38536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38540:38543 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38544:38546 Imp <> com ind
R38537:38539 Imp <> com ind
R38530:38532 Imp <> com ind
R38522:38525 Imp <> bexp ind
R38565:38568 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38572:38575 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38576:38578 Imp <> com ind
R38569:38571 Imp <> com ind
R38561:38564 Imp <> bexp ind
R38936:38940 Imp <> CSkip constr
not 38922:38922 <> ::'SKIP'
R38970:38973 Imp <> CAss constr
not 38952:38952 <> ::x_'::='_x
R39021:39024 Imp <> CSeq constr
not 39004:39004 <> ::x_';;'_x
R39109:39114 Imp <> CWhile constr
not 39078:39078 <> ::'WHILE'_x_'DO'_x_'END'
R39208:39210 Imp <> CIf constr
not 39166:39166 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 39372:39382 <> fact_in_coq
R39386:39388 Imp <> com ind
R39406:39410 Imp <> ::x_';;'_x not
R39396:39400 Imp <> ::x_'::='_x not
R39395:39395 Imp <> Z def
R39401:39403 Imp <> AId constr
R39405:39405 Imp <> X def
R39423:39427 Imp <> ::x_';;'_x not
R39412:39416 Imp <> ::x_'::='_x not
R39411:39411 Imp <> Y def
R39417:39420 Imp <> ANum constr
R39428:39433 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39461:39468 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39532:39537 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R39434:39437 Imp <> BNot constr
R39440:39442 Imp <> BEq constr
R39453:39456 Imp <> ANum constr
R39445:39447 Imp <> AId constr
R39449:39449 Imp <> Z def
R39496:39502 Imp <> ::x_';;'_x not
R39470:39474 Imp <> ::x_'::='_x not
R39469:39469 Imp <> Y def
R39475:39479 Imp <> AMult constr
R39490:39492 Imp <> AId constr
R39494:39494 Imp <> Z def
R39482:39484 Imp <> AId constr
R39486:39486 Imp <> Y def
R39504:39508 Imp <> ::x_'::='_x not
R39503:39503 Imp <> Z def
R39509:39514 Imp <> AMinus constr
R39525:39528 Imp <> ANum constr
R39517:39519 Imp <> AId constr
R39521:39521 Imp <> Z def
def 39669:39673 <> plus2
R39677:39679 Imp <> com ind
R39687:39692 Imp <> ::x_'::='_x not
R39715:39715 Imp <> ::x_'::='_x not
R39686:39686 Imp <> X def
R39693:39697 Imp <> APlus constr
R39708:39711 Imp <> ANum constr
R39700:39702 Imp <> AId constr
R39704:39704 Imp <> X def
def 39730:39739 <> XtimesYinZ
R39743:39745 Imp <> com ind
R39753:39758 Imp <> ::x_'::='_x not
R39780:39780 Imp <> ::x_'::='_x not
R39752:39752 Imp <> Z def
R39759:39763 Imp <> AMult constr
R39774:39776 Imp <> AId constr
R39778:39778 Imp <> Y def
R39766:39768 Imp <> AId constr
R39770:39770 Imp <> X def
def 39795:39814 <> subtract_slowly_body
R39818:39820 Imp <> com ind
R39856:39861 Imp <> ::x_';;'_x not
R39828:39832 Imp <> ::x_'::='_x not
R39827:39827 Imp <> Z def
R39833:39838 Imp <> AMinus constr
R39849:39852 Imp <> ANum constr
R39841:39843 Imp <> AId constr
R39845:39845 Imp <> Z def
R39863:39867 Imp <> ::x_'::='_x not
R39862:39862 Imp <> X def
R39868:39873 Imp <> AMinus constr
R39884:39887 Imp <> ANum constr
R39876:39878 Imp <> AId constr
R39880:39880 Imp <> X def
def 39995:40009 <> subtract_slowly
R40013:40015 Imp <> com ind
R40022:40027 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40055:40062 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40083:40088 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40028:40031 Imp <> BNot constr
R40034:40036 Imp <> BEq constr
R40047:40050 Imp <> ANum constr
R40039:40041 Imp <> AId constr
R40043:40043 Imp <> X def
R40063:40082 Imp <> subtract_slowly_body def
def 40103:40126 <> subtract_3_from_5_slowly
R40130:40132 Imp <> com ind
R40151:40156 Imp <> ::x_';;'_x not
R40140:40144 Imp <> ::x_'::='_x not
R40139:40139 Imp <> X def
R40145:40148 Imp <> ANum constr
R40169:40174 Imp <> ::x_';;'_x not
R40158:40162 Imp <> ::x_'::='_x not
R40157:40157 Imp <> Z def
R40163:40166 Imp <> ANum constr
R40175:40189 Imp <> subtract_slowly def
def 40306:40309 <> loop
R40313:40315 Imp <> com ind
R40322:40327 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40333:40340 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40345:40350 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R40328:40332 Imp <> BTrue constr
R40341:40344 Imp <> ::'SKIP' not
def 40998:41015 <> ceval_fun_no_while
R41023:41027 Imp <> state def
R41035:41037 Imp <> com ind
R41068:41072 Imp <> state def
R41085:41085 Imp <> c var
R41098:41101 Imp <> ::'SKIP' not
R41114:41115 Imp <> st var
R41124:41128 Imp <> ::x_'::='_x not
R41143:41150 Maps <> t_update def
R41158:41162 Imp <> aeval def
R41164:41165 Imp <> st var
R41152:41153 Imp <> st var
R41179:41182 Imp <> ::x_';;'_x not
R41208:41225 Imp <> ceval_fun_no_while def
R41227:41228 Imp <> st var
R41244:41261 Imp <> ceval_fun_no_while def
R41263:41265 Imp <> st' var
R41276:41279 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41281:41286 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41289:41294 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41297:41299 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R41316:41320 Imp <> beval def
R41322:41323 Imp <> st var
R41383:41400 Imp <> ceval_fun_no_while def
R41402:41403 Imp <> st var
R41343:41360 Imp <> ceval_fun_no_while def
R41362:41363 Imp <> st var
R41414:41419 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41421:41424 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41426:41429 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R41442:41443 Imp <> st var
ind 45624:45628 <> ceval
constr 45669:45674 <> E_Skip
constr 45715:45719 <> E_Ass
constr 45814:45818 <> E_Seq
constr 45933:45940 <> E_IfTrue
constr 46067:46075 <> E_IfFalse
constr 46203:46212 <> E_WhileEnd
constr 46299:46309 <> E_WhileLoop
R45635:45638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45644:45647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45653:45656 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45648:45652 Imp <> state def
R45639:45643 Imp <> state def
R45632:45634 Imp <> com ind
R46501:46505 Imp <> ceval var
R45699:45701 Imp <> ::x_'/'_x_'\\'_x not
R45704:45707 Imp <> ::x_'/'_x_'\\'_x not
R45695:45698 Imp <> ::'SKIP' not
R45702:45703 Imp <> st var
R45708:45709 Imp <> st var
R45763:45772 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45773:45773 Imp <> ::x_'/'_x_'\\'_x not
R45782:45785 Imp <> ::x_'/'_x_'\\'_x not
R45788:45792 Imp <> ::x_'/'_x_'\\'_x not
R45808:45808 Imp <> ::x_'/'_x_'\\'_x not
R45775:45779 Imp <> ::x_'::='_x not
R45774:45774 Imp <> x var
R45780:45781 Imp <> a1 var
R45786:45787 Imp <> st var
R45793:45800 Maps <> t_update def
R45807:45807 Imp <> n var
R45805:45805 Imp <> x var
R45802:45803 Imp <> st var
R45759:45761 Coq.Init.Logic <> :type_scope:x_'='_x not
R45748:45752 Imp <> aeval def
R45757:45758 Imp <> a1 var
R45754:45755 Imp <> st var
R45762:45762 Imp <> n var
R45869:45878 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45895:45904 Coq.Init.Logic <> :type_scope:x_'->'_x not
R45905:45905 Imp <> ::x_'/'_x_'\\'_x not
R45914:45917 Imp <> ::x_'/'_x_'\\'_x not
R45920:45923 Imp <> ::x_'/'_x_'\\'_x not
R45908:45911 Imp <> ::x_';;'_x not
R45906:45907 Imp <> c1 var
R45912:45913 Imp <> c2 var
R45918:45919 Imp <> st var
R45924:45927 Imp <> st'' var
R45881:45883 Imp <> ::x_'/'_x_'\\'_x not
R45887:45890 Imp <> ::x_'/'_x_'\\'_x not
R45879:45880 Imp <> c2 var
R45884:45886 Imp <> st' var
R45891:45894 Imp <> st'' var
R45856:45858 Imp <> ::x_'/'_x_'\\'_x not
R45861:45865 Imp <> ::x_'/'_x_'\\'_x not
R45854:45855 Imp <> c1 var
R45859:45860 Imp <> st var
R45866:45868 Imp <> st' var
R45990:45999 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46014:46023 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46024:46024 Imp <> ::x_'/'_x_'\\'_x not
R46049:46052 Imp <> ::x_'/'_x_'\\'_x not
R46055:46058 Imp <> ::x_'/'_x_'\\'_x not
R46025:46028 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46030:46035 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46038:46043 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46046:46048 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46029:46029 Imp <> b var
R46036:46037 Imp <> c1 var
R46044:46045 Imp <> c2 var
R46053:46054 Imp <> st var
R46059:46061 Imp <> st' var
R46002:46004 Imp <> ::x_'/'_x_'\\'_x not
R46007:46010 Imp <> ::x_'/'_x_'\\'_x not
R46000:46001 Imp <> c1 var
R46005:46006 Imp <> st var
R46011:46013 Imp <> st' var
R45983:45985 Coq.Init.Logic <> :type_scope:x_'='_x not
R45973:45977 Imp <> beval def
R45982:45982 Imp <> b var
R45979:45980 Imp <> st var
R45986:45989 Coq.Init.Datatypes <> true constr
R46126:46135 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46150:46159 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46160:46160 Imp <> ::x_'/'_x_'\\'_x not
R46185:46188 Imp <> ::x_'/'_x_'\\'_x not
R46191:46194 Imp <> ::x_'/'_x_'\\'_x not
R46161:46164 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46166:46171 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46174:46179 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46182:46184 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46165:46165 Imp <> b var
R46172:46173 Imp <> c1 var
R46180:46181 Imp <> c2 var
R46189:46190 Imp <> st var
R46195:46197 Imp <> st' var
R46138:46140 Imp <> ::x_'/'_x_'\\'_x not
R46143:46146 Imp <> ::x_'/'_x_'\\'_x not
R46136:46137 Imp <> c2 var
R46141:46142 Imp <> st var
R46147:46149 Imp <> st' var
R46118:46120 Coq.Init.Logic <> :type_scope:x_'='_x not
R46108:46112 Imp <> beval def
R46117:46117 Imp <> b var
R46114:46115 Imp <> st var
R46121:46125 Coq.Init.Datatypes <> false constr
R46255:46264 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46265:46265 Imp <> ::x_'/'_x_'\\'_x not
R46282:46285 Imp <> ::x_'/'_x_'\\'_x not
R46288:46291 Imp <> ::x_'/'_x_'\\'_x not
R46266:46271 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46273:46276 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46278:46281 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46272:46272 Imp <> b var
R46277:46277 Imp <> c var
R46286:46287 Imp <> st var
R46292:46293 Imp <> st var
R46247:46249 Coq.Init.Logic <> :type_scope:x_'='_x not
R46237:46241 Imp <> beval def
R46246:46246 Imp <> b var
R46243:46244 Imp <> st var
R46250:46254 Coq.Init.Datatypes <> false constr
R46360:46369 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46383:46392 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46425:46434 Coq.Init.Logic <> :type_scope:x_'->'_x not
R46435:46435 Imp <> ::x_'/'_x_'\\'_x not
R46452:46455 Imp <> ::x_'/'_x_'\\'_x not
R46458:46461 Imp <> ::x_'/'_x_'\\'_x not
R46436:46441 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46443:46446 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46448:46451 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46442:46442 Imp <> b var
R46447:46447 Imp <> c var
R46456:46457 Imp <> st var
R46462:46465 Imp <> st'' var
R46393:46393 Imp <> ::x_'/'_x_'\\'_x not
R46410:46413 Imp <> ::x_'/'_x_'\\'_x not
R46417:46420 Imp <> ::x_'/'_x_'\\'_x not
R46394:46399 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46401:46404 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46406:46409 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R46400:46400 Imp <> b var
R46405:46405 Imp <> c var
R46414:46416 Imp <> st' var
R46421:46424 Imp <> st'' var
R46371:46373 Imp <> ::x_'/'_x_'\\'_x not
R46376:46379 Imp <> ::x_'/'_x_'\\'_x not
R46370:46370 Imp <> c var
R46374:46375 Imp <> st var
R46380:46382 Imp <> st' var
R46353:46355 Coq.Init.Logic <> :type_scope:x_'='_x not
R46343:46347 Imp <> beval def
R46352:46352 Imp <> b var
R46349:46350 Imp <> st var
R46356:46359 Coq.Init.Datatypes <> true constr
R46501:46505 Imp <> ceval ind
not 46476:46476 <> ::x_'/'_x_'\\'_x
def 46775:46788 <> ceval_example1
R46795:46795 Imp <> ::x_'/'_x_'\\'_x not
R46898:46904 Imp <> ::x_'/'_x_'\\'_x not
R46916:46923 Imp <> ::x_'/'_x_'\\'_x not
R46963:46963 Imp <> ::x_'/'_x_'\\'_x not
R46808:46815 Imp <> ::x_';;'_x not
R46797:46801 Imp <> ::x_'::='_x not
R46796:46796 Imp <> X def
R46802:46805 Imp <> ANum constr
R46816:46819 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46840:46852 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46865:46877 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46890:46897 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R46820:46822 Imp <> BLe constr
R46833:46836 Imp <> ANum constr
R46825:46827 Imp <> AId constr
R46829:46829 Imp <> X def
R46854:46858 Imp <> ::x_'::='_x not
R46853:46853 Imp <> Y def
R46859:46862 Imp <> ANum constr
R46879:46883 Imp <> ::x_'::='_x not
R46878:46878 Imp <> Z def
R46884:46887 Imp <> ANum constr
R46905:46915 Imp <> empty_state def
R46924:46931 Maps <> t_update def
R46960:46960 Imp <> Z def
R46934:46941 Maps <> t_update def
R46955:46955 Imp <> X def
R46943:46953 Imp <> empty_state def
R47039:47046 Maps <> t_update def
R47060:47060 Imp <> X def
R47048:47058 Imp <> empty_state def
R47027:47031 Imp <> E_Seq constr
R47039:47046 Maps <> t_update def
R47060:47060 Imp <> X def
R47048:47058 Imp <> empty_state def
R47027:47031 Imp <> E_Seq constr
R47105:47109 Imp <> E_Ass constr
R47105:47109 Imp <> E_Ass constr
R47156:47164 Imp <> E_IfFalse constr
R47156:47164 Imp <> E_IfFalse constr
R47198:47202 Imp <> E_Ass constr
R47198:47202 Imp <> E_Ass constr
def 47281:47294 <> ceval_example2
R47301:47301 Imp <> ::x_'/'_x_'\\'_x not
R47344:47347 Imp <> ::x_'/'_x_'\\'_x not
R47359:47367 Imp <> ::x_'/'_x_'\\'_x not
R47422:47422 Imp <> ::x_'/'_x_'\\'_x not
R47314:47316 Imp <> ::x_';;'_x not
R47303:47307 Imp <> ::x_'::='_x not
R47302:47302 Imp <> X def
R47308:47311 Imp <> ANum constr
R47329:47331 Imp <> ::x_';;'_x not
R47318:47322 Imp <> ::x_'::='_x not
R47317:47317 Imp <> Y def
R47323:47326 Imp <> ANum constr
R47333:47337 Imp <> ::x_'::='_x not
R47332:47332 Imp <> Z def
R47338:47341 Imp <> ANum constr
R47348:47358 Imp <> empty_state def
R47368:47375 Maps <> t_update def
R47419:47419 Imp <> Z def
R47378:47385 Maps <> t_update def
R47414:47414 Imp <> Y def
R47388:47395 Maps <> t_update def
R47409:47409 Imp <> X def
R47397:47407 Imp <> empty_state def
R47450:47457 Maps <> t_update def
R47471:47471 Imp <> X def
R47459:47469 Imp <> empty_state def
R47438:47442 Imp <> E_Seq constr
R47450:47457 Maps <> t_update def
R47471:47471 Imp <> X def
R47459:47469 Imp <> empty_state def
R47438:47442 Imp <> E_Seq constr
R47505:47509 Imp <> E_Ass constr
R47505:47509 Imp <> E_Ass constr
R47538:47545 Maps <> t_update def
R47574:47574 Imp <> Y def
R47548:47555 Maps <> t_update def
R47569:47569 Imp <> X def
R47557:47567 Imp <> empty_state def
R47526:47530 Imp <> E_Seq constr
R47538:47545 Maps <> t_update def
R47574:47574 Imp <> Y def
R47548:47555 Maps <> t_update def
R47569:47569 Imp <> X def
R47557:47567 Imp <> empty_state def
R47526:47530 Imp <> E_Seq constr
R47610:47614 Imp <> E_Ass constr
R47610:47614 Imp <> E_Ass constr
R47653:47657 Imp <> E_Ass constr
R47653:47657 Imp <> E_Ass constr
def 47975:47982 <> pup_to_n
R47986:47988 Imp <> com ind
R48026:48058 Imp <> ::x_';;'_x not
R48015:48019 Imp <> ::x_'::='_x not
R48014:48014 Imp <> Y def
R48020:48023 Imp <> ANum constr
R48059:48065 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48093:48123 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48206:48211 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R48066:48069 Imp <> BNot constr
R48072:48074 Imp <> BEq constr
R48085:48088 Imp <> ANum constr
R48077:48079 Imp <> AId constr
R48081:48081 Imp <> X def
R48151:48176 Imp <> ::x_';;'_x not
R48125:48129 Imp <> ::x_'::='_x not
R48124:48124 Imp <> Y def
R48130:48134 Imp <> APlus constr
R48145:48147 Imp <> AId constr
R48149:48149 Imp <> X def
R48137:48139 Imp <> AId constr
R48141:48141 Imp <> Y def
R48178:48182 Imp <> ::x_'::='_x not
R48177:48177 Imp <> X def
R48183:48188 Imp <> AMinus constr
R48199:48202 Imp <> ANum constr
R48191:48193 Imp <> AId constr
R48195:48195 Imp <> X def
prf 48223:48236 <> pup_to_2_ceval
R48250:48253 Imp <> ::x_'/'_x_'\\'_x not
R48278:48286 Imp <> ::x_'/'_x_'\\'_x not
R48242:48249 Imp <> pup_to_n def
R48254:48261 Maps <> t_update def
R48275:48275 Imp <> X def
R48263:48273 Imp <> empty_state def
R48287:48294 Maps <> t_update def
R48389:48389 Imp <> X def
R48297:48304 Maps <> t_update def
R48384:48384 Imp <> Y def
R48307:48314 Maps <> t_update def
R48379:48379 Imp <> X def
R48317:48324 Maps <> t_update def
R48374:48374 Imp <> Y def
R48327:48334 Maps <> t_update def
R48369:48369 Imp <> Y def
R48337:48344 Maps <> t_update def
R48364:48364 Imp <> X def
R48346:48356 Imp <> empty_state def
R48408:48415 Imp <> pup_to_n def
R48436:48443 Maps <> t_update def
R48472:48472 Imp <> Y def
R48446:48453 Maps <> t_update def
R48467:48467 Imp <> X def
R48455:48465 Imp <> empty_state def
R48424:48428 Imp <> E_Seq constr
R48436:48443 Maps <> t_update def
R48472:48472 Imp <> Y def
R48446:48453 Maps <> t_update def
R48467:48467 Imp <> X def
R48455:48465 Imp <> empty_state def
R48424:48428 Imp <> E_Seq constr
R48486:48490 Imp <> E_Ass constr
R48486:48490 Imp <> E_Ass constr
R48587:48594 Maps <> t_update def
R48656:48656 Imp <> X def
R48597:48604 Maps <> t_update def
R48651:48651 Imp <> Y def
R48607:48614 Maps <> t_update def
R48646:48646 Imp <> Y def
R48620:48627 Maps <> t_update def
R48641:48641 Imp <> X def
R48629:48639 Imp <> empty_state def
R48563:48573 Imp <> E_WhileLoop constr
R48587:48594 Maps <> t_update def
R48656:48656 Imp <> X def
R48597:48604 Maps <> t_update def
R48651:48651 Imp <> Y def
R48607:48614 Maps <> t_update def
R48646:48646 Imp <> Y def
R48620:48627 Maps <> t_update def
R48641:48641 Imp <> X def
R48629:48639 Imp <> empty_state def
R48563:48573 Imp <> E_WhileLoop constr
R48711:48718 Maps <> t_update def
R48762:48762 Imp <> Y def
R48721:48728 Maps <> t_update def
R48757:48757 Imp <> Y def
R48731:48738 Maps <> t_update def
R48752:48752 Imp <> X def
R48740:48750 Imp <> empty_state def
R48699:48703 Imp <> E_Seq constr
R48777:48781 Imp <> E_Ass constr
R48711:48718 Maps <> t_update def
R48762:48762 Imp <> Y def
R48721:48728 Maps <> t_update def
R48757:48757 Imp <> Y def
R48731:48738 Maps <> t_update def
R48752:48752 Imp <> X def
R48740:48750 Imp <> empty_state def
R48699:48703 Imp <> E_Seq constr
R48777:48781 Imp <> E_Ass constr
R48777:48781 Imp <> E_Ass constr
R48818:48825 Maps <> t_update def
R48926:48926 Imp <> X def
R48830:48837 Maps <> t_update def
R48921:48921 Imp <> Y def
R48845:48852 Maps <> t_update def
R48911:48911 Imp <> X def
R48855:48862 Maps <> t_update def
R48906:48906 Imp <> Y def
R48865:48872 Maps <> t_update def
R48901:48901 Imp <> Y def
R48875:48882 Maps <> t_update def
R48896:48896 Imp <> X def
R48884:48894 Imp <> empty_state def
R48800:48810 Imp <> E_WhileLoop constr
R48818:48825 Maps <> t_update def
R48926:48926 Imp <> X def
R48830:48837 Maps <> t_update def
R48921:48921 Imp <> Y def
R48845:48852 Maps <> t_update def
R48911:48911 Imp <> X def
R48855:48862 Maps <> t_update def
R48906:48906 Imp <> Y def
R48865:48872 Maps <> t_update def
R48901:48901 Imp <> Y def
R48875:48882 Maps <> t_update def
R48896:48896 Imp <> X def
R48884:48894 Imp <> empty_state def
R48800:48810 Imp <> E_WhileLoop constr
R48967:48974 Maps <> t_update def
R49058:49058 Imp <> Y def
R48982:48989 Maps <> t_update def
R49048:49048 Imp <> X def
R48992:48999 Maps <> t_update def
R49043:49043 Imp <> Y def
R49002:49009 Maps <> t_update def
R49038:49038 Imp <> Y def
R49012:49019 Maps <> t_update def
R49033:49033 Imp <> X def
R49021:49031 Imp <> empty_state def
R48955:48959 Imp <> E_Seq constr
R49070:49074 Imp <> E_Ass constr
R48967:48974 Maps <> t_update def
R49058:49058 Imp <> Y def
R48982:48989 Maps <> t_update def
R49048:49048 Imp <> X def
R48992:48999 Maps <> t_update def
R49043:49043 Imp <> Y def
R49002:49009 Maps <> t_update def
R49038:49038 Imp <> Y def
R49012:49019 Maps <> t_update def
R49033:49033 Imp <> X def
R49021:49031 Imp <> empty_state def
R48955:48959 Imp <> E_Seq constr
R49070:49074 Imp <> E_Ass constr
R49070:49074 Imp <> E_Ass constr
R49093:49102 Imp <> E_WhileEnd constr
R49093:49102 Imp <> E_WhileEnd constr
prf 49899:49917 <> ceval_deterministic
R49959:49968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49982:49990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R49994:49996 Coq.Init.Logic <> :type_scope:x_'='_x not
R49991:49993 Imp <> st1 var
R49997:49999 Imp <> st2 var
R49970:49972 Imp <> ::x_'/'_x_'\\'_x not
R49975:49978 Imp <> ::x_'/'_x_'\\'_x not
R49969:49969 Imp <> c var
R49973:49974 Imp <> st var
R49979:49981 Imp <> st2 var
R49947:49949 Imp <> ::x_'/'_x_'\\'_x not
R49952:49955 Imp <> ::x_'/'_x_'\\'_x not
R49946:49946 Imp <> c var
R49950:49951 Imp <> st var
R49956:49958 Imp <> st1 var
R50219:50221 Coq.Init.Logic <> :type_scope:x_'='_x not
R50219:50221 Coq.Init.Logic <> :type_scope:x_'='_x not
R50986:50988 Coq.Init.Logic <> :type_scope:x_'='_x not
R50986:50988 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 51468:51477 <> plus2_spec
R51508:51513 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51531:51536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R51542:51544 Coq.Init.Logic <> :type_scope:x_'='_x not
R51537:51539 Imp <> st' var
R51541:51541 Imp <> X def
R51546:51548 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R51545:51545 Imp <> n var
R51519:51521 Imp <> ::x_'/'_x_'\\'_x not
R51524:51527 Imp <> ::x_'/'_x_'\\'_x not
R51514:51518 Imp <> plus2 def
R51522:51523 Imp <> st var
R51528:51530 Imp <> st' var
R51504:51506 Coq.Init.Logic <> :type_scope:x_'='_x not
R51500:51501 Imp <> st var
R51503:51503 Imp <> X def
R51507:51507 Imp <> n var
R51874:51884 Maps <> t_update_eq thm
R51874:51884 Maps <> t_update_eq thm
prf 52021:52035 <> XtimesYinZ_spec
R52068:52071 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52080:52085 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52108:52113 Coq.Init.Logic <> :type_scope:x_'->'_x not
R52119:52121 Coq.Init.Logic <> :type_scope:x_'='_x not
R52114:52116 Imp <> st' var
R52118:52118 Imp <> Z def
R52123:52125 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R52122:52122 Imp <> n var
R52126:52126 Imp <> m var
R52096:52098 Imp <> ::x_'/'_x_'\\'_x not
R52101:52104 Imp <> ::x_'/'_x_'\\'_x not
R52086:52095 Imp <> XtimesYinZ def
R52099:52100 Imp <> st var
R52105:52107 Imp <> st' var
R52076:52078 Coq.Init.Logic <> :type_scope:x_'='_x not
R52072:52073 Imp <> st var
R52075:52075 Imp <> Y def
R52079:52079 Imp <> m var
R52064:52066 Coq.Init.Logic <> :type_scope:x_'='_x not
R52060:52061 Imp <> st var
R52063:52063 Imp <> X def
R52067:52067 Imp <> n var
R52178:52188 Maps <> t_update_eq thm
R52178:52188 Maps <> t_update_eq thm
prf 52279:52294 <> loop_never_stops
R52315:52316 Coq.Init.Logic <> :type_scope:'~'_x not
R52333:52333 Coq.Init.Logic <> :type_scope:'~'_x not
R52321:52323 Imp <> ::x_'/'_x_'\\'_x not
R52326:52329 Imp <> ::x_'/'_x_'\\'_x not
R52317:52320 Imp <> loop def
R52324:52325 Imp <> st var
R52330:52332 Imp <> st' var
R52374:52377 Imp <> loop def
R52402:52407 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52413:52416 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52421:52424 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52408:52412 Imp <> BTrue constr
R52417:52420 Imp <> ::'SKIP' not
R52402:52407 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52413:52416 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52421:52424 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R52408:52412 Imp <> BTrue constr
R52417:52420 Imp <> ::'SKIP' not
def 52885:52893 <> no_whiles
R52900:52902 Imp <> com ind
R52907:52910 Coq.Init.Datatypes <> bool ind
R52923:52923 Imp <> c var
R52934:52937 Imp <> ::'SKIP' not
R52948:52951 Coq.Init.Datatypes <> true constr
R52958:52962 Imp <> ::x_'::='_x not
R52974:52977 Coq.Init.Datatypes <> true constr
R52985:52988 Imp <> ::x_';;'_x not
R53001:53004 Coq.Init.Datatypes <> andb def
R53022:53030 Imp <> no_whiles def
R53007:53015 Imp <> no_whiles def
R53040:53043 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53045:53050 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53053:53058 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53061:53063 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R53074:53077 Coq.Init.Datatypes <> andb def
R53095:53103 Imp <> no_whiles def
R53080:53088 Imp <> no_whiles def
R53113:53118 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53120:53123 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53125:53128 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R53140:53144 Coq.Init.Datatypes <> false constr
ind 53440:53449 <> no_whilesR
constr 53470:53484 <> no_whilesR_Skip
constr 53507:53520 <> no_whilesR_Ass
constr 53561:53574 <> no_whilesR_Seq
constr 53657:53669 <> no_whilesR_If
R53455:53458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53452:53454 Imp <> com ind
R53488:53497 Imp <> no_whilesR ind
R53499:53502 Imp <> ::'SKIP' not
R53536:53545 Imp <> no_whilesR ind
R53548:53551 Imp <> CAss constr
R53555:53555 Imp <> a var
R53553:53553 Imp <> i var
R53609:53612 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53626:53629 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53630:53639 Imp <> no_whilesR ind
R53642:53645 Imp <> CSeq constr
R53650:53651 Imp <> c2 var
R53647:53648 Imp <> c1 var
R53613:53622 Imp <> no_whilesR ind
R53624:53625 Imp <> c2 var
R53596:53605 Imp <> no_whilesR ind
R53607:53608 Imp <> c1 var
R53705:53708 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53722:53725 Coq.Init.Logic <> :type_scope:x_'->'_x not
R53726:53735 Imp <> no_whilesR ind
R53738:53740 Imp <> CIf constr
R53747:53748 Imp <> cf var
R53744:53745 Imp <> ct var
R53742:53742 Imp <> b var
R53709:53718 Imp <> no_whilesR ind
R53720:53721 Imp <> cf var
R53692:53701 Imp <> no_whilesR ind
R53703:53704 Imp <> ct var
prf 53761:53773 <> no_whiles_eqv
R53807:53811 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R53800:53802 Coq.Init.Logic <> :type_scope:x_'='_x not
R53789:53797 Imp <> no_whiles def
R53799:53799 Imp <> c var
R53803:53806 Coq.Init.Datatypes <> true constr
R53812:53821 Imp <> no_whilesR ind
R53823:53823 Imp <> c var
R53913:53927 Imp <> no_whilesR_Skip constr
R53913:53927 Imp <> no_whilesR_Skip constr
R53940:53953 Imp <> no_whilesR_Ass constr
R53940:53953 Imp <> no_whilesR_Ass constr
R53966:53978 Coq.Bool.Bool <> andb_true_iff thm
R53966:53978 Coq.Bool.Bool <> andb_true_iff thm
R54024:54037 Imp <> no_whilesR_Seq constr
R54024:54037 Imp <> no_whilesR_Seq constr
R54089:54101 Coq.Bool.Bool <> andb_true_iff thm
R54089:54101 Coq.Bool.Bool <> andb_true_iff thm
R54147:54159 Imp <> no_whilesR_If constr
R54147:54159 Imp <> no_whilesR_If constr
prf 54674:54694 <> no_whiles_terminating
R54728:54731 Coq.Init.Logic <> :type_scope:x_'->'_x not
R54743:54750 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54762:54764 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R54757:54761 Imp <> state def
R54766:54768 Imp <> ::x_'/'_x_'\\'_x not
R54771:54774 Imp <> ::x_'/'_x_'\\'_x not
R54765:54765 Imp <> c var
R54769:54770 Imp <> st var
R54775:54777 Imp <> st' var
R54721:54723 Coq.Init.Logic <> :type_scope:x_'='_x not
R54710:54718 Imp <> no_whiles def
R54720:54720 Imp <> c var
R54724:54727 Coq.Init.Datatypes <> true constr
R54858:54865 Maps <> t_update def
R54873:54877 Imp <> aeval def
R54858:54865 Maps <> t_update def
R54873:54877 Imp <> aeval def
R54929:54941 Coq.Bool.Bool <> andb_true_iff thm
R54929:54941 Coq.Bool.Bool <> andb_true_iff thm
R55123:55127 Imp <> E_Seq constr
R55123:55127 Imp <> E_Seq constr
R55205:55217 Coq.Bool.Bool <> andb_true_iff thm
R55205:55217 Coq.Bool.Bool <> andb_true_iff thm
R55422:55426 Imp <> beval def
R55422:55426 Imp <> beval def
R55506:55513 Imp <> E_IfTrue constr
R55506:55513 Imp <> E_IfTrue constr
R55554:55562 Imp <> E_IfFalse constr
R55554:55562 Imp <> E_IfFalse constr
ind 57098:57103 <> sinstr
constr 57117:57121 <> SPush
constr 57141:57145 <> SLoad
constr 57164:57168 <> SPlus
constr 57181:57186 <> SMinus
constr 57199:57203 <> SMult
R57128:57131 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57132:57137 Imp <> sinstr ind
R57125:57127 Coq.Init.Datatypes <> nat ind
R57151:57154 Coq.Init.Logic <> :type_scope:x_'->'_x not
R57155:57160 Imp <> sinstr ind
R57149:57150 Maps <> id ind
R57172:57177 Imp <> sinstr ind
R57190:57195 Imp <> sinstr ind
R57207:57212 Imp <> sinstr ind
def 57877:57885 <> s_execute
R57893:57897 Imp <> state def
R57909:57912 Coq.Init.Datatypes <> list ind
R57914:57916 Coq.Init.Datatypes <> nat ind
R57946:57949 Coq.Init.Datatypes <> list ind
R57951:57956 Imp <> sinstr ind
R57978:57981 Coq.Init.Datatypes <> list ind
R57983:57985 Coq.Init.Datatypes <> nat ind
R57996:57999 Imp <> prog var
R58010:58012 Coq.Init.Datatypes <> nil constr
R58017:58021 Imp <> stack var
R58031:58034 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58068:58072 Imp <> SPush constr
R58079:58087 Imp <> s_execute def
R58094:58097 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58098:58102 Imp <> stack var
R58089:58090 Imp <> st var
R58118:58122 Imp <> SLoad constr
R58129:58137 Imp <> s_execute def
R58143:58143 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58160:58164 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58144:58148 Imp <> aeval def
R58154:58156 Imp <> AId constr
R58150:58151 Imp <> st var
R58165:58169 Imp <> stack var
R58139:58140 Imp <> st var
R58185:58189 Imp <> SPlus constr
R58200:58204 Imp <> stack var
R58219:58221 Coq.Init.Datatypes <> nil constr
R58226:58234 Imp <> s_execute def
R58239:58243 Imp <> stack var
R58236:58237 Imp <> st var
R58289:58292 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58333:58335 Coq.Init.Datatypes <> nil constr
R58340:58348 Imp <> s_execute def
R58353:58357 Imp <> stack var
R58350:58351 Imp <> st var
R58406:58409 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58422:58430 Imp <> s_execute def
R58436:58436 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58444:58448 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58439:58441 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R58432:58433 Imp <> st var
R58494:58499 Imp <> SMinus constr
R58510:58514 Imp <> stack var
R58529:58531 Coq.Init.Datatypes <> nil constr
R58536:58544 Imp <> s_execute def
R58549:58553 Imp <> stack var
R58546:58547 Imp <> st var
R58600:58603 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58644:58646 Coq.Init.Datatypes <> nil constr
R58651:58659 Imp <> s_execute def
R58664:58668 Imp <> stack var
R58661:58662 Imp <> st var
R58717:58720 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58733:58741 Imp <> s_execute def
R58747:58747 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58755:58759 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58750:58752 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R58743:58744 Imp <> st var
R58807:58811 Imp <> SMult constr
R58822:58826 Imp <> stack var
R58841:58843 Coq.Init.Datatypes <> nil constr
R58848:58856 Imp <> s_execute def
R58861:58865 Imp <> stack var
R58858:58859 Imp <> st var
R58911:58914 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R58955:58957 Coq.Init.Datatypes <> nil constr
R58962:58970 Imp <> s_execute def
R58975:58979 Imp <> stack var
R58972:58973 Imp <> st var
R59028:59031 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59044:59052 Imp <> s_execute def
R59058:59058 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59066:59070 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R59061:59063 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R59054:59055 Imp <> st var
def 59229:59238 <> s_execute1
R59314:59319 Coq.Init.Logic <> :type_scope:x_'='_x not
R59247:59255 Imp <> s_execute def
R59279:59279 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59287:59288 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59296:59297 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59305:59306 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59313:59313 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59280:59284 Imp <> SPush constr
R59307:59312 Imp <> SMinus constr
R59298:59302 Imp <> SPush constr
R59289:59293 Imp <> SPush constr
R59269:59270 Coq.Lists.List ListNotations :list_scope:'['_']' not
R59257:59267 Imp <> empty_state def
R59320:59320 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59322:59323 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59325:59325 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 59355:59364 <> s_execute2
R59455:59460 Coq.Init.Logic <> :type_scope:x_'='_x not
R59373:59381 Imp <> s_execute def
R59423:59423 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59431:59432 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59440:59441 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59447:59448 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59454:59454 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59424:59428 Imp <> SPush constr
R59449:59453 Imp <> SPlus constr
R59442:59446 Imp <> SMult constr
R59433:59437 Imp <> SLoad constr
R59439:59439 Imp <> X def
R59410:59410 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59412:59412 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59414:59414 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59384:59391 Maps <> t_update def
R59405:59405 Imp <> X def
R59393:59403 Imp <> empty_state def
R59461:59461 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59464:59465 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R59467:59467 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
def 59697:59705 <> s_compile
R59712:59715 Imp <> aexp ind
R59720:59723 Coq.Init.Datatypes <> list ind
R59725:59730 Imp <> sinstr ind
R59741:59741 Imp <> e var
R59752:59755 Imp <> ANum constr
R59762:59763 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59771:59772 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59764:59768 Imp <> SPush constr
R59778:59780 Imp <> AId constr
R59787:59788 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59796:59797 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59789:59793 Imp <> SLoad constr
R59803:59807 Imp <> APlus constr
R59818:59818 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59831:59835 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59819:59827 Imp <> s_compile def
R59836:59836 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59849:59853 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59837:59845 Imp <> s_compile def
R59854:59854 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59860:59860 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59855:59859 Imp <> SPlus constr
R59866:59871 Imp <> AMinus constr
R59882:59882 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59895:59899 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59883:59891 Imp <> s_compile def
R59900:59900 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59913:59917 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59901:59909 Imp <> s_compile def
R59918:59918 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59925:59925 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59919:59924 Imp <> SMinus constr
R59931:59935 Imp <> AMult constr
R59946:59946 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59959:59963 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59947:59955 Imp <> s_compile def
R59964:59964 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59977:59981 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R59965:59973 Imp <> s_compile def
R59982:59982 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59988:59988 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R59983:59987 Imp <> SMult constr
def 60093:60105 <> s_compile_ex1
R60164:60168 Coq.Init.Logic <> :type_scope:x_'='_x not
R60113:60121 Imp <> s_compile def
R60124:60129 Imp <> AMinus constr
R60140:60144 Imp <> AMult constr
R60156:60158 Imp <> AId constr
R60160:60160 Imp <> Y def
R60147:60150 Imp <> ANum constr
R60132:60134 Imp <> AId constr
R60136:60136 Imp <> X def
R60169:60169 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60177:60178 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60186:60187 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60195:60196 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60202:60203 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60210:60210 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60170:60174 Imp <> SLoad constr
R60176:60176 Imp <> X def
R60204:60209 Imp <> SMinus constr
R60197:60201 Imp <> SMult constr
R60188:60192 Imp <> SLoad constr
R60194:60194 Imp <> Y def
R60179:60183 Imp <> SPush constr
def 60239:60251 <> s_compile_ex2
R60293:60297 Coq.Init.Logic <> :type_scope:x_'='_x not
R60259:60267 Imp <> s_compile def
R60270:60275 Imp <> AMinus constr
R60286:60288 Imp <> AId constr
R60290:60290 Imp <> Y def
R60278:60280 Imp <> AId constr
R60282:60282 Imp <> X def
R60298:60298 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60306:60307 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60315:60316 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60323:60323 Coq.Lists.List ListNotations :list_scope:'['_x_';'_x_';'_'..'_';'_x_']' not
R60299:60303 Imp <> SLoad constr
R60305:60305 Imp <> X def
R60317:60322 Imp <> SMinus constr
R60308:60312 Imp <> SLoad constr
R60314:60314 Imp <> Y def
prf 61113:61126 <> s_execute_step
R61197:61202 Coq.Init.Logic <> :type_scope:x_'='_x not
R61166:61174 Imp <> s_execute def
R61188:61191 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61184:61187 Imp <> pro1 var
R61192:61195 Imp <> pro2 var
R61179:61181 Imp <> stk var
R61176:61177 Imp <> st var
R61203:61211 Imp <> s_execute def
R61240:61243 Imp <> pro2 var
R61217:61225 Imp <> s_execute def
R61234:61237 Imp <> pro1 var
R61230:61232 Imp <> stk var
R61227:61228 Imp <> st var
R61213:61214 Imp <> st var
prf 61465:61480 <> s_execute_no_ins
R61520:61522 Coq.Init.Logic <> :type_scope:x_'='_x not
R61501:61509 Imp <> s_execute def
R61518:61519 Coq.Lists.List ListNotations :list_scope:'['_']' not
R61514:61516 Imp <> stk var
R61511:61512 Imp <> st var
R61523:61525 Imp <> stk var
prf 61546:61555 <> app_is_nil
R61584:61587 Coq.Init.Datatypes <> list ind
R61589:61589 Imp <> X var
R61608:61611 Coq.Init.Logic <> :type_scope:x_'->'_x not
R61619:61622 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R61614:61616 Coq.Init.Logic <> :type_scope:x_'='_x not
R61612:61613 Imp <> l1 var
R61617:61618 Coq.Lists.List ListNotations :list_scope:'['_']' not
R61625:61627 Coq.Init.Logic <> :type_scope:x_'='_x not
R61623:61624 Imp <> l2 var
R61628:61629 Coq.Lists.List ListNotations :list_scope:'['_']' not
R61603:61605 Coq.Init.Logic <> :type_scope:x_'='_x not
R61597:61600 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R61595:61596 Imp <> l1 var
R61601:61602 Imp <> l2 var
R61606:61607 Coq.Lists.List ListNotations :list_scope:'['_']' not
prf 61715:61729 <> compile_not_nil
R61756:61759 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R61745:61753 Imp <> s_compile def
R61755:61755 Imp <> e var
R61760:61762 Coq.Init.Datatypes <> nil constr
R61856:61864 Imp <> s_compile def
R61881:61889 Imp <> s_compile def
R61856:61864 Imp <> s_compile def
R61856:61864 Imp <> s_compile def
R61856:61864 Imp <> s_compile def
R61881:61889 Imp <> s_compile def
R61881:61889 Imp <> s_compile def
R61881:61889 Imp <> s_compile def
R61881:61889 Imp <> s_compile def
R61881:61889 Imp <> s_compile def
R61881:61889 Imp <> s_compile def
prf 62430:62451 <> s_execute_compile_more
R62504:62506 Coq.Init.Logic <> :type_scope:x_'='_x not
R62474:62482 Imp <> s_execute def
R62492:62500 Imp <> s_compile def
R62502:62502 Imp <> e var
R62487:62489 Imp <> stk var
R62484:62485 Imp <> st var
R62507:62507 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62518:62522 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R62508:62512 Imp <> aeval def
R62517:62517 Imp <> e var
R62514:62515 Imp <> st var
R62523:62525 Imp <> stk var
R62586:62599 Imp <> s_execute_step thm
R62586:62599 Imp <> s_execute_step thm
R62586:62599 Imp <> s_execute_step thm
R62624:62637 Imp <> s_execute_step thm
R62624:62637 Imp <> s_execute_step thm
R62624:62637 Imp <> s_execute_step thm
R62677:62690 Imp <> s_execute_step thm
R62677:62690 Imp <> s_execute_step thm
R62677:62690 Imp <> s_execute_step thm
R62715:62728 Imp <> s_execute_step thm
R62715:62728 Imp <> s_execute_step thm
R62715:62728 Imp <> s_execute_step thm
R62768:62781 Imp <> s_execute_step thm
R62768:62781 Imp <> s_execute_step thm
R62768:62781 Imp <> s_execute_step thm
R62806:62819 Imp <> s_execute_step thm
R62806:62819 Imp <> s_execute_step thm
R62806:62819 Imp <> s_execute_step thm
prf 62855:62871 <> s_compile_correct
R62888:62892 Imp <> state def
R62900:62903 Imp <> aexp ind
R62938:62940 Coq.Init.Logic <> :type_scope:x_'='_x not
R62909:62917 Imp <> s_execute def
R62926:62934 Imp <> s_compile def
R62936:62936 Imp <> e var
R62922:62923 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62919:62920 Imp <> st var
R62941:62942 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62953:62954 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62943:62947 Imp <> aeval def
R62952:62952 Imp <> e var
R62949:62950 Imp <> st var
R62980:62981 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62992:62992 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62982:62986 Imp <> aeval def
R63012:63015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63000:63000 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R63011:63011 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R63001:63005 Imp <> aeval def
R63016:63017 Coq.Lists.List ListNotations :list_scope:'['_']' not
R62980:62981 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62992:62992 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R62982:62986 Imp <> aeval def
R63012:63015 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R63000:63000 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R63011:63011 Coq.Lists.List ListNotations :list_scope:'['_x_']' not
R63001:63005 Imp <> aeval def
R63016:63017 Coq.Lists.List ListNotations :list_scope:'['_']' not
R63027:63048 Imp <> s_execute_compile_more thm
R63027:63048 Imp <> s_execute_compile_more thm
def 63668:63675 <> beval_sc
R63683:63687 Imp <> state def
R63695:63698 Imp <> bexp ind
R63714:63717 Coq.Init.Datatypes <> bool ind
R63730:63730 Imp <> b var
R63741:63745 Imp <> BTrue constr
R63750:63753 Coq.Init.Datatypes <> true constr
R63759:63764 Imp <> BFalse constr
R63769:63773 Coq.Init.Datatypes <> false constr
R63779:63781 Imp <> BEq constr
R63792:63798 Coq.Arith.EqNat <> beq_nat syndef
R63815:63819 Imp <> aeval def
R63821:63822 Imp <> st var
R63801:63805 Imp <> aeval def
R63807:63808 Imp <> st var
R63832:63834 Imp <> BLe constr
R63845:63847 Coq.Arith.Compare_dec <> leb syndef
R63864:63868 Imp <> aeval def
R63870:63871 Imp <> st var
R63850:63854 Imp <> aeval def
R63856:63857 Imp <> st var
R63881:63884 Imp <> BNot constr
R63892:63895 Coq.Init.Datatypes <> negb def
R63898:63902 Imp <> beval def
R63904:63905 Imp <> st var
R63915:63918 Imp <> BAnd constr
R63933:63937 Imp <> beval def
R63939:63940 Imp <> st var
R63970:63974 Coq.Init.Datatypes <> false constr
R63952:63956 Imp <> beval def
R63958:63959 Imp <> st var
prf 63992:64007 <> beval_sc_correct
R64036:64038 Coq.Init.Logic <> :type_scope:x_'='_x not
R64026:64030 Imp <> beval def
R64035:64035 Imp <> b var
R64032:64033 Imp <> st var
R64039:64046 Imp <> beval_sc def
R64051:64051 Imp <> b var
R64048:64049 Imp <> st var
mod 64102:64109 <> BreakImp
ind 64451:64453 BreakImp com
constr 64469:64473 BreakImp CSkip
constr 64485:64490 BreakImp CBreak
constr 64530:64533 BreakImp CAss
constr 64559:64562 BreakImp CSeq
constr 64588:64590 BreakImp CIf
constr 64624:64629 BreakImp CWhile
R64477:64479 Imp <> com ind
R64494:64496 Imp <> com ind
R64539:64542 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64547:64550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64551:64553 Imp <> com ind
R64543:64546 Imp <> aexp ind
R64537:64538 Maps <> id ind
R64569:64572 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64576:64579 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64580:64582 Imp <> com ind
R64573:64575 Imp <> com ind
R64566:64568 Imp <> com ind
R64598:64601 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64605:64608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64612:64615 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64616:64618 Imp <> com ind
R64609:64611 Imp <> com ind
R64602:64604 Imp <> com ind
R64594:64597 Imp <> bexp ind
R64637:64640 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64644:64647 Coq.Init.Logic <> :type_scope:x_'->'_x not
R64648:64650 Imp <> com ind
R64641:64643 Imp <> com ind
R64633:64636 Imp <> bexp ind
R64677:64681 Imp BreakImp CSkip constr
not 64663:64663 BreakImp ::'SKIP'
R64708:64713 Imp BreakImp CBreak constr
not 64693:64693 BreakImp ::'BREAK'
R64743:64746 Imp BreakImp CAss constr
not 64725:64725 BreakImp ::x_'::='_x
R64794:64797 Imp BreakImp CSeq constr
not 64777:64777 BreakImp ::x_';;'_x
R64882:64887 Imp BreakImp CWhile constr
not 64851:64851 BreakImp ::'WHILE'_x_'DO'_x_'END'
R64981:64983 Imp BreakImp CIf constr
not 64939:64939 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 66084:66089 BreakImp result
constr 66105:66113 BreakImp SContinue
constr 66128:66133 BreakImp SBreak
R66117:66122 Imp <> result ind
R66137:66142 Imp <> result ind
ind 68531:68535 BreakImp ceval
constr 68586:68591 BreakImp E_Skip
constr 68643:68647 BreakImp E_Ass
constr 68754:68763 BreakImp E_SeqBreak
constr 68864:68876 BreakImp E_SeqContinue
constr 69028:69035 BreakImp E_IfTrue
constr 69187:69195 BreakImp E_IfFalse
constr 69348:69357 BreakImp E_WhileEnd
constr 69456:69474 BreakImp E_WhileLoopContinue
constr 69673:69688 BreakImp E_WhileLoopBreak
R68542:68545 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68551:68554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68561:68564 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68570:68573 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68565:68569 Imp <> state def
R68555:68560 Imp BreakImp result ind
R68546:68550 Imp <> state def
R68539:68541 Imp BreakImp com ind
R69935:69939 Imp <> ceval var
R68615:68617 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68620:68623 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68633:68635 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68610:68614 Imp BreakImp CSkip constr
R68618:68619 Imp <> st var
R68624:68632 Imp BreakImp SContinue constr
R68636:68637 Imp <> st var
R68691:68700 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68701:68701 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68710:68713 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68716:68719 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68729:68732 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68748:68748 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68703:68707 Imp BreakImp ::x_'::='_x not
R68702:68702 Imp <> x var
R68708:68709 Imp <> a1 var
R68714:68715 Imp <> st var
R68720:68728 Imp BreakImp SContinue constr
R68733:68740 Maps <> t_update def
R68747:68747 Imp <> n var
R68745:68745 Imp <> x var
R68742:68743 Imp <> st var
R68687:68689 Coq.Init.Logic <> :type_scope:x_'='_x not
R68676:68680 Imp <> aeval def
R68685:68686 Imp <> a1 var
R68682:68683 Imp <> st var
R68690:68690 Imp <> n var
R68818:68827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68828:68828 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68837:68840 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68843:68846 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68853:68855 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68831:68834 Imp BreakImp ::x_';;'_x not
R68829:68830 Imp <> c1 var
R68835:68836 Imp <> c2 var
R68841:68842 Imp <> st var
R68847:68852 Imp BreakImp SBreak constr
R68856:68858 Imp <> st' var
R68796:68798 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68801:68805 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68812:68814 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68794:68795 Imp <> c1 var
R68799:68800 Imp <> st var
R68806:68811 Imp BreakImp SBreak constr
R68815:68817 Imp <> st' var
R68946:68955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68981:68990 Coq.Init.Logic <> :type_scope:x_'->'_x not
R68991:68991 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69000:69003 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69006:69009 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69016:69018 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68994:68997 Imp BreakImp ::x_';;'_x not
R68992:68993 Imp <> c1 var
R68998:68999 Imp <> c2 var
R69004:69005 Imp <> st var
R69010:69015 Imp <> signal var
R69019:69022 Imp <> st'' var
R68958:68960 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68964:68967 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68974:68976 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68956:68957 Imp <> c2 var
R68961:68963 Imp <> st' var
R68968:68973 Imp <> signal var
R68977:68980 Imp <> st'' var
R68921:68923 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68926:68930 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68940:68942 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R68919:68920 Imp <> c1 var
R68924:68925 Imp <> st var
R68931:68939 Imp BreakImp SContinue constr
R68943:68945 Imp <> st' var
R69092:69101 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69125:69134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69135:69135 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69160:69163 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69166:69169 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69176:69178 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69136:69139 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69141:69146 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69149:69154 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69157:69159 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69140:69140 Imp <> b var
R69147:69148 Imp <> c1 var
R69155:69156 Imp <> c2 var
R69164:69165 Imp <> st var
R69170:69175 Imp <> signal var
R69179:69181 Imp <> st' var
R69104:69106 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69109:69112 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69119:69121 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69102:69103 Imp <> c1 var
R69107:69108 Imp <> st var
R69113:69118 Imp <> signal var
R69122:69124 Imp <> st' var
R69085:69087 Coq.Init.Logic <> :type_scope:x_'='_x not
R69075:69079 Imp <> beval def
R69084:69084 Imp <> b var
R69081:69082 Imp <> st var
R69088:69091 Coq.Init.Datatypes <> true constr
R69253:69262 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69286:69295 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69296:69296 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69321:69324 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69327:69330 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69337:69339 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69297:69300 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69302:69307 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69310:69315 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69318:69320 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R69301:69301 Imp <> b var
R69308:69309 Imp <> c1 var
R69316:69317 Imp <> c2 var
R69325:69326 Imp <> st var
R69331:69336 Imp <> signal var
R69340:69342 Imp <> st' var
R69265:69267 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69270:69273 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69280:69282 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69263:69264 Imp <> c2 var
R69268:69269 Imp <> st var
R69274:69279 Imp <> signal var
R69283:69285 Imp <> st' var
R69245:69247 Coq.Init.Logic <> :type_scope:x_'='_x not
R69235:69239 Imp <> beval def
R69244:69244 Imp <> b var
R69241:69242 Imp <> st var
R69248:69252 Coq.Init.Datatypes <> false constr
R69400:69409 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69410:69410 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69427:69430 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69433:69436 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69446:69448 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69411:69416 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69418:69421 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69423:69426 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69417:69417 Imp <> b var
R69422:69422 Imp <> c var
R69431:69432 Imp <> st var
R69437:69445 Imp BreakImp SContinue constr
R69449:69450 Imp <> st var
R69392:69394 Coq.Init.Logic <> :type_scope:x_'='_x not
R69382:69386 Imp <> beval def
R69391:69391 Imp <> b var
R69388:69389 Imp <> st var
R69395:69399 Coq.Init.Datatypes <> false constr
R69525:69534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69560:69569 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69614:69623 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69624:69624 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69641:69644 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69647:69650 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69660:69662 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69625:69630 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69632:69635 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69637:69640 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69631:69631 Imp <> b var
R69636:69636 Imp <> c var
R69645:69646 Imp <> st var
R69651:69659 Imp BreakImp SContinue constr
R69663:69666 Imp <> st'' var
R69570:69570 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69587:69590 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69594:69597 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69607:69609 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69571:69576 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69578:69581 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69583:69586 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69577:69577 Imp <> b var
R69582:69582 Imp <> c var
R69591:69593 Imp <> st' var
R69598:69606 Imp BreakImp SContinue constr
R69610:69613 Imp <> st'' var
R69536:69538 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69541:69544 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69554:69556 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69535:69535 Imp <> c var
R69539:69540 Imp <> st var
R69545:69553 Imp BreakImp SContinue constr
R69557:69559 Imp <> st' var
R69518:69520 Coq.Init.Logic <> :type_scope:x_'='_x not
R69508:69512 Imp <> beval def
R69517:69517 Imp <> b var
R69514:69515 Imp <> st var
R69521:69524 Coq.Init.Datatypes <> true constr
R69734:69743 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69766:69851 Coq.Init.Logic <> :type_scope:x_'->'_x not
R69852:69852 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69869:69872 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69875:69878 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69888:69890 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69853:69858 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69860:69863 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69865:69868 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R69859:69859 Imp <> b var
R69864:69864 Imp <> c var
R69873:69874 Imp <> st var
R69879:69887 Imp BreakImp SContinue constr
R69891:69893 Imp <> st' var
R69745:69747 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69750:69753 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69760:69762 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R69744:69744 Imp <> c var
R69748:69749 Imp <> st var
R69754:69759 Imp BreakImp SBreak constr
R69763:69765 Imp <> st' var
R69727:69729 Coq.Init.Logic <> :type_scope:x_'='_x not
R69717:69721 Imp <> beval def
R69726:69726 Imp <> b var
R69723:69724 Imp <> st var
R69730:69733 Coq.Init.Datatypes <> true constr
R69935:69939 Imp BreakImp ceval ind
not 69904:69904 BreakImp ::x_'/'_x_'\\'_x_'/'_x
prf 70038:70049 BreakImp break_ignore
R70104:70112 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70115:70117 Coq.Init.Logic <> :type_scope:x_'='_x not
R70113:70114 Imp <> st var
R70118:70120 Imp <> st' var
R70077:70077 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70087:70090 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70093:70096 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70098:70100 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70083:70085 Imp BreakImp ::x_';;'_x not
R70078:70082 Imp BreakImp ::'BREAK' not
R70086:70086 Imp <> c var
R70091:70092 Imp <> st var
R70097:70097 Imp <> s var
R70101:70103 Imp <> st' var
prf 70205:70218 BreakImp while_continue
R70279:70284 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70286:70288 Coq.Init.Logic <> :type_scope:x_'='_x not
R70285:70285 Imp <> s var
R70289:70297 Imp BreakImp SContinue constr
R70245:70245 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70262:70265 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70268:70271 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70273:70275 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70246:70251 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70253:70256 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70258:70261 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70252:70252 Imp <> b var
R70257:70257 Imp <> c var
R70266:70267 Imp <> st var
R70272:70272 Imp <> s var
R70276:70278 Imp <> st' var
prf 70356:70375 BreakImp while_stops_on_break
R70417:70422 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70445:70450 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70451:70451 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70468:70471 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70474:70477 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70487:70489 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70452:70457 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70459:70462 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70464:70467 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70458:70458 Imp <> b var
R70463:70463 Imp <> c var
R70472:70473 Imp <> st var
R70478:70486 Imp BreakImp SContinue constr
R70490:70492 Imp <> st' var
R70424:70426 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70429:70432 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70439:70441 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70423:70423 Imp <> c var
R70427:70428 Imp <> st var
R70433:70438 Imp BreakImp SBreak constr
R70442:70444 Imp <> st' var
R70410:70412 Coq.Init.Logic <> :type_scope:x_'='_x not
R70400:70404 Imp <> beval def
R70409:70409 Imp <> b var
R70406:70407 Imp <> st var
R70413:70416 Coq.Init.Datatypes <> true constr
R70516:70531 Imp BreakImp E_WhileLoopBreak constr
R70516:70531 Imp BreakImp E_WhileLoopBreak constr
prf 70636:70651 BreakImp while_break_true
R70718:70723 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70742:70747 Coq.Init.Logic <> :type_scope:x_'->'_x not
R70748:70754 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R70759:70760 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R70762:70764 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70769:70772 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70779:70781 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70761:70761 Imp <> c var
R70765:70768 Imp <> st'' var
R70773:70778 Imp BreakImp SBreak constr
R70782:70784 Imp <> st' var
R70735:70737 Coq.Init.Logic <> :type_scope:x_'='_x not
R70724:70728 Imp <> beval def
R70734:70734 Imp <> b var
R70730:70732 Imp <> st' var
R70738:70741 Coq.Init.Datatypes <> true constr
R70676:70676 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70693:70696 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70699:70702 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70712:70714 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R70677:70682 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70684:70687 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70689:70692 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70683:70683 Imp <> b var
R70688:70688 Imp <> c var
R70697:70698 Imp <> st var
R70703:70711 Imp BreakImp SContinue constr
R70715:70717 Imp <> st' var
R70812:70817 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70819:70822 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70824:70827 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70812:70817 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70819:70822 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R70824:70827 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
prf 71150:71168 BreakImp ceval_deterministic
R71181:71183 Imp BreakImp com ind
R71227:71236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71255:71263 Coq.Init.Logic <> :type_scope:x_'->'_x not
R71273:71276 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71267:71269 Coq.Init.Logic <> :type_scope:x_'='_x not
R71264:71266 Imp <> st1 var
R71270:71272 Imp <> st2 var
R71279:71281 Coq.Init.Logic <> :type_scope:x_'='_x not
R71277:71278 Imp <> s1 var
R71282:71283 Imp <> s2 var
R71238:71240 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71243:71246 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71249:71251 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71237:71237 Imp <> c var
R71241:71242 Imp <> st var
R71247:71248 Imp <> s2 var
R71252:71254 Imp <> st2 var
R71210:71212 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71215:71218 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71221:71223 Imp BreakImp ::x_'/'_x_'\\'_x_'/'_x not
R71209:71209 Imp <> c var
R71213:71214 Imp <> st var
R71219:71220 Imp <> s1 var
R71224:71226 Imp <> st1 var
R71522:71525 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71515:71517 Coq.Init.Logic <> :type_scope:x_'='_x not
R71532:71534 Coq.Init.Logic <> :type_scope:x_'='_x not
R71526:71531 Imp BreakImp SBreak constr
R71535:71543 Imp BreakImp SContinue constr
R71522:71525 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71515:71517 Coq.Init.Logic <> :type_scope:x_'='_x not
R71532:71534 Coq.Init.Logic <> :type_scope:x_'='_x not
R71526:71531 Imp BreakImp SBreak constr
R71535:71543 Imp BreakImp SContinue constr
R71648:71651 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71642:71644 Coq.Init.Logic <> :type_scope:x_'='_x not
R71661:71663 Coq.Init.Logic <> :type_scope:x_'='_x not
R71652:71660 Imp BreakImp SContinue constr
R71664:71669 Imp BreakImp SBreak constr
R71648:71651 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71642:71644 Coq.Init.Logic <> :type_scope:x_'='_x not
R71661:71663 Coq.Init.Logic <> :type_scope:x_'='_x not
R71652:71660 Imp BreakImp SContinue constr
R71664:71669 Imp BreakImp SBreak constr
R71775:71778 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71768:71770 Coq.Init.Logic <> :type_scope:x_'='_x not
R71788:71790 Coq.Init.Logic <> :type_scope:x_'='_x not
R71779:71787 Imp BreakImp SContinue constr
R71791:71799 Imp BreakImp SContinue constr
R71775:71778 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R71768:71770 Coq.Init.Logic <> :type_scope:x_'='_x not
R71788:71790 Coq.Init.Logic <> :type_scope:x_'='_x not
R71779:71787 Imp BreakImp SContinue constr
R71791:71799 Imp BreakImp SContinue constr
R72069:72074 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72076:72079 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72081:72084 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72069:72074 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72076:72079 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72081:72084 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R72352:72355 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72345:72347 Coq.Init.Logic <> :type_scope:x_'='_x not
R72365:72367 Coq.Init.Logic <> :type_scope:x_'='_x not
R72356:72364 Imp BreakImp SContinue constr
R72368:72376 Imp BreakImp SContinue constr
R72352:72355 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72345:72347 Coq.Init.Logic <> :type_scope:x_'='_x not
R72365:72367 Coq.Init.Logic <> :type_scope:x_'='_x not
R72356:72364 Imp BreakImp SContinue constr
R72368:72376 Imp BreakImp SContinue constr
R72482:72485 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72476:72478 Coq.Init.Logic <> :type_scope:x_'='_x not
R72495:72497 Coq.Init.Logic <> :type_scope:x_'='_x not
R72486:72494 Imp BreakImp SContinue constr
R72498:72503 Imp BreakImp SBreak constr
R72482:72485 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72476:72478 Coq.Init.Logic <> :type_scope:x_'='_x not
R72495:72497 Coq.Init.Logic <> :type_scope:x_'='_x not
R72486:72494 Imp BreakImp SContinue constr
R72498:72503 Imp BreakImp SBreak constr
R72676:72679 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72669:72671 Coq.Init.Logic <> :type_scope:x_'='_x not
R72686:72688 Coq.Init.Logic <> :type_scope:x_'='_x not
R72680:72685 Imp BreakImp SBreak constr
R72689:72697 Imp BreakImp SContinue constr
R72676:72679 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72669:72671 Coq.Init.Logic <> :type_scope:x_'='_x not
R72686:72688 Coq.Init.Logic <> :type_scope:x_'='_x not
R72680:72685 Imp BreakImp SBreak constr
R72689:72697 Imp BreakImp SContinue constr
R72821:72824 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72815:72817 Coq.Init.Logic <> :type_scope:x_'='_x not
R72831:72833 Coq.Init.Logic <> :type_scope:x_'='_x not
R72825:72830 Imp BreakImp SBreak constr
R72834:72839 Imp BreakImp SBreak constr
R72821:72824 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R72815:72817 Coq.Init.Logic <> :type_scope:x_'='_x not
R72831:72833 Coq.Init.Logic <> :type_scope:x_'='_x not
R72825:72830 Imp BreakImp SBreak constr
R72834:72839 Imp BreakImp SBreak constr
R72919:72926 Imp BreakImp <> mod
mod 73682:73687 <> ForImp
ind 73700:73702 ForImp com
constr 73718:73722 ForImp CSkip
constr 73734:73739 ForImp CBreak
constr 73751:73754 ForImp CAss
constr 73780:73783 ForImp CSeq
constr 73809:73811 ForImp CIf
constr 73845:73850 ForImp CWhile
constr 73877:73880 ForImp CFor
R73726:73728 Imp <> com ind
R73743:73745 Imp <> com ind
R73760:73763 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73768:73771 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73772:73774 Imp <> com ind
R73764:73767 Imp <> aexp ind
R73758:73759 Maps <> id ind
R73790:73793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73797:73800 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73801:73803 Imp <> com ind
R73794:73796 Imp <> com ind
R73787:73789 Imp <> com ind
R73819:73822 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73826:73829 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73833:73836 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73837:73839 Imp <> com ind
R73830:73832 Imp <> com ind
R73823:73825 Imp <> com ind
R73815:73818 Imp <> bexp ind
R73858:73861 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73865:73868 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73869:73871 Imp <> com ind
R73862:73864 Imp <> com ind
R73854:73857 Imp <> bexp ind
R73887:73890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73895:73898 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73902:73905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73909:73912 Coq.Init.Logic <> :type_scope:x_'->'_x not
R73913:73915 Imp <> com ind
R73906:73908 Imp <> com ind
R73899:73901 Imp <> com ind
R73891:73894 Imp <> bexp ind
R73884:73886 Imp <> com ind
ind 73937:73942 ForImp result
constr 73958:73966 ForImp SContinue
constr 73981:73986 ForImp SBreak
R73970:73975 Imp <> result ind
R73990:73995 Imp <> result ind
R74120:74124 Imp ForImp CSkip constr
not 74106:74106 ForImp ::'SKIP'
R74151:74156 Imp ForImp CBreak constr
not 74136:74136 ForImp ::'BREAK'
R74186:74189 Imp ForImp CAss constr
not 74168:74168 ForImp ::x_'::='_x
R74237:74240 Imp ForImp CSeq constr
not 74220:74220 ForImp ::x_';;'_x
R74325:74330 Imp ForImp CWhile constr
not 74294:74294 ForImp ::'WHILE'_x_'DO'_x_'END'
R74424:74426 Imp ForImp CIf constr
not 74382:74382 ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
R74542:74545 Imp ForImp CFor constr
not 74483:74483 ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END'
ind 74621:74625 ForImp ceval
constr 74676:74681 ForImp E_Skip
constr 74733:74737 ForImp E_Ass
constr 74844:74853 ForImp E_SeqBreak
constr 74954:74966 ForImp E_SeqContinue
constr 75118:75125 ForImp E_IfTrue
constr 75277:75285 ForImp E_IfFalse
constr 75438:75447 ForImp E_WhileEnd
constr 75548:75566 ForImp E_WhileLoopContinue
constr 75765:75780 ForImp E_WhileLoopBreak
constr 75917:75921 ForImp E_For
R74632:74635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74641:74644 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74651:74654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74660:74663 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74655:74659 Imp <> state def
R74645:74650 Imp ForImp result ind
R74636:74640 Imp <> state def
R74629:74631 Imp ForImp com ind
R76234:76238 Imp <> ceval var
R74705:74707 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74710:74713 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74723:74725 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74700:74704 Imp ForImp CSkip constr
R74708:74709 Imp <> st var
R74714:74722 Imp ForImp SContinue constr
R74726:74727 Imp <> st var
R74781:74790 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74791:74791 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74800:74803 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74806:74809 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74819:74822 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74838:74838 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74793:74797 Imp ForImp ::x_'::='_x not
R74792:74792 Imp <> x var
R74798:74799 Imp <> a1 var
R74804:74805 Imp <> st var
R74810:74818 Imp ForImp SContinue constr
R74823:74830 Maps <> t_update def
R74837:74837 Imp <> n var
R74835:74835 Imp <> x var
R74832:74833 Imp <> st var
R74777:74779 Coq.Init.Logic <> :type_scope:x_'='_x not
R74766:74770 Imp <> aeval def
R74775:74776 Imp <> a1 var
R74772:74773 Imp <> st var
R74780:74780 Imp <> n var
R74908:74917 Coq.Init.Logic <> :type_scope:x_'->'_x not
R74918:74918 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74927:74930 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74933:74936 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74943:74945 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74921:74924 Imp ForImp ::x_';;'_x not
R74919:74920 Imp <> c1 var
R74925:74926 Imp <> c2 var
R74931:74932 Imp <> st var
R74937:74942 Imp ForImp SBreak constr
R74946:74948 Imp <> st' var
R74886:74888 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74891:74895 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74902:74904 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R74884:74885 Imp <> c1 var
R74889:74890 Imp <> st var
R74896:74901 Imp ForImp SBreak constr
R74905:74907 Imp <> st' var
R75036:75045 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75071:75080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75081:75081 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75090:75093 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75096:75099 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75106:75108 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75084:75087 Imp ForImp ::x_';;'_x not
R75082:75083 Imp <> c1 var
R75088:75089 Imp <> c2 var
R75094:75095 Imp <> st var
R75100:75105 Imp <> signal var
R75109:75112 Imp <> st'' var
R75048:75050 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75054:75057 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75064:75066 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75046:75047 Imp <> c2 var
R75051:75053 Imp <> st' var
R75058:75063 Imp <> signal var
R75067:75070 Imp <> st'' var
R75011:75013 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75016:75020 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75030:75032 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75009:75010 Imp <> c1 var
R75014:75015 Imp <> st var
R75021:75029 Imp ForImp SContinue constr
R75033:75035 Imp <> st' var
R75182:75191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75215:75224 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75225:75225 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75250:75253 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75256:75259 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75266:75268 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75226:75229 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75231:75236 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75239:75244 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75247:75249 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75230:75230 Imp <> b var
R75237:75238 Imp <> c1 var
R75245:75246 Imp <> c2 var
R75254:75255 Imp <> st var
R75260:75265 Imp <> signal var
R75269:75271 Imp <> st' var
R75194:75196 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75199:75202 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75209:75211 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75192:75193 Imp <> c1 var
R75197:75198 Imp <> st var
R75203:75208 Imp <> signal var
R75212:75214 Imp <> st' var
R75175:75177 Coq.Init.Logic <> :type_scope:x_'='_x not
R75165:75169 Imp <> beval def
R75174:75174 Imp <> b var
R75171:75172 Imp <> st var
R75178:75181 Coq.Init.Datatypes <> true constr
R75343:75352 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75376:75385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75386:75386 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75411:75414 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75417:75420 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75427:75429 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75387:75390 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75392:75397 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75400:75405 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75408:75410 Imp ForImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R75391:75391 Imp <> b var
R75398:75399 Imp <> c1 var
R75406:75407 Imp <> c2 var
R75415:75416 Imp <> st var
R75421:75426 Imp <> signal var
R75430:75432 Imp <> st' var
R75355:75357 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75360:75363 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75370:75372 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75353:75354 Imp <> c2 var
R75358:75359 Imp <> st var
R75364:75369 Imp <> signal var
R75373:75375 Imp <> st' var
R75335:75337 Coq.Init.Logic <> :type_scope:x_'='_x not
R75325:75329 Imp <> beval def
R75334:75334 Imp <> b var
R75331:75332 Imp <> st var
R75338:75342 Coq.Init.Datatypes <> false constr
R75490:75499 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75500:75500 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75517:75520 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75523:75526 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75536:75538 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75501:75506 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75508:75511 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75513:75516 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75507:75507 Imp <> b var
R75512:75512 Imp <> c var
R75521:75522 Imp <> st var
R75527:75535 Imp ForImp SContinue constr
R75539:75540 Imp <> st var
R75482:75484 Coq.Init.Logic <> :type_scope:x_'='_x not
R75472:75476 Imp <> beval def
R75481:75481 Imp <> b var
R75478:75479 Imp <> st var
R75485:75489 Coq.Init.Datatypes <> false constr
R75617:75626 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75652:75661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75706:75715 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75716:75716 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75733:75736 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75739:75742 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75752:75754 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75717:75722 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75724:75727 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75729:75732 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75723:75723 Imp <> b var
R75728:75728 Imp <> c var
R75737:75738 Imp <> st var
R75743:75751 Imp ForImp SContinue constr
R75755:75758 Imp <> st'' var
R75662:75662 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75679:75682 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75686:75689 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75699:75701 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75663:75668 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75670:75673 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75675:75678 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75669:75669 Imp <> b var
R75674:75674 Imp <> c var
R75683:75685 Imp <> st' var
R75690:75698 Imp ForImp SContinue constr
R75702:75705 Imp <> st'' var
R75628:75630 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75633:75636 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75646:75648 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75627:75627 Imp <> c var
R75631:75632 Imp <> st var
R75637:75645 Imp ForImp SContinue constr
R75649:75651 Imp <> st' var
R75610:75612 Coq.Init.Logic <> :type_scope:x_'='_x not
R75600:75604 Imp <> beval def
R75609:75609 Imp <> b var
R75606:75607 Imp <> st var
R75613:75616 Coq.Init.Datatypes <> true constr
R75826:75835 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75858:75867 Coq.Init.Logic <> :type_scope:x_'->'_x not
R75868:75868 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75885:75888 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75891:75894 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75904:75906 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75869:75874 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75876:75879 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75881:75884 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R75875:75875 Imp <> b var
R75880:75880 Imp <> c var
R75889:75890 Imp <> st var
R75895:75903 Imp ForImp SContinue constr
R75907:75909 Imp <> st' var
R75837:75839 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75842:75845 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75852:75854 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75836:75836 Imp <> c var
R75840:75841 Imp <> st var
R75846:75851 Imp ForImp SBreak constr
R75855:75857 Imp <> st' var
R75819:75821 Coq.Init.Logic <> :type_scope:x_'='_x not
R75809:75813 Imp <> beval def
R75818:75818 Imp <> b var
R75815:75816 Imp <> st var
R75822:75825 Coq.Init.Datatypes <> true constr
R76006:76024 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76084:76133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76134:76134 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76166:76169 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76172:76175 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76185:76187 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76135:76138 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76145:76146 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76148:76149 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76152:76155 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76162:76165 Imp ForImp ::'FOR'_x_','_x_','_x_'DO'_x_'END' not
R76139:76144 Imp <> c_init var
R76147:76147 Imp <> b var
R76150:76151 Imp <> c2 var
R76156:76161 Imp <> c_body var
R76170:76171 Imp <> st var
R76176:76184 Imp ForImp SContinue constr
R76188:76190 Imp <> st' var
R76025:76025 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76054:76057 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76065:76068 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76078:76080 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76026:76031 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76033:76037 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76049:76053 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76032:76032 Imp <> b var
R76044:76046 Imp ForImp ::x_';;'_x not
R76038:76043 Imp <> c_body var
R76047:76048 Imp <> c2 var
R76058:76064 Imp <> st_init var
R76069:76077 Imp ForImp SContinue constr
R76081:76083 Imp <> st' var
R75979:75980 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75983:75986 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75996:75998 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R75973:75978 Imp <> c_init var
R75981:75982 Imp <> st var
R75987:75995 Imp ForImp SContinue constr
R75999:76005 Imp <> st_init var
R76234:76238 Imp ForImp ceval ind
not 76203:76203 ForImp ::x_'/'_x_'\\'_x_'/'_x
prf 76286:76297 ForImp break_ignore
R76352:76360 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76363:76365 Coq.Init.Logic <> :type_scope:x_'='_x not
R76361:76362 Imp <> st var
R76366:76368 Imp <> st' var
R76325:76325 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76335:76338 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76341:76344 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76346:76348 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76331:76333 Imp ForImp ::x_';;'_x not
R76326:76330 Imp ForImp ::'BREAK' not
R76334:76334 Imp <> c var
R76339:76340 Imp <> st var
R76345:76345 Imp <> s var
R76349:76351 Imp <> st' var
prf 76453:76466 ForImp while_continue
R76527:76532 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76534:76536 Coq.Init.Logic <> :type_scope:x_'='_x not
R76533:76533 Imp <> s var
R76537:76545 Imp ForImp SContinue constr
R76493:76493 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76510:76513 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76516:76519 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76521:76523 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76494:76499 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76501:76504 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76506:76509 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76500:76500 Imp <> b var
R76505:76505 Imp <> c var
R76514:76515 Imp <> st var
R76520:76520 Imp <> s var
R76524:76526 Imp <> st' var
prf 76604:76623 ForImp while_stops_on_break
R76665:76670 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76693:76698 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76699:76699 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76716:76719 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76722:76725 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76735:76737 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76700:76705 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76707:76710 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76712:76715 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76706:76706 Imp <> b var
R76711:76711 Imp <> c var
R76720:76721 Imp <> st var
R76726:76734 Imp ForImp SContinue constr
R76738:76740 Imp <> st' var
R76672:76674 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76677:76680 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76687:76689 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76671:76671 Imp <> c var
R76675:76676 Imp <> st var
R76681:76686 Imp ForImp SBreak constr
R76690:76692 Imp <> st' var
R76658:76660 Coq.Init.Logic <> :type_scope:x_'='_x not
R76648:76652 Imp <> beval def
R76657:76657 Imp <> b var
R76654:76655 Imp <> st var
R76661:76664 Coq.Init.Datatypes <> true constr
R76764:76779 Imp ForImp E_WhileLoopBreak constr
R76764:76779 Imp ForImp E_WhileLoopBreak constr
prf 76803:76818 ForImp while_break_true
R76885:76890 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76909:76914 Coq.Init.Logic <> :type_scope:x_'->'_x not
R76915:76921 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R76926:76927 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R76929:76931 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76936:76939 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76946:76948 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76928:76928 Imp <> c var
R76932:76935 Imp <> st'' var
R76940:76945 Imp ForImp SBreak constr
R76949:76951 Imp <> st' var
R76902:76904 Coq.Init.Logic <> :type_scope:x_'='_x not
R76891:76895 Imp <> beval def
R76901:76901 Imp <> b var
R76897:76899 Imp <> st' var
R76905:76908 Coq.Init.Datatypes <> true constr
R76843:76843 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76860:76863 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76866:76869 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76879:76881 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R76844:76849 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76851:76854 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76856:76859 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76850:76850 Imp <> b var
R76855:76855 Imp <> c var
R76864:76865 Imp <> st var
R76870:76878 Imp ForImp SContinue constr
R76882:76884 Imp <> st' var
R76979:76984 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76986:76989 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76991:76994 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76979:76984 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76986:76989 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R76991:76994 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
def 77306:77325 ForImp Pceval_deterministic
R77331:77333 Imp ForImp com ind
R77383:77388 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77406:77411 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77421:77424 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77415:77417 Coq.Init.Logic <> :type_scope:x_'='_x not
R77412:77414 Imp <> st1 var
R77418:77420 Imp <> st2 var
R77427:77429 Coq.Init.Logic <> :type_scope:x_'='_x not
R77425:77426 Imp <> s1 var
R77430:77431 Imp <> s2 var
R77390:77392 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77395:77398 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77401:77402 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77389:77389 Imp <> c var
R77393:77394 Imp <> st var
R77399:77400 Imp <> s2 var
R77403:77405 Imp <> st2 var
R77367:77369 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77372:77375 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77378:77379 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R77366:77366 Imp <> c var
R77370:77371 Imp <> st var
R77376:77377 Imp <> s1 var
R77380:77382 Imp <> st1 var
prf 77443:77459 ForImp seq_deterministic
R77502:77507 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77531:77536 Coq.Init.Logic <> :type_scope:x_'->'_x not
R77537:77556 Imp ForImp Pceval_deterministic def
R77561:77563 Imp ForImp ::x_';;'_x not
R77559:77560 Imp <> c1 var
R77564:77565 Imp <> c2 var
R77508:77527 Imp ForImp Pceval_deterministic def
R77529:77530 Imp <> c2 var
R77479:77498 Imp ForImp Pceval_deterministic def
R77500:77501 Imp <> c1 var
R77583:77602 Imp ForImp Pceval_deterministic def
R77693:77696 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77686:77688 Coq.Init.Logic <> :type_scope:x_'='_x not
R77703:77705 Coq.Init.Logic <> :type_scope:x_'='_x not
R77697:77702 Imp ForImp SBreak constr
R77706:77714 Imp ForImp SContinue constr
R77693:77696 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77686:77688 Coq.Init.Logic <> :type_scope:x_'='_x not
R77703:77705 Coq.Init.Logic <> :type_scope:x_'='_x not
R77697:77702 Imp ForImp SBreak constr
R77706:77714 Imp ForImp SContinue constr
R77811:77814 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77805:77807 Coq.Init.Logic <> :type_scope:x_'='_x not
R77824:77826 Coq.Init.Logic <> :type_scope:x_'='_x not
R77815:77823 Imp ForImp SContinue constr
R77827:77832 Imp ForImp SBreak constr
R77811:77814 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77805:77807 Coq.Init.Logic <> :type_scope:x_'='_x not
R77824:77826 Coq.Init.Logic <> :type_scope:x_'='_x not
R77815:77823 Imp ForImp SContinue constr
R77827:77832 Imp ForImp SBreak constr
R77930:77933 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77923:77925 Coq.Init.Logic <> :type_scope:x_'='_x not
R77943:77945 Coq.Init.Logic <> :type_scope:x_'='_x not
R77934:77942 Imp ForImp SContinue constr
R77946:77954 Imp ForImp SContinue constr
R77930:77933 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R77923:77925 Coq.Init.Logic <> :type_scope:x_'='_x not
R77943:77945 Coq.Init.Logic <> :type_scope:x_'='_x not
R77934:77942 Imp ForImp SContinue constr
R77946:77954 Imp ForImp SContinue constr
prf 78045:78063 ForImp while_deterministic
R78103:78108 Coq.Init.Logic <> :type_scope:x_'->'_x not
R78109:78128 Imp ForImp Pceval_deterministic def
R78131:78136 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78138:78141 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78143:78146 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78137:78137 Imp <> b var
R78142:78142 Imp <> c var
R78081:78100 Imp ForImp Pceval_deterministic def
R78102:78102 Imp <> c var
R78164:78183 Imp ForImp Pceval_deterministic def
R78204:78209 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78211:78214 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78216:78219 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78204:78209 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78211:78214 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78216:78219 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R78493:78496 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78486:78488 Coq.Init.Logic <> :type_scope:x_'='_x not
R78506:78508 Coq.Init.Logic <> :type_scope:x_'='_x not
R78497:78505 Imp ForImp SContinue constr
R78509:78517 Imp ForImp SContinue constr
R78493:78496 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78486:78488 Coq.Init.Logic <> :type_scope:x_'='_x not
R78506:78508 Coq.Init.Logic <> :type_scope:x_'='_x not
R78497:78505 Imp ForImp SContinue constr
R78509:78517 Imp ForImp SContinue constr
R78621:78624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78615:78617 Coq.Init.Logic <> :type_scope:x_'='_x not
R78634:78636 Coq.Init.Logic <> :type_scope:x_'='_x not
R78625:78633 Imp ForImp SContinue constr
R78637:78642 Imp ForImp SBreak constr
R78621:78624 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78615:78617 Coq.Init.Logic <> :type_scope:x_'='_x not
R78634:78636 Coq.Init.Logic <> :type_scope:x_'='_x not
R78625:78633 Imp ForImp SContinue constr
R78637:78642 Imp ForImp SBreak constr
R78814:78817 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78807:78809 Coq.Init.Logic <> :type_scope:x_'='_x not
R78824:78826 Coq.Init.Logic <> :type_scope:x_'='_x not
R78818:78823 Imp ForImp SBreak constr
R78827:78835 Imp ForImp SContinue constr
R78814:78817 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78807:78809 Coq.Init.Logic <> :type_scope:x_'='_x not
R78824:78826 Coq.Init.Logic <> :type_scope:x_'='_x not
R78818:78823 Imp ForImp SBreak constr
R78827:78835 Imp ForImp SContinue constr
R78957:78960 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78951:78953 Coq.Init.Logic <> :type_scope:x_'='_x not
R78967:78969 Coq.Init.Logic <> :type_scope:x_'='_x not
R78961:78966 Imp ForImp SBreak constr
R78970:78975 Imp ForImp SBreak constr
R78957:78960 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R78951:78953 Coq.Init.Logic <> :type_scope:x_'='_x not
R78967:78969 Coq.Init.Logic <> :type_scope:x_'='_x not
R78961:78966 Imp ForImp SBreak constr
R78970:78975 Imp ForImp SBreak constr
prf 79063:79081 ForImp ceval_deterministic
R79094:79096 Imp ForImp com ind
R79140:79149 Coq.Init.Logic <> :type_scope:x_'->'_x not
R79168:79176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R79186:79189 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79180:79182 Coq.Init.Logic <> :type_scope:x_'='_x not
R79177:79179 Imp <> st1 var
R79183:79185 Imp <> st2 var
R79192:79194 Coq.Init.Logic <> :type_scope:x_'='_x not
R79190:79191 Imp <> s1 var
R79195:79196 Imp <> s2 var
R79151:79153 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79156:79159 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79162:79164 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79150:79150 Imp <> c var
R79154:79155 Imp <> st var
R79160:79161 Imp <> s2 var
R79165:79167 Imp <> st2 var
R79123:79125 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79128:79131 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79134:79136 Imp ForImp ::x_'/'_x_'\\'_x_'/'_x not
R79122:79122 Imp <> c var
R79126:79127 Imp <> st var
R79132:79133 Imp <> s1 var
R79137:79139 Imp <> st1 var
R79396:79415 Imp ForImp Pceval_deterministic def
R79420:79423 Imp ForImp ::x_';;'_x not
R79396:79415 Imp ForImp Pceval_deterministic def
R79420:79423 Imp ForImp ::x_';;'_x not
R79438:79454 Imp ForImp seq_deterministic thm
R79438:79454 Imp ForImp seq_deterministic thm
R79472:79491 Imp ForImp Pceval_deterministic def
R79732:79751 Imp ForImp Pceval_deterministic def
R79754:79759 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79761:79764 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79766:79769 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79732:79751 Imp ForImp Pceval_deterministic def
R79754:79759 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79761:79764 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79766:79769 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R79782:79800 Imp ForImp while_deterministic thm
R79782:79800 Imp ForImp while_deterministic thm
R79818:79837 Imp ForImp Pceval_deterministic def
R79981:79984 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79970:79972 Coq.Init.Logic <> :type_scope:x_'='_x not
R79994:79996 Coq.Init.Logic <> :type_scope:x_'='_x not
R79985:79993 Imp ForImp SContinue constr
R79997:80005 Imp ForImp SContinue constr
R79981:79984 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R79970:79972 Coq.Init.Logic <> :type_scope:x_'='_x not
R79994:79996 Coq.Init.Logic <> :type_scope:x_'='_x not
R79985:79993 Imp ForImp SContinue constr
R79997:80005 Imp ForImp SContinue constr
R80198:80217 Imp ForImp Pceval_deterministic def
R80222:80224 Imp ForImp ::x_';;'_x not
R80198:80217 Imp ForImp Pceval_deterministic def
R80222:80224 Imp ForImp ::x_';;'_x not
R80239:80255 Imp ForImp seq_deterministic thm
R80239:80255 Imp ForImp seq_deterministic thm
R80293:80312 Imp ForImp Pceval_deterministic def
R80315:80320 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80322:80325 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80333:80336 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80328:80330 Imp ForImp ::x_';;'_x not
R80293:80312 Imp ForImp Pceval_deterministic def
R80315:80320 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80322:80325 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80333:80336 Imp ForImp ::'WHILE'_x_'DO'_x_'END' not
R80328:80330 Imp ForImp ::x_';;'_x not
R80349:80367 Imp ForImp while_deterministic thm
R80349:80367 Imp ForImp while_deterministic thm
R80385:80404 Imp ForImp Pceval_deterministic def
R80420:80439 Imp ForImp Pceval_deterministic def
R80485:80490 Imp ForImp <> mod
