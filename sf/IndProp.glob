DIGEST 59b90807e3286efdc559d4d6f18b0d33
FIndProp
R67:71 Logic <> <> lib
ind 2880:2881 <> ev
constr 2902:2905 <> ev_0
constr 2916:2920 <> ev_SS
R2885:2887 Coq.Init.Datatypes <> nat ind
R2909:2910 IndProp <> ev ind
R2935:2937 Coq.Init.Datatypes <> nat ind
R2948:2949 IndProp <> ev ind
R2952:2952 Coq.Init.Datatypes <> S constr
R2955:2955 Coq.Init.Datatypes <> S constr
R2957:2957 IndProp <> n var
R2940:2941 IndProp <> ev ind
R2943:2943 IndProp <> n var
ind 3867:3874 <> wrong_ev
constr 3898:3907 <> wrong_ev_0
constr 3924:3934 <> wrong_ev_SS
R3881:3883 Coq.Init.Datatypes <> nat ind
R3911:3918 IndProp <> wrong_ev ind
prf 4698:4701 <> ev_4
R4705:4706 IndProp <> ev ind
R4724:4728 IndProp <> ev_SS constr
R4724:4728 IndProp <> ev_SS constr
R4737:4741 IndProp <> ev_SS constr
R4737:4741 IndProp <> ev_SS constr
R4750:4753 IndProp <> ev_0 constr
R4750:4753 IndProp <> ev_0 constr
prf 4837:4841 <> ev_4'
R4845:4846 IndProp <> ev ind
R4865:4869 IndProp <> ev_SS constr
R4874:4878 IndProp <> ev_SS constr
R4882:4885 IndProp <> ev_0 constr
R4865:4869 IndProp <> ev_SS constr
R4874:4878 IndProp <> ev_SS constr
R4882:4885 IndProp <> ev_0 constr
prf 4976:4983 <> ev_plus4
R5005:5006 IndProp <> ev ind
R5010:5012 Basics <> :nat_scope:x_'+'_x not
R5013:5013 IndProp <> n var
R4997:4998 IndProp <> ev ind
R5000:5000 IndProp <> n var
R5062:5066 IndProp <> ev_SS constr
R5062:5066 IndProp <> ev_SS constr
R5075:5079 IndProp <> ev_SS constr
R5075:5079 IndProp <> ev_SS constr
prf 5225:5233 <> ev_double
R5249:5250 IndProp <> ev ind
R5253:5258 Induction <> double def
R5260:5260 IndProp <> n var
R5319:5322 IndProp <> ev_0 constr
R5319:5322 IndProp <> ev_0 constr
R5340:5344 IndProp <> ev_SS constr
R5340:5344 IndProp <> ev_SS constr
prf 7724:7732 <> ev_minus2
R7756:7757 IndProp <> ev ind
R7760:7763 Coq.Init.Peano <> pred def
R7766:7769 Coq.Init.Peano <> pred def
R7771:7771 IndProp <> n var
R7748:7749 IndProp <> ev ind
R7751:7751 IndProp <> n var
R7857:7860 IndProp <> ev_0 constr
R7857:7860 IndProp <> ev_0 constr
prf 8602:8611 <> ev_minus2'
R8635:8636 IndProp <> ev ind
R8639:8642 Coq.Init.Peano <> pred def
R8645:8648 Coq.Init.Peano <> pred def
R8650:8650 IndProp <> n var
R8627:8628 IndProp <> ev ind
R8630:8630 IndProp <> n var
R8735:8738 IndProp <> ev_0 constr
R8735:8738 IndProp <> ev_0 constr
prf 9135:9141 <> evSS_ev
R9173:9174 IndProp <> ev ind
R9176:9176 IndProp <> n var
R9157:9158 IndProp <> ev ind
R9161:9161 Coq.Init.Datatypes <> S constr
R9164:9164 Coq.Init.Datatypes <> S constr
R9166:9166 IndProp <> n var
prf 10471:10477 <> evSS_ev
R10509:10510 IndProp <> ev ind
R10512:10512 IndProp <> n var
R10493:10494 IndProp <> ev ind
R10497:10497 Coq.Init.Datatypes <> S constr
R10500:10500 Coq.Init.Datatypes <> S constr
R10502:10502 IndProp <> n var
prf 10808:10819 <> one_not_even
R10823:10824 Coq.Init.Logic <> :type_scope:'~'_x not
R10825:10826 IndProp <> ev ind
prf 10983:10994 <> SSSSev__even
R11034:11035 IndProp <> ev ind
R11037:11037 IndProp <> n var
R11010:11011 IndProp <> ev ind
R11014:11014 Coq.Init.Datatypes <> S constr
R11017:11017 Coq.Init.Datatypes <> S constr
R11020:11020 Coq.Init.Datatypes <> S constr
R11023:11023 Coq.Init.Datatypes <> S constr
R11025:11025 IndProp <> n var
prf 11107:11120 <> even5_nonsense
R11139:11141 Coq.Init.Logic <> :type_scope:x_'='_x not
R11135:11137 Basics <> :nat_scope:x_'+'_x not
R11126:11127 IndProp <> ev ind
prf 12674:12689 <> ev_even_firsttry
R12713:12719 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12721:12722 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R12724:12726 Coq.Init.Logic <> :type_scope:x_'='_x not
R12723:12723 IndProp <> n var
R12727:12732 Induction <> double def
R12734:12734 IndProp <> k var
R12705:12706 IndProp <> ev ind
R12708:12708 IndProp <> n var
R14139:14145 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14147:14148 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14157:14159 Coq.Init.Logic <> :type_scope:x_'='_x not
R14149:14149 Coq.Init.Datatypes <> S constr
R14152:14152 Coq.Init.Datatypes <> S constr
R14160:14165 Induction <> double def
R14167:14167 IndProp <> k var
R14092:14098 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14101:14102 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14105:14107 Coq.Init.Logic <> :type_scope:x_'='_x not
R14108:14113 Induction <> double def
R14115:14116 IndProp <> k' var
R14139:14145 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14147:14148 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14157:14159 Coq.Init.Logic <> :type_scope:x_'='_x not
R14149:14149 Coq.Init.Datatypes <> S constr
R14152:14152 Coq.Init.Datatypes <> S constr
R14160:14165 Induction <> double def
R14167:14167 IndProp <> k var
R14092:14098 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14101:14102 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R14105:14107 Coq.Init.Logic <> :type_scope:x_'='_x not
R14108:14113 Induction <> double def
R14115:14116 IndProp <> k' var
R14216:14216 Coq.Init.Datatypes <> S constr
R14216:14216 Coq.Init.Datatypes <> S constr
prf 15018:15024 <> ev_even
R15048:15054 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15056:15057 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15059:15061 Coq.Init.Logic <> :type_scope:x_'='_x not
R15058:15058 IndProp <> n var
R15062:15067 Induction <> double def
R15069:15069 IndProp <> k var
R15040:15041 IndProp <> ev ind
R15043:15043 IndProp <> n var
R15292:15292 Coq.Init.Datatypes <> S constr
R15292:15292 Coq.Init.Datatypes <> S constr
prf 15682:15692 <> ev_even_iff
R15712:15716 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R15708:15709 IndProp <> ev ind
R15711:15711 IndProp <> n var
R15717:15723 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15725:15726 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R15728:15730 Coq.Init.Logic <> :type_scope:x_'='_x not
R15727:15727 IndProp <> n var
R15731:15736 Induction <> double def
R15738:15738 IndProp <> k var
R15786:15792 IndProp <> ev_even thm
R15786:15792 IndProp <> ev_even thm
R15841:15849 IndProp <> ev_double thm
R15841:15849 IndProp <> ev_double thm
prf 16281:16286 <> ev_sum
R16318:16319 IndProp <> ev ind
R16323:16325 Basics <> :nat_scope:x_'+'_x not
R16322:16322 IndProp <> n var
R16326:16326 IndProp <> m var
R16310:16311 IndProp <> ev ind
R16313:16313 IndProp <> m var
R16302:16303 IndProp <> ev ind
R16305:16305 IndProp <> n var
R16400:16404 IndProp <> ev_SS constr
R16400:16404 IndProp <> ev_SS constr
ind 16674:16676 <> ev'
constr 16697:16701 <> ev'_0
constr 16713:16717 <> ev'_2
constr 16729:16735 <> ev'_sum
R16680:16682 Coq.Init.Datatypes <> nat ind
R16705:16707 IndProp <> ev' ind
R16721:16723 IndProp <> ev' ind
R16769:16771 IndProp <> ev' ind
R16775:16777 Basics <> :nat_scope:x_'+'_x not
R16774:16774 IndProp <> n var
R16778:16778 IndProp <> m var
R16760:16762 IndProp <> ev' ind
R16764:16764 IndProp <> m var
R16751:16753 IndProp <> ev' ind
R16755:16755 IndProp <> n var
prf 16958:16963 <> ev'_ev
R16982:16986 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16977:16979 IndProp <> ev' ind
R16981:16981 IndProp <> n var
R16987:16988 IndProp <> ev ind
R16990:16990 IndProp <> n var
R17061:17064 IndProp <> ev_0 constr
R17061:17064 IndProp <> ev_0 constr
R17076:17080 IndProp <> ev_SS constr
R17084:17087 IndProp <> ev_0 constr
R17076:17080 IndProp <> ev_SS constr
R17084:17087 IndProp <> ev_0 constr
R17100:17105 IndProp <> ev_sum thm
R17100:17105 IndProp <> ev_sum thm
R17153:17157 IndProp <> ev'_0 constr
R17153:17157 IndProp <> ev'_0 constr
R17171:17171 Coq.Init.Datatypes <> S constr
R17174:17174 Coq.Init.Datatypes <> S constr
R17188:17190 Basics <> :nat_scope:x_'+'_x not
R17188:17190 Basics <> :nat_scope:x_'+'_x not
R17171:17171 Coq.Init.Datatypes <> S constr
R17174:17174 Coq.Init.Datatypes <> S constr
R17209:17215 IndProp <> ev'_sum constr
R17209:17215 IndProp <> ev'_sum constr
R17226:17230 IndProp <> ev'_2 constr
R17226:17230 IndProp <> ev'_2 constr
prf 17438:17446 <> ev_ev__ev
R17484:17485 IndProp <> ev ind
R17487:17487 IndProp <> m var
R17476:17477 IndProp <> ev ind
R17479:17479 IndProp <> n var
R17464:17465 IndProp <> ev ind
R17469:17469 Basics <> :nat_scope:x_'+'_x not
R17468:17468 IndProp <> n var
R17470:17470 IndProp <> m var
R17575:17581 IndProp <> evSS_ev thm
R17575:17581 IndProp <> evSS_ev thm
prf 17854:17865 <> ev_plus_plus
R17909:17910 IndProp <> ev ind
R17914:17914 Basics <> :nat_scope:x_'+'_x not
R17913:17913 IndProp <> m var
R17915:17915 IndProp <> p var
R17897:17898 IndProp <> ev ind
R17902:17902 Basics <> :nat_scope:x_'+'_x not
R17901:17901 IndProp <> n var
R17903:17903 IndProp <> p var
R17885:17886 IndProp <> ev ind
R17890:17890 Basics <> :nat_scope:x_'+'_x not
R17889:17889 IndProp <> n var
R17891:17891 IndProp <> m var
R17946:17947 IndProp <> ev ind
R17955:17958 Basics <> :nat_scope:x_'+'_x not
R17964:17964 Basics <> :nat_scope:x_'+'_x not
R17951:17953 Basics <> :nat_scope:x_'+'_x not
R17960:17962 Basics <> :nat_scope:x_'+'_x not
R17946:17947 IndProp <> ev ind
R17955:17958 Basics <> :nat_scope:x_'+'_x not
R17964:17964 Basics <> :nat_scope:x_'+'_x not
R17951:17953 Basics <> :nat_scope:x_'+'_x not
R17960:17962 Basics <> :nat_scope:x_'+'_x not
R17979:17984 IndProp <> ev_sum thm
R17979:17984 IndProp <> ev_sum thm
R18020:18022 Coq.Init.Logic <> :type_scope:x_'='_x not
R18010:18013 Basics <> :nat_scope:x_'+'_x not
R18019:18019 Basics <> :nat_scope:x_'+'_x not
R18006:18008 Basics <> :nat_scope:x_'+'_x not
R18015:18017 Basics <> :nat_scope:x_'+'_x not
R18028:18031 Basics <> :nat_scope:x_'+'_x not
R18037:18037 Basics <> :nat_scope:x_'+'_x not
R18024:18026 Basics <> :nat_scope:x_'+'_x not
R18033:18035 Basics <> :nat_scope:x_'+'_x not
R18020:18022 Coq.Init.Logic <> :type_scope:x_'='_x not
R18010:18013 Basics <> :nat_scope:x_'+'_x not
R18019:18019 Basics <> :nat_scope:x_'+'_x not
R18006:18008 Basics <> :nat_scope:x_'+'_x not
R18015:18017 Basics <> :nat_scope:x_'+'_x not
R18028:18031 Basics <> :nat_scope:x_'+'_x not
R18037:18037 Basics <> :nat_scope:x_'+'_x not
R18024:18026 Basics <> :nat_scope:x_'+'_x not
R18033:18035 Basics <> :nat_scope:x_'+'_x not
R18053:18061 Induction <> plus_swap prfax
R18053:18061 Induction <> plus_swap prfax
R18072:18081 Induction <> plus_assoc prfax
R18072:18081 Induction <> plus_assoc prfax
R18095:18104 Induction <> plus_assoc prfax
R18095:18104 Induction <> plus_assoc prfax
R18117:18126 Induction <> plus_assoc prfax
R18117:18126 Induction <> plus_assoc prfax
R18191:18193 Basics <> :nat_scope:x_'+'_x not
R18199:18201 Basics <> :nat_scope:x_'+'_x not
R18174:18182 IndProp <> ev_ev__ev thm
R18191:18193 Basics <> :nat_scope:x_'+'_x not
R18199:18201 Basics <> :nat_scope:x_'+'_x not
R18174:18182 IndProp <> ev_ev__ev thm
R18230:18240 IndProp <> ev_even_iff thm
R18230:18240 IndProp <> ev_even_iff thm
R18269:18279 Induction <> double_plus prfax
R18269:18279 Induction <> double_plus prfax
mod 18777:18786 <> Playground
ind 19194:19195 Playground le
constr 19225:19228 Playground le_n
constr 19253:19256 Playground le_S
R19206:19208 Coq.Init.Datatypes <> nat ind
R19199:19201 Coq.Init.Datatypes <> nat ind
R19242:19243 IndProp <> le ind
R19247:19247 IndProp <> n var
R19245:19245 IndProp <> n var
R19285:19286 IndProp <> le ind
R19291:19291 Coq.Init.Datatypes <> S constr
R19293:19293 IndProp <> m var
R19288:19288 IndProp <> n var
R19273:19274 IndProp <> le ind
R19278:19278 IndProp <> m var
R19276:19276 IndProp <> n var
R19321:19322 IndProp Playground le ind
not 19308 Playground ::x_'<='_x
prf 20120:20127 Playground test_le1
R20134:20137 IndProp Playground ::x_'<='_x not
R20180:20183 IndProp Playground le_n constr
R20180:20183 IndProp Playground le_n constr
prf 20200:20207 Playground test_le2
R20214:20217 IndProp Playground ::x_'<='_x not
R20260:20263 IndProp Playground le_S constr
R20260:20263 IndProp Playground le_S constr
R20272:20275 IndProp Playground le_S constr
R20272:20275 IndProp Playground le_S constr
R20284:20287 IndProp Playground le_S constr
R20284:20287 IndProp Playground le_S constr
R20296:20299 IndProp Playground le_n constr
R20296:20299 IndProp Playground le_n constr
prf 20317:20324 Playground test_le3
R20347:20349 Coq.Init.Logic <> :type_scope:x_'='_x not
R20343:20345 Basics <> :nat_scope:x_'+'_x not
R20332:20335 IndProp Playground ::x_'<='_x not
R20525:20534 IndProp <> <> mod
def 20549:20550 <> lt
R20557:20559 Coq.Init.Datatypes <> nat ind
R20565:20566 Coq.Init.Peano <> le ind
R20574:20574 IndProp <> m var
R20569:20569 Coq.Init.Datatypes <> S constr
R20571:20571 IndProp <> n var
R20599:20600 IndProp <> lt def
not 20587 <> ::x_'<'_x
ind 20676:20684 <> square_of
constr 20714:20715 <> sq
R20695:20697 Coq.Init.Datatypes <> nat ind
R20688:20690 Coq.Init.Datatypes <> nat ind
R20728:20730 Coq.Init.Datatypes <> nat ind
R20733:20741 IndProp <> square_of ind
R20747:20749 Basics <> :nat_scope:x_'*'_x not
R20746:20746 IndProp <> n var
R20750:20750 IndProp <> n var
R20743:20743 IndProp <> n var
ind 20765:20772 <> next_nat
constr 20802:20803 <> nn
R20783:20785 Coq.Init.Datatypes <> nat ind
R20776:20778 Coq.Init.Datatypes <> nat ind
R20816:20818 Coq.Init.Datatypes <> nat ind
R20821:20828 IndProp <> next_nat ind
R20833:20833 Coq.Init.Datatypes <> S constr
R20835:20835 IndProp <> n var
R20830:20830 IndProp <> n var
ind 20850:20858 <> next_even
constr 20888:20891 <> ne_1
constr 20939:20942 <> ne_2
R20869:20871 Coq.Init.Datatypes <> nat ind
R20862:20864 Coq.Init.Datatypes <> nat ind
R20917:20925 IndProp <> next_even ind
R20930:20930 Coq.Init.Datatypes <> S constr
R20932:20932 IndProp <> n var
R20927:20927 IndProp <> n var
R20905:20906 IndProp <> ev ind
R20909:20909 Coq.Init.Datatypes <> S constr
R20911:20911 IndProp <> n var
R20972:20980 IndProp <> next_even ind
R20985:20985 Coq.Init.Datatypes <> S constr
R20988:20988 Coq.Init.Datatypes <> S constr
R20990:20990 IndProp <> n var
R20982:20982 IndProp <> n var
R20956:20957 IndProp <> ev ind
R20960:20960 Coq.Init.Datatypes <> S constr
R20963:20963 Coq.Init.Datatypes <> S constr
R20965:20965 IndProp <> n var
ind 21179:21192 <> total_relation
constr 21222:21224 <> tot
R21203:21205 Coq.Init.Datatypes <> nat ind
R21196:21198 Coq.Init.Datatypes <> nat ind
R21240:21253 IndProp <> total_relation ind
R21257:21257 IndProp <> m var
R21255:21255 IndProp <> n var
ind 21434:21447 <> empty_relation
R21458:21460 Coq.Init.Datatypes <> nat ind
R21451:21453 Coq.Init.Datatypes <> nat ind
def 21484:21491 <> total_ex
R21507:21520 IndProp <> total_relation ind
R21524:21524 IndProp <> m var
R21522:21522 IndProp <> n var
R21540:21542 IndProp <> tot constr
R21540:21542 IndProp <> tot constr
def 21558:21565 <> empty_ex
R21581:21583 Coq.Init.Logic <> not def
R21586:21599 IndProp <> empty_relation ind
R21603:21603 IndProp <> m var
R21601:21601 IndProp <> n var
R21629:21631 Coq.Init.Logic <> not def
prf 21899:21906 <> le_trans
R21945:21948 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R21944:21944 IndProp <> m var
R21949:21949 IndProp <> o var
R21935:21938 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R21934:21934 IndProp <> n var
R21939:21939 IndProp <> o var
R21925:21928 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R21924:21924 IndProp <> m var
R21929:21929 IndProp <> n var
R22011:22014 Coq.Init.Peano <> le_S constr
R22011:22014 Coq.Init.Peano <> le_S constr
prf 22039:22044 <> O_le_n
R22061:22064 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22065:22065 IndProp <> n var
R22126:22129 Coq.Init.Peano <> le_S constr
R22126:22129 Coq.Init.Peano <> le_S constr
prf 22152:22167 <> n_le_m__Sn_le_Sm
R22198:22201 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22195:22195 Coq.Init.Datatypes <> S constr
R22197:22197 IndProp <> n var
R22202:22202 Coq.Init.Datatypes <> S constr
R22204:22204 IndProp <> m var
R22186:22189 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22185:22185 IndProp <> n var
R22190:22190 IndProp <> m var
prf 22278:22293 <> Sn_le_Sm__n_le_m
R22326:22329 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22325:22325 IndProp <> n var
R22330:22330 IndProp <> m var
R22314:22317 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22311:22311 Coq.Init.Datatypes <> S constr
R22313:22313 IndProp <> n var
R22318:22318 Coq.Init.Datatypes <> S constr
R22320:22320 IndProp <> m var
R22383:22388 IndProp <> O_le_n thm
R22383:22388 IndProp <> O_le_n thm
R22399:22405 Coq.Init.Peano <> le_pred thm
R22399:22405 Coq.Init.Peano <> le_pred thm
prf 22445:22453 <> le_plus_l
R22472:22475 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22471:22471 IndProp <> a var
R22477:22479 Basics <> :nat_scope:x_'+'_x not
R22476:22476 IndProp <> a var
R22480:22480 IndProp <> b var
R22531:22536 IndProp <> O_le_n thm
R22531:22536 IndProp <> O_le_n thm
R22547:22555 Coq.Init.Peano <> plus_Sn_m thm
R22547:22555 Coq.Init.Peano <> plus_Sn_m thm
R22564:22579 IndProp <> n_le_m__Sn_le_Sm thm
R22564:22579 IndProp <> n_le_m__Sn_le_Sm thm
prf 22602:22608 <> Sn_le_m
R22640:22643 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22639:22639 IndProp <> n var
R22644:22644 IndProp <> m var
R22630:22633 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R22627:22627 Coq.Init.Datatypes <> S constr
R22629:22629 IndProp <> n var
R22634:22634 IndProp <> m var
R22715:22718 Coq.Init.Peano <> le_S constr
R22715:22718 Coq.Init.Peano <> le_S constr
R22727:22742 IndProp <> Sn_le_Sm__n_le_m thm
R22727:22742 IndProp <> Sn_le_Sm__n_le_m thm
prf 22765:22771 <> plus_lt
R22816:22819 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22812:22814 IndProp <> ::x_'<'_x not
R22810:22811 IndProp <> n1 var
R22815:22815 IndProp <> m var
R22822:22824 IndProp <> ::x_'<'_x not
R22820:22821 IndProp <> n2 var
R22825:22825 IndProp <> m var
R22800:22802 IndProp <> ::x_'<'_x not
R22795:22797 Basics <> :nat_scope:x_'+'_x not
R22793:22794 IndProp <> n1 var
R22798:22799 IndProp <> n2 var
R22803:22803 IndProp <> m var
R22843:22844 IndProp <> lt def
R22901:22908 Induction <> plus_n_O thm
R22901:22908 Induction <> plus_n_O thm
R22924:22927 Coq.Init.Peano <> le_S constr
R22924:22927 Coq.Init.Peano <> le_S constr
R22941:22949 Induction <> plus_n_Sm prfax
R22941:22949 Induction <> plus_n_Sm prfax
R23001:23008 Basics <> plus_O_n thm
R23001:23008 Basics <> plus_O_n thm
R23024:23027 Coq.Init.Peano <> le_S constr
R23024:23027 Coq.Init.Peano <> le_S constr
R23038:23046 Coq.Init.Peano <> plus_Sn_m thm
R23038:23046 Coq.Init.Peano <> plus_Sn_m thm
prf 23076:23079 <> lt_S
R23109:23111 IndProp <> ::x_'<'_x not
R23108:23108 IndProp <> n var
R23112:23112 Coq.Init.Datatypes <> S constr
R23114:23114 IndProp <> m var
R23098:23100 IndProp <> ::x_'<'_x not
R23097:23097 IndProp <> n var
R23101:23101 IndProp <> m var
R23141:23142 IndProp <> lt def
prf 23165:23176 <> leb_complete
R23213:23216 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R23212:23212 IndProp <> n var
R23217:23217 IndProp <> m var
R23201:23203 Coq.Init.Logic <> :type_scope:x_'='_x not
R23194:23196 Basics <> leb def
R23200:23200 IndProp <> m var
R23198:23198 IndProp <> n var
R23204:23207 Basics <> true constr
R23300:23305 IndProp <> O_le_n thm
R23300:23305 IndProp <> O_le_n thm
R23384:23399 IndProp <> n_le_m__Sn_le_Sm thm
R23384:23399 IndProp <> n_le_m__Sn_le_Sm thm
prf 23494:23504 <> leb_correct
R23541:23543 Coq.Init.Logic <> :type_scope:x_'='_x not
R23534:23536 Basics <> leb def
R23540:23540 IndProp <> m var
R23538:23538 IndProp <> n var
R23544:23547 Basics <> true constr
R23523:23526 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R23522:23522 IndProp <> n var
R23527:23527 IndProp <> m var
R23686:23701 IndProp <> Sn_le_Sm__n_le_m thm
R23686:23701 IndProp <> Sn_le_Sm__n_le_m thm
prf 23816:23829 <> leb_true_trans
R23892:23894 Coq.Init.Logic <> :type_scope:x_'='_x not
R23885:23887 Basics <> leb def
R23891:23891 IndProp <> o var
R23889:23889 IndProp <> n var
R23895:23898 Basics <> true constr
R23874:23876 Coq.Init.Logic <> :type_scope:x_'='_x not
R23867:23869 Basics <> leb def
R23873:23873 IndProp <> o var
R23871:23871 IndProp <> m var
R23877:23880 Basics <> true constr
R23856:23858 Coq.Init.Logic <> :type_scope:x_'='_x not
R23849:23851 Basics <> leb def
R23855:23855 IndProp <> m var
R23853:23853 IndProp <> n var
R23859:23862 Basics <> true constr
R23924:23934 IndProp <> leb_correct thm
R23924:23934 IndProp <> leb_correct thm
R23943:23954 IndProp <> leb_complete thm
R23943:23954 IndProp <> leb_complete thm
R23968:23979 IndProp <> leb_complete thm
R23968:23979 IndProp <> leb_complete thm
R23996:24003 IndProp <> le_trans thm
R23996:24003 IndProp <> le_trans thm
prf 24090:24096 <> leb_iff
R24128:24132 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R24121:24123 Coq.Init.Logic <> :type_scope:x_'='_x not
R24114:24116 Basics <> leb def
R24120:24120 IndProp <> m var
R24118:24118 IndProp <> n var
R24124:24127 Basics <> true constr
R24134:24137 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R24133:24133 IndProp <> n var
R24138:24138 IndProp <> m var
R24171:24182 IndProp <> leb_complete thm
R24171:24182 IndProp <> leb_complete thm
R24197:24207 IndProp <> leb_correct thm
R24197:24207 IndProp <> leb_correct thm
mod 24239:24239 <> R
ind 24507:24507 R R
constr 24545:24546 R c1
constr 24563:24564 R c2
constr 24614:24615 R c3
R24525:24527 Coq.Init.Datatypes <> nat ind
R24518:24520 Coq.Init.Datatypes <> nat ind
R24511:24513 Coq.Init.Datatypes <> nat ind
R24550:24550 IndProp <> R ind
R24593:24593 IndProp <> R ind
R24604:24604 Coq.Init.Datatypes <> S constr
R24606:24606 IndProp <> o var
R24601:24601 IndProp <> n var
R24596:24596 Coq.Init.Datatypes <> S constr
R24598:24598 IndProp <> m var
R24582:24582 IndProp <> R ind
R24588:24588 IndProp <> o var
R24586:24586 IndProp <> n var
R24584:24584 IndProp <> m var
R24644:24644 IndProp <> R ind
R24655:24655 Coq.Init.Datatypes <> S constr
R24657:24657 IndProp <> o var
R24649:24649 Coq.Init.Datatypes <> S constr
R24651:24651 IndProp <> n var
R24646:24646 IndProp <> m var
R24633:24633 IndProp <> R ind
R24639:24639 IndProp <> o var
R24637:24637 IndProp <> n var
R24635:24635 IndProp <> m var
def 25373:25374 R fR
R25392:25394 Coq.Init.Datatypes <> nat ind
R25385:25387 Coq.Init.Datatypes <> nat ind
R25378:25380 Coq.Init.Datatypes <> nat ind
R25409:25411 Coq.Init.Datatypes <> nat ind
R25418:25420 Basics <> :nat_scope:x_'+'_x not
R25417:25417 IndProp <> m var
R25421:25421 IndProp <> n var
prf 25433:25442 R R_equiv_fR
R25467:25471 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R25460:25460 IndProp R R ind
R25466:25466 IndProp <> o var
R25464:25464 IndProp <> n var
R25462:25462 IndProp <> m var
R25478:25480 Coq.Init.Logic <> :type_scope:x_'='_x not
R25472:25473 IndProp R fR def
R25477:25477 IndProp <> n var
R25475:25475 IndProp <> m var
R25481:25481 IndProp <> o var
R25583:25589 Tactics <> f_equal thm
R25583:25589 Tactics <> f_equal thm
R25611:25612 IndProp R fR def
R25626:25634 Induction <> plus_n_Sm prfax
R25626:25634 Induction <> plus_n_Sm prfax
R25643:25649 Tactics <> f_equal thm
R25643:25649 Tactics <> f_equal thm
R25669:25670 IndProp R fR def
R25771:25782 Logic <> and_exercise def
R25771:25782 Logic <> and_exercise def
R25831:25832 IndProp R c1 constr
R25831:25832 IndProp R c1 constr
R25914:25915 IndProp R c3 constr
R25914:25915 IndProp R c3 constr
R25963:25964 IndProp R c2 constr
R25963:25964 IndProp R c2 constr
R25981:25982 IndProp R c2 constr
R25981:25982 IndProp R c2 constr
R26066:26066 IndProp <> <> mod
ind 27296:27301 <> subseq
constr 27352:27357 <> subnil
constr 27389:27396 <> subrule1
constr 27480:27487 <> subrule2
R27329:27332 Poly <> list ind
R27317:27320 Poly <> list ind
R27372:27377 IndProp <> subseq ind
R27382:27383 IndProp <> l2 var
R27379:27380 Poly <> ::'['_']' not
R27424:27427 Poly <> list ind
R27449:27454 IndProp <> subseq ind
R27468:27471 Poly <> ::x_'::'_x not
R27467:27467 IndProp <> n var
R27472:27473 IndProp <> l2 var
R27458:27461 Poly <> ::x_'::'_x not
R27457:27457 IndProp <> n var
R27462:27463 IndProp <> l1 var
R27433:27438 IndProp <> subseq ind
R27443:27444 IndProp <> l2 var
R27440:27441 IndProp <> l1 var
R27529:27534 IndProp <> subseq ind
R27541:27544 Poly <> ::x_'::'_x not
R27540:27540 IndProp <> n var
R27545:27546 IndProp <> l2 var
R27536:27537 IndProp <> l1 var
R27513:27518 IndProp <> subseq ind
R27523:27524 IndProp <> l2 var
R27520:27521 IndProp <> l1 var
def 27578:27592 <> subseq_example1
R27596:27601 IndProp <> subseq ind
R27611:27611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27613:27613 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27615:27615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27617:27617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27603:27603 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27605:27605 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27607:27607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27609:27609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27633:27640 IndProp <> subrule1 constr
R27633:27640 IndProp <> subrule1 constr
R27649:27656 IndProp <> subrule1 constr
R27649:27656 IndProp <> subrule1 constr
R27665:27672 IndProp <> subrule1 constr
R27665:27672 IndProp <> subrule1 constr
R27681:27686 IndProp <> subnil constr
R27681:27686 IndProp <> subnil constr
def 27702:27716 <> subseq_example2
R27720:27725 IndProp <> subseq ind
R27735:27735 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27737:27737 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27739:27739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27741:27741 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27743:27743 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27745:27745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27747:27747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27727:27727 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27729:27729 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27731:27731 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27733:27733 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27763:27770 IndProp <> subrule1 constr
R27763:27770 IndProp <> subrule1 constr
R27779:27786 IndProp <> subrule2 constr
R27779:27786 IndProp <> subrule2 constr
R27795:27802 IndProp <> subrule2 constr
R27795:27802 IndProp <> subrule2 constr
R27811:27818 IndProp <> subrule1 constr
R27811:27818 IndProp <> subrule1 constr
R27827:27834 IndProp <> subrule2 constr
R27827:27834 IndProp <> subrule2 constr
R27843:27850 IndProp <> subrule1 constr
R27843:27850 IndProp <> subrule1 constr
R27859:27864 IndProp <> subnil constr
R27859:27864 IndProp <> subnil constr
prf 27921:27931 <> non_sub_nil
R27956:27956 IndProp <> T var
R27964:27967 Poly <> list ind
R27969:27969 IndProp <> T var
R27996:28000 Coq.Init.Logic <> False ind
R27973:27978 IndProp <> subseq ind
R27990:27991 Poly <> ::'['_']' not
R27982:27985 Poly <> ::x_'::'_x not
R27981:27981 IndProp <> n var
R27986:27986 IndProp <> l var
def 28074:28083 <> subseq_ex3
R28111:28115 Coq.Init.Logic <> False ind
R28087:28092 IndProp <> subseq ind
R28102:28102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28104:28104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28106:28106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28094:28094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28096:28096 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28098:28098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28100:28100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28192:28202 IndProp <> non_sub_nil thm
R28192:28202 IndProp <> non_sub_nil thm
R28223:28233 IndProp <> non_sub_nil thm
R28223:28233 IndProp <> non_sub_nil thm
R28268:28278 IndProp <> non_sub_nil thm
R28268:28278 IndProp <> non_sub_nil thm
prf 28349:28359 <> subseq_refl
R28384:28387 Poly <> list ind
R28389:28389 IndProp <> T var
R28393:28398 IndProp <> subseq ind
R28402:28402 IndProp <> l var
R28400:28400 IndProp <> l var
R28456:28461 IndProp <> subnil constr
R28456:28461 IndProp <> subnil constr
R28472:28479 IndProp <> subrule1 constr
R28472:28479 IndProp <> subrule1 constr
prf 28508:28514 <> subcons
R28537:28537 IndProp <> T var
R28577:28582 IndProp <> subseq ind
R28587:28588 IndProp <> l2 var
R28584:28585 IndProp <> l1 var
R28547:28552 IndProp <> subseq ind
R28566:28569 Poly <> ::x_'::'_x not
R28565:28565 IndProp <> n var
R28570:28571 IndProp <> l2 var
R28556:28559 Poly <> ::x_'::'_x not
R28555:28555 IndProp <> n var
R28560:28561 IndProp <> l1 var
R28682:28687 IndProp <> subnil constr
R28682:28687 IndProp <> subnil constr
R28696:28706 IndProp <> non_sub_nil thm
R28696:28706 IndProp <> non_sub_nil thm
R28732:28742 IndProp <> non_sub_nil thm
R28732:28742 IndProp <> non_sub_nil thm
R28793:28800 IndProp <> subrule2 constr
R28793:28800 IndProp <> subrule2 constr
R28838:28845 IndProp <> subrule1 constr
R28838:28845 IndProp <> subrule1 constr
R28864:28871 IndProp <> subrule2 constr
R28864:28871 IndProp <> subrule2 constr
prf 29056:29065 <> subseq_app
R29096:29099 Poly <> list ind
R29124:29129 IndProp <> subseq ind
R29137:29140 Poly <> ::x_'++'_x not
R29135:29136 IndProp <> l2 var
R29141:29142 IndProp <> l3 var
R29131:29132 IndProp <> l1 var
R29108:29113 IndProp <> subseq ind
R29118:29119 IndProp <> l2 var
R29115:29116 IndProp <> l1 var
R29186:29191 IndProp <> subnil constr
R29186:29191 IndProp <> subnil constr
R29211:29218 IndProp <> subrule1 constr
R29211:29218 IndProp <> subrule1 constr
R29245:29252 IndProp <> subrule2 constr
R29245:29252 IndProp <> subrule2 constr
prf 29275:29286 <> subseq_trans
R29317:29320 Poly <> list ind
R29322:29322 IndProp <> T var
R29358:29363 IndProp <> subseq ind
R29368:29369 IndProp <> l3 var
R29365:29366 IndProp <> l1 var
R29342:29347 IndProp <> subseq ind
R29352:29353 IndProp <> l3 var
R29349:29350 IndProp <> l2 var
R29326:29331 IndProp <> subseq ind
R29336:29337 IndProp <> l2 var
R29333:29334 IndProp <> l1 var
R29461:29466 IndProp <> subnil constr
R29461:29466 IndProp <> subnil constr
R29477:29487 IndProp <> non_sub_nil thm
R29477:29487 IndProp <> non_sub_nil thm
R29540:29545 IndProp <> subnil constr
R29540:29545 IndProp <> subnil constr
R29575:29582 IndProp <> subrule1 constr
R29575:29582 IndProp <> subrule1 constr
R29619:29626 IndProp <> subrule2 constr
R29619:29626 IndProp <> subrule2 constr
R29669:29676 IndProp <> subrule2 constr
R29669:29676 IndProp <> subrule2 constr
ind 30879:30885 <> reg_exp
constr 30910:30917 <> EmptySet
constr 30933:30940 <> EmptyStr
constr 30956:30959 <> Char
constr 30980:30982 <> App
constr 31024:31028 <> Union
constr 31070:31073 <> Star
R30921:30927 IndProp <> reg_exp ind
R30944:30950 IndProp <> reg_exp ind
R30968:30974 IndProp <> reg_exp ind
R31012:31018 IndProp <> reg_exp ind
R30999:31005 IndProp <> reg_exp ind
R30986:30992 IndProp <> reg_exp ind
R31058:31064 IndProp <> reg_exp ind
R31045:31051 IndProp <> reg_exp ind
R31032:31038 IndProp <> reg_exp ind
R31090:31096 IndProp <> reg_exp ind
R31077:31083 IndProp <> reg_exp ind
R31112:31119 IndProp <> EmptySet constr
R31112:31119 IndProp <> EmptySet constr
R31136:31143 IndProp <> EmptyStr constr
R31136:31143 IndProp <> EmptyStr constr
R31160:31163 IndProp <> Char constr
R31160:31163 IndProp <> Char constr
R31182:31184 IndProp <> App constr
R31182:31184 IndProp <> App constr
R31205:31209 IndProp <> Union constr
R31205:31209 IndProp <> Union constr
R31230:31233 IndProp <> Star constr
R31230:31233 IndProp <> Star constr
ind 32708:32716 <> exp_match
constr 32757:32762 <> MEmpty
constr 32790:32794 <> MChar
constr 32833:32836 <> MApp
constr 32972:32978 <> MUnionL
constr 33080:33086 <> MUnionR
constr 33188:33193 <> MStar0
constr 33233:33240 <> MStarApp
R32734:32740 IndProp <> reg_exp ind
R32724:32727 Poly <> list ind
R32766:32774 IndProp <> exp_match ind
R32779:32786 IndProp <> EmptyStr constr
R32776:32777 Poly <> ::'['_']' not
R32808:32816 IndProp <> exp_match ind
R32823:32826 IndProp <> Char constr
R32828:32828 IndProp <> x var
R32818:32818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32820:32820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32819:32819 IndProp <> x var
R32935:32943 IndProp <> exp_match ind
R32957:32959 IndProp <> App constr
R32965:32967 IndProp <> re2 var
R32961:32963 IndProp <> re1 var
R32948:32951 Poly <> ::x_'++'_x not
R32946:32947 IndProp <> s1 var
R32952:32953 IndProp <> s2 var
R32904:32912 IndProp <> exp_match ind
R32917:32919 IndProp <> re2 var
R32914:32915 IndProp <> s2 var
R32873:32881 IndProp <> exp_match ind
R32886:32888 IndProp <> re1 var
R32883:32884 IndProp <> s1 var
R33049:33057 IndProp <> exp_match ind
R33063:33067 IndProp <> Union constr
R33073:33075 IndProp <> re2 var
R33069:33071 IndProp <> re1 var
R33059:33060 IndProp <> s1 var
R33015:33023 IndProp <> exp_match ind
R33028:33030 IndProp <> re1 var
R33025:33026 IndProp <> s1 var
R33157:33165 IndProp <> exp_match ind
R33171:33175 IndProp <> Union constr
R33181:33183 IndProp <> re2 var
R33177:33179 IndProp <> re1 var
R33167:33168 IndProp <> s2 var
R33123:33131 IndProp <> exp_match ind
R33136:33138 IndProp <> re2 var
R33133:33134 IndProp <> s2 var
R33208:33216 IndProp <> exp_match ind
R33222:33225 IndProp <> Star constr
R33227:33228 IndProp <> re var
R33218:33219 Poly <> ::'['_']' not
R33351:33359 IndProp <> exp_match ind
R33373:33376 IndProp <> Star constr
R33378:33379 IndProp <> re var
R33364:33367 Poly <> ::x_'++'_x not
R33362:33363 IndProp <> s1 var
R33368:33369 IndProp <> s2 var
R33310:33318 IndProp <> exp_match ind
R33324:33327 IndProp <> Star constr
R33329:33330 IndProp <> re var
R33320:33321 IndProp <> s2 var
R33276:33284 IndProp <> exp_match ind
R33289:33290 IndProp <> re var
R33286:33287 IndProp <> s1 var
R33581:33589 IndProp <> exp_match ind
not 33567 <> ::x_'=~'_x
def 35777:35787 <> reg_exp_ex1
R35794:35797 IndProp <> ::x_'=~'_x not
R35791:35791 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35793:35793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35798:35801 IndProp <> Char constr
R35821:35825 IndProp <> MChar constr
R35821:35825 IndProp <> MChar constr
def 35842:35852 <> reg_exp_ex2
R35862:35865 IndProp <> ::x_'=~'_x not
R35856:35856 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35858:35859 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35861:35861 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35866:35868 IndProp <> App constr
R35880:35883 IndProp <> Char constr
R35871:35874 IndProp <> Char constr
R35905:35908 IndProp <> MApp constr
R35928:35931 IndProp <> Char constr
R35923:35923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35925:35925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35915:35918 IndProp <> Char constr
R35910:35910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35912:35912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35905:35908 IndProp <> MApp constr
R35928:35931 IndProp <> Char constr
R35923:35923 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35925:35925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35915:35918 IndProp <> Char constr
R35910:35910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35912:35912 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35948:35952 IndProp <> MChar constr
R35948:35952 IndProp <> MChar constr
R35965:35969 IndProp <> MChar constr
R35965:35969 IndProp <> MChar constr
def 36325:36335 <> reg_exp_ex3
R36339:36341 Coq.Init.Logic <> :type_scope:'~'_x not
R36358:36358 Coq.Init.Logic <> :type_scope:'~'_x not
R36348:36351 IndProp <> ::x_'=~'_x not
R36342:36342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36344:36345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36347:36347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36352:36355 IndProp <> Char constr
def 36625:36639 <> reg_exp_of_list
R36650:36653 Poly <> list ind
R36655:36655 IndProp <> T var
R36669:36669 IndProp <> l var
R36680:36681 Poly <> ::'['_']' not
R36686:36693 IndProp <> EmptyStr constr
R36700:36703 Poly <> ::x_'::'_x not
R36710:36712 IndProp <> App constr
R36724:36738 IndProp <> reg_exp_of_list def
R36715:36718 IndProp <> Char constr
def 36760:36770 <> reg_exp_ex4
R36783:36786 IndProp <> ::x_'=~'_x not
R36774:36774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36776:36777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36779:36780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36782:36782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36787:36801 IndProp <> reg_exp_of_list def
R36803:36803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36805:36806 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36808:36809 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36811:36811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36837:36840 IndProp <> MApp constr
R36842:36842 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36844:36844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36837:36840 IndProp <> MApp constr
R36842:36842 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36844:36844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36858:36862 IndProp <> MChar constr
R36858:36862 IndProp <> MChar constr
R36876:36879 IndProp <> MApp constr
R36881:36881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36883:36883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36876:36879 IndProp <> MApp constr
R36881:36881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36883:36883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36897:36901 IndProp <> MChar constr
R36897:36901 IndProp <> MChar constr
R36915:36918 IndProp <> MApp constr
R36920:36920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36922:36922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36915:36918 IndProp <> MApp constr
R36920:36920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36922:36922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36936:36940 IndProp <> MChar constr
R36936:36940 IndProp <> MChar constr
R36953:36958 IndProp <> MEmpty constr
R36953:36958 IndProp <> MEmpty constr
prf 37145:37150 <> MStar1
R37173:37179 IndProp <> reg_exp ind
R37181:37181 IndProp <> T var
R37206:37209 IndProp <> ::x_'=~'_x not
R37205:37205 IndProp <> s var
R37210:37213 IndProp <> Star constr
R37215:37216 IndProp <> re var
R37191:37194 IndProp <> ::x_'=~'_x not
R37190:37190 IndProp <> s var
R37195:37196 IndProp <> re var
R37259:37267 Poly <> app_nil_r thm
R37259:37267 Poly <> app_nil_r thm
R37284:37291 IndProp <> MStarApp constr
R37295:37296 Poly <> ::'['_']' not
R37284:37291 IndProp <> MStarApp constr
R37295:37296 Poly <> ::'['_']' not
R37326:37331 IndProp <> MStar0 constr
R37326:37331 IndProp <> MStar0 constr
prf 37686:37699 <> empty_is_empty
R37717:37720 Poly <> list ind
R37722:37722 IndProp <> T var
R37728:37730 Coq.Init.Logic <> :type_scope:'~'_x not
R37744:37744 Coq.Init.Logic <> :type_scope:'~'_x not
R37732:37735 IndProp <> ::x_'=~'_x not
R37731:37731 IndProp <> s var
R37736:37743 IndProp <> EmptySet constr
R37763:37765 Coq.Init.Logic <> not def
prf 37801:37807 <> MUnion'
R37825:37828 Poly <> list ind
R37830:37830 IndProp <> T var
R37844:37850 IndProp <> reg_exp ind
R37852:37852 IndProp <> T var
R37885:37888 IndProp <> ::x_'=~'_x not
R37884:37884 IndProp <> s var
R37889:37893 IndProp <> Union constr
R37899:37901 IndProp <> re2 var
R37895:37897 IndProp <> re1 var
R37866:37869 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37859:37862 IndProp <> ::x_'=~'_x not
R37858:37858 IndProp <> s var
R37863:37865 IndProp <> re1 var
R37871:37874 IndProp <> ::x_'=~'_x not
R37870:37870 IndProp <> s var
R37875:37877 IndProp <> re2 var
R37943:37949 IndProp <> MUnionL constr
R37943:37949 IndProp <> MUnionL constr
R37968:37974 IndProp <> MUnionR constr
R37968:37974 IndProp <> MUnionR constr
prf 38241:38246 <> MStar'
R38265:38268 Poly <> list ind
R38271:38274 Poly <> list ind
R38276:38276 IndProp <> T var
R38286:38292 IndProp <> reg_exp ind
R38294:38294 IndProp <> T var
R38350:38353 IndProp <> ::x_'=~'_x not
R38336:38339 Poly <> fold def
R38348:38349 Poly <> ::'['_']' not
R38345:38346 IndProp <> ss var
R38341:38343 Poly <> app def
R38354:38357 IndProp <> Star constr
R38359:38360 IndProp <> re var
R38323:38326 IndProp <> ::x_'=~'_x not
R38322:38322 IndProp <> s var
R38327:38328 IndProp <> re var
R38311:38312 Logic <> In def
R38316:38317 IndProp <> ss var
R38314:38314 IndProp <> s var
R38427:38432 IndProp <> MStar0 constr
R38427:38432 IndProp <> MStar0 constr
R38452:38459 IndProp <> MStarApp constr
R38452:38459 IndProp <> MStarApp constr
prf 38703:38727 <> reg_exp_of_list_spec_core
R38758:38758 IndProp <> T var
R38806:38810 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R38768:38771 IndProp <> ::x_'=~'_x not
R38766:38767 IndProp <> ss var
R38772:38774 IndProp <> App constr
R38787:38801 IndProp <> reg_exp_of_list def
R38803:38804 IndProp <> tl var
R38777:38780 IndProp <> Char constr
R38782:38783 IndProp <> hd var
R38813:38815 Coq.Init.Logic <> :type_scope:x_'='_x not
R38811:38812 IndProp <> ss var
R38818:38821 Poly <> ::x_'::'_x not
R38816:38817 IndProp <> hd var
R38822:38823 IndProp <> tl var
R39360:39362 Coq.Init.Logic <> :type_scope:x_'='_x not
R39364:39367 Poly <> ::x_'::'_x not
R39360:39362 Coq.Init.Logic <> :type_scope:x_'='_x not
R39364:39367 Poly <> ::x_'::'_x not
R39542:39545 Poly <> ::x_'++'_x not
R39538:39538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39541:39541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39546:39547 Poly <> ::'['_']' not
R39542:39545 Poly <> ::x_'++'_x not
R39538:39538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39541:39541 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39546:39547 Poly <> ::'['_']' not
R39557:39560 IndProp <> MApp constr
R39557:39560 IndProp <> MApp constr
R39577:39581 IndProp <> MChar constr
R39577:39581 IndProp <> MChar constr
R39592:39597 IndProp <> MEmpty constr
R39592:39597 IndProp <> MEmpty constr
R39635:39638 Poly <> ::x_'::'_x not
R39640:39643 Poly <> ::x_'::'_x not
R39659:39663 Poly <> ::x_'++'_x not
R39674:39674 Poly <> ::x_'++'_x not
R39655:39655 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39658:39658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39667:39670 Poly <> ::x_'++'_x not
R39664:39664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39666:39666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39659:39663 Poly <> ::x_'++'_x not
R39674:39674 Poly <> ::x_'++'_x not
R39655:39655 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39658:39658 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39667:39670 Poly <> ::x_'++'_x not
R39664:39664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39666:39666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R39635:39638 Poly <> ::x_'::'_x not
R39640:39643 Poly <> ::x_'::'_x not
R39692:39695 IndProp <> MApp constr
R39692:39695 IndProp <> MApp constr
R39706:39710 IndProp <> MChar constr
R39706:39710 IndProp <> MChar constr
prf 39764:39783 <> reg_exp_of_list_spec
R39805:39808 Poly <> list ind
R39810:39810 IndProp <> T var
R39840:39844 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R39818:39821 IndProp <> ::x_'=~'_x not
R39816:39817 IndProp <> s1 var
R39822:39836 IndProp <> reg_exp_of_list def
R39838:39839 IndProp <> s2 var
R39847:39849 Coq.Init.Logic <> :type_scope:x_'='_x not
R39845:39846 IndProp <> s1 var
R39850:39851 IndProp <> s2 var
R39985:40009 IndProp <> reg_exp_of_list_spec_core thm
R39985:40009 IndProp <> reg_exp_of_list_spec_core thm
R40107:40112 IndProp <> MEmpty constr
R40107:40112 IndProp <> MEmpty constr
R40134:40158 IndProp <> reg_exp_of_list_spec_core thm
R40134:40158 IndProp <> reg_exp_of_list_spec_core thm
def 40709:40716 <> re_chars
R40728:40734 IndProp <> reg_exp ind
R40736:40736 IndProp <> T var
R40741:40744 Poly <> list ind
R40746:40746 IndProp <> T var
R40759:40760 IndProp <> re var
R40771:40778 IndProp <> EmptySet constr
R40783:40784 Poly <> ::'['_']' not
R40790:40797 IndProp <> EmptyStr constr
R40802:40803 Poly <> ::'['_']' not
R40809:40812 IndProp <> Char constr
R40819:40819 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R40821:40821 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R40827:40829 IndProp <> App constr
R40854:40857 Poly <> ::x_'++'_x not
R40842:40849 IndProp <> re_chars def
R40858:40865 IndProp <> re_chars def
R40875:40879 IndProp <> Union constr
R40904:40907 Poly <> ::x_'++'_x not
R40892:40899 IndProp <> re_chars def
R40908:40915 IndProp <> re_chars def
R40925:40928 IndProp <> Star constr
R40936:40943 IndProp <> re_chars def
R40945:40946 IndProp <> re var
prf 41015:41025 <> in_re_match
R41043:41046 Poly <> list ind
R41048:41048 IndProp <> T var
R41057:41063 IndProp <> reg_exp ind
R41065:41065 IndProp <> T var
R41073:41073 IndProp <> T var
R41104:41105 Logic <> In def
R41110:41117 IndProp <> re_chars def
R41119:41120 IndProp <> re var
R41107:41107 IndProp <> x var
R41092:41093 Logic <> In def
R41097:41097 IndProp <> s var
R41095:41095 IndProp <> x var
R41080:41083 IndProp <> ::x_'=~'_x not
R41079:41079 IndProp <> s var
R41084:41085 IndProp <> re var
R41475:41484 Logic <> in_app_iff thm
R41475:41484 Logic <> in_app_iff thm
R41661:41670 Logic <> in_app_iff thm
R41661:41670 Logic <> in_app_iff thm
R41736:41745 Logic <> in_app_iff thm
R41736:41745 Logic <> in_app_iff thm
R42369:42378 Logic <> in_app_iff thm
R42369:42378 Logic <> in_app_iff thm
def 42724:42735 <> re_not_empty
R42754:42760 IndProp <> reg_exp ind
R42762:42762 IndProp <> T var
R42767:42770 Basics <> bool ind
R42783:42784 IndProp <> re var
R42795:42802 IndProp <> EmptySet constr
R42807:42811 Basics <> false constr
R42817:42824 IndProp <> EmptyStr constr
R42829:42832 Basics <> true constr
R42838:42841 IndProp <> Char constr
R42848:42851 Basics <> true constr
R42857:42859 IndProp <> App constr
R42870:42870 Basics <> ::x_'&&'_x not
R42886:42891 Basics <> ::x_'&&'_x not
R42907:42907 Basics <> ::x_'&&'_x not
R42871:42882 IndProp <> re_not_empty def
R42892:42903 IndProp <> re_not_empty def
R42913:42917 IndProp <> Union constr
R42928:42928 Basics <> ::x_'||'_x not
R42944:42949 Basics <> ::x_'||'_x not
R42965:42965 Basics <> ::x_'||'_x not
R42929:42940 IndProp <> re_not_empty def
R42950:42961 IndProp <> re_not_empty def
R42971:42974 IndProp <> Star constr
R42981:42984 Basics <> true constr
prf 42998:43017 <> re_not_empty_correct
R43036:43042 IndProp <> reg_exp ind
R43044:43044 IndProp <> T var
R43050:43050 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R43068:43073 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R43051:43057 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43059:43060 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R43062:43065 IndProp <> ::x_'=~'_x not
R43061:43061 IndProp <> s var
R43066:43067 IndProp <> re var
R43089:43091 Coq.Init.Logic <> :type_scope:x_'='_x not
R43074:43085 IndProp <> re_not_empty def
R43087:43088 IndProp <> re var
R43092:43095 Basics <> true constr
R43164:43177 IndProp <> empty_is_empty thm
R43164:43177 IndProp <> empty_is_empty thm
R43264:43276 Logic <> andb_true_iff thm
R43264:43276 Logic <> andb_true_iff thm
R43381:43392 Logic <> orb_true_iff thm
R43381:43392 Logic <> orb_true_iff thm
R43582:43583 Poly <> ::'['_']' not
R43582:43583 Poly <> ::'['_']' not
R43592:43597 IndProp <> MEmpty constr
R43592:43597 IndProp <> MEmpty constr
R43609:43609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43611:43611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43609:43609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43611:43611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43620:43624 IndProp <> MChar constr
R43620:43624 IndProp <> MChar constr
R43651:43663 Logic <> andb_true_iff thm
R43651:43663 Logic <> andb_true_iff thm
R43753:43756 Poly <> ::x_'++'_x not
R43753:43756 Poly <> ::x_'++'_x not
R43768:43771 IndProp <> MApp constr
R43768:43771 IndProp <> MApp constr
R43804:43815 Logic <> orb_true_iff thm
R43804:43815 Logic <> orb_true_iff thm
R43890:43896 IndProp <> MUnionL constr
R43890:43896 IndProp <> MUnionL constr
R43959:43965 IndProp <> MUnionR constr
R43959:43965 IndProp <> MUnionR constr
R44003:44004 Poly <> ::'['_']' not
R44003:44004 Poly <> ::'['_']' not
R44013:44018 IndProp <> MStar0 constr
R44013:44018 IndProp <> MStar0 constr
prf 44473:44480 <> star_app
R44501:44504 Poly <> list ind
R44506:44506 IndProp <> T var
R44515:44521 IndProp <> reg_exp ind
R44523:44523 IndProp <> T var
R44575:44578 IndProp <> ::x_'=~'_x not
R44569:44572 Poly <> ::x_'++'_x not
R44567:44568 IndProp <> s1 var
R44573:44574 IndProp <> s2 var
R44579:44582 IndProp <> Star constr
R44584:44585 IndProp <> re var
R44550:44553 IndProp <> ::x_'=~'_x not
R44548:44549 IndProp <> s2 var
R44554:44557 IndProp <> Star constr
R44559:44560 IndProp <> re var
R44531:44534 IndProp <> ::x_'=~'_x not
R44529:44530 IndProp <> s1 var
R44535:44538 IndProp <> Star constr
R44540:44541 IndProp <> re var
prf 46173:46180 <> star_app
R46201:46204 Poly <> list ind
R46206:46206 IndProp <> T var
R46219:46225 IndProp <> reg_exp ind
R46227:46227 IndProp <> T var
R46294:46297 IndProp <> ::x_'=~'_x not
R46288:46291 Poly <> ::x_'++'_x not
R46286:46287 IndProp <> s1 var
R46292:46293 IndProp <> s2 var
R46298:46301 IndProp <> Star constr
R46303:46304 IndProp <> re var
R46269:46272 IndProp <> ::x_'=~'_x not
R46267:46268 IndProp <> s2 var
R46273:46276 IndProp <> Star constr
R46278:46279 IndProp <> re var
R46251:46253 Coq.Init.Logic <> :type_scope:x_'='_x not
R46248:46250 IndProp <> re' var
R46254:46257 IndProp <> Star constr
R46259:46260 IndProp <> re var
R46235:46238 IndProp <> ::x_'=~'_x not
R46233:46234 IndProp <> s1 var
R46239:46241 IndProp <> re' var
prf 47005:47012 <> star_app
R47033:47036 Poly <> list ind
R47038:47038 IndProp <> T var
R47047:47053 IndProp <> reg_exp ind
R47055:47055 IndProp <> T var
R47107:47110 IndProp <> ::x_'=~'_x not
R47101:47104 Poly <> ::x_'++'_x not
R47099:47100 IndProp <> s1 var
R47105:47106 IndProp <> s2 var
R47111:47114 IndProp <> Star constr
R47116:47117 IndProp <> re var
R47082:47085 IndProp <> ::x_'=~'_x not
R47080:47081 IndProp <> s2 var
R47086:47089 IndProp <> Star constr
R47091:47092 IndProp <> re var
R47063:47066 IndProp <> ::x_'=~'_x not
R47061:47062 IndProp <> s1 var
R47067:47070 IndProp <> Star constr
R47072:47073 IndProp <> re var
R47163:47166 IndProp <> Star constr
R47163:47166 IndProp <> Star constr
R48119:48127 Poly <> app_assoc thm
R48119:48127 Poly <> app_assoc thm
R48140:48147 IndProp <> MStarApp constr
R48140:48147 IndProp <> MStarApp constr
prf 48494:48503 <> app_is_nil
R48533:48536 Poly <> list ind
R48538:48538 IndProp <> T var
R48570:48573 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R48565:48567 Coq.Init.Logic <> :type_scope:x_'='_x not
R48563:48564 IndProp <> l1 var
R48568:48569 Poly <> ::'['_']' not
R48576:48578 Coq.Init.Logic <> :type_scope:x_'='_x not
R48574:48575 IndProp <> l2 var
R48579:48580 Poly <> ::'['_']' not
R48553:48555 Coq.Init.Logic <> :type_scope:x_'='_x not
R48547:48550 Poly <> ::x_'++'_x not
R48545:48546 IndProp <> l1 var
R48551:48552 IndProp <> l2 var
R48556:48557 Poly <> ::'['_']' not
prf 48757:48771 <> fold_app_is_nil
R48798:48801 Poly <> list ind
R48804:48807 Poly <> list ind
R48809:48809 IndProp <> T var
R48858:48860 Coq.Init.Logic <> :type_scope:x_'='_x not
R48856:48857 IndProp <> ts var
R48861:48862 Poly <> ::'['_']' not
R48845:48846 Logic <> In def
R48851:48851 IndProp <> l var
R48848:48849 IndProp <> ts var
R48833:48835 Coq.Init.Logic <> :type_scope:x_'='_x not
R48820:48823 Poly <> fold def
R48831:48832 Poly <> ::'['_']' not
R48829:48829 IndProp <> l var
R48825:48827 Poly <> app def
R48836:48837 Poly <> ::'['_']' not
R48956:48965 IndProp <> app_is_nil thm
R48956:48965 IndProp <> app_is_nil thm
prf 49057:49079 <> fold_app_is_nil_special
R49106:49109 Poly <> list ind
R49112:49115 Poly <> list ind
R49117:49117 IndProp <> T var
R49176:49177 Logic <> In def
R49182:49182 IndProp <> l var
R49179:49180 IndProp <> ts var
R49167:49169 Coq.Init.Logic <> :type_scope:x_'='_x not
R49165:49166 IndProp <> ts var
R49170:49171 Poly <> ::'['_']' not
R49152:49155 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R49151:49151 IndProp <> l var
R49156:49157 Poly <> ::'['_']' not
R49141:49143 Coq.Init.Logic <> :type_scope:x_'='_x not
R49128:49131 Poly <> fold def
R49139:49140 Poly <> ::'['_']' not
R49137:49137 IndProp <> l var
R49133:49135 Poly <> app def
R49144:49145 Poly <> ::'['_']' not
R49257:49266 IndProp <> app_is_nil thm
R49257:49266 IndProp <> app_is_nil thm
prf 49342:49348 <> MStar''
R49366:49369 Poly <> list ind
R49371:49371 IndProp <> T var
R49380:49386 IndProp <> reg_exp ind
R49388:49388 IndProp <> T var
R49412:49418 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49437:49442 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49424:49427 Poly <> list ind
R49430:49433 Poly <> list ind
R49435:49435 IndProp <> T var
R49461:49468 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R49444:49446 Coq.Init.Logic <> :type_scope:x_'='_x not
R49443:49443 IndProp <> s var
R49447:49450 Poly <> fold def
R49459:49460 Poly <> ::'['_']' not
R49456:49457 IndProp <> ss var
R49452:49454 Poly <> app def
R49494:49497 IndProp <> ::x_'=~'_x not
R49492:49493 IndProp <> s' var
R49498:49499 IndProp <> re var
R49480:49481 Logic <> In def
R49486:49487 IndProp <> ss var
R49483:49484 IndProp <> s' var
R49395:49398 IndProp <> ::x_'=~'_x not
R49394:49394 IndProp <> s var
R49399:49402 IndProp <> Star constr
R49404:49405 IndProp <> re var
R49529:49532 IndProp <> Star constr
R49529:49532 IndProp <> Star constr
R49692:49693 Poly <> ::'['_']' not
R49692:49693 Poly <> ::'['_']' not
R49879:49885 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49904:49922 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49891:49894 Poly <> list ind
R49897:49900 Poly <> list ind
R49942:49963 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50004:50004 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R49925:49927 Coq.Init.Logic <> :type_scope:x_'='_x not
R49928:49931 Poly <> fold def
R49940:49941 Poly <> ::'['_']' not
R49937:49938 IndProp <> ss var
R49933:49935 Poly <> app def
R49976:49979 Poly <> list ind
R49998:50001 IndProp <> ::x_'=~'_x not
R49996:49997 IndProp <> s' var
R49984:49985 Logic <> In def
R49990:49991 IndProp <> ss var
R49987:49988 IndProp <> s' var
R49879:49885 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49904:49922 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R49891:49894 Poly <> list ind
R49897:49900 Poly <> list ind
R49942:49963 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R50004:50004 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R49925:49927 Coq.Init.Logic <> :type_scope:x_'='_x not
R49928:49931 Poly <> fold def
R49940:49941 Poly <> ::'['_']' not
R49937:49938 IndProp <> ss var
R49933:49935 Poly <> app def
R49976:49979 Poly <> list ind
R49998:50001 IndProp <> ::x_'=~'_x not
R49996:49997 IndProp <> s' var
R49984:49985 Logic <> In def
R49990:49991 IndProp <> ss var
R49987:49988 IndProp <> s' var
R50128:50131 Poly <> ::x_'++'_x not
R50124:50124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R50127:50127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R50128:50131 Poly <> ::x_'++'_x not
R50124:50124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R50127:50127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
mod 50977:50983 <> Pumping
def 50996:51011 Pumping pumping_constant
R51023:51029 IndProp Pumping reg_exp ind
R51031:51031 IndProp <> T var
R51036:51038 Coq.Init.Datatypes <> nat ind
R51051:51052 IndProp <> re var
R51063:51070 IndProp Pumping EmptySet constr
R51081:51088 IndProp Pumping EmptyStr constr
R51099:51102 IndProp Pumping Char constr
R51115:51117 IndProp Pumping App constr
R51156:51158 Basics <> :nat_scope:x_'+'_x not
R51136:51151 IndProp <> pumping_constant def
R51159:51174 IndProp <> pumping_constant def
R51184:51188 IndProp Pumping Union constr
R51227:51229 Basics <> :nat_scope:x_'+'_x not
R51207:51222 IndProp <> pumping_constant def
R51230:51245 IndProp <> pumping_constant def
R51255:51258 IndProp Pumping Star constr
def 51414:51417 Pumping napp
R51428:51430 Coq.Init.Datatypes <> nat ind
R51438:51441 Poly <> list ind
R51443:51443 IndProp <> T var
R51448:51451 Poly <> list ind
R51453:51453 IndProp <> T var
R51466:51466 IndProp <> n var
R51482:51483 Poly <> ::'['_']' not
R51489:51489 Coq.Init.Datatypes <> S constr
R51498:51501 Poly <> ::x_'++'_x not
R51497:51497 IndProp <> l var
R51502:51505 IndProp <> napp def
R51510:51510 IndProp <> l var
prf 51526:51534 Pumping napp_plus
R51553:51555 Coq.Init.Datatypes <> nat ind
R51563:51566 Poly <> list ind
R51568:51568 IndProp <> T var
R51588:51590 Coq.Init.Logic <> :type_scope:x_'='_x not
R51574:51577 IndProp Pumping napp def
R51587:51587 IndProp <> l var
R51581:51583 Basics <> :nat_scope:x_'+'_x not
R51580:51580 IndProp <> n var
R51584:51584 IndProp <> m var
R51599:51602 Poly <> ::x_'++'_x not
R51591:51594 IndProp Pumping napp def
R51598:51598 IndProp <> l var
R51596:51596 IndProp <> n var
R51603:51606 IndProp Pumping napp def
R51610:51610 IndProp <> l var
R51608:51608 IndProp <> m var
R51706:51714 Poly <> app_assoc thm
R51706:51714 Poly <> app_assoc thm
R52258:52272 Coq.omega.Omega <> <> lib
prf 52282:52295 Pumping plus_less_plus
R52319:52321 Coq.Init.Datatypes <> nat ind
R52354:52357 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52348:52351 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52347:52347 IndProp <> n var
R52352:52353 IndProp <> n' var
R52359:52362 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52358:52358 IndProp <> m var
R52363:52364 IndProp <> m' var
R52332:52335 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52328:52330 Basics <> :nat_scope:x_'+'_x not
R52327:52327 IndProp <> n var
R52331:52331 IndProp <> m var
R52338:52340 Basics <> :nat_scope:x_'+'_x not
R52336:52337 IndProp <> n' var
R52341:52342 IndProp <> m' var
prf 52463:52475 Pumping one_less_plus
R52493:52495 Coq.Init.Datatypes <> nat ind
R52521:52524 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R52516:52519 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52520:52520 IndProp <> n var
R52526:52529 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52530:52530 IndProp <> m var
R52502:52505 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R52507:52509 Basics <> :nat_scope:x_'+'_x not
R52506:52506 IndProp <> n var
R52510:52510 IndProp <> m var
prf 52568:52580 Pumping some_dumb_app
R52617:52620 Poly <> list ind
R52622:52622 IndProp <> T var
R52650:52652 Coq.Init.Logic <> :type_scope:x_'='_x not
R52628:52628 Poly <> ::x_'++'_x not
R52643:52647 Poly <> ::x_'++'_x not
R52631:52634 Poly <> ::x_'++'_x not
R52629:52630 IndProp <> l1 var
R52637:52640 Poly <> ::x_'++'_x not
R52635:52636 IndProp <> l2 var
R52641:52642 IndProp <> l3 var
R52648:52649 IndProp <> l4 var
R52655:52658 Poly <> ::x_'++'_x not
R52653:52654 IndProp <> l1 var
R52661:52664 Poly <> ::x_'++'_x not
R52659:52660 IndProp <> l2 var
R52667:52670 Poly <> ::x_'++'_x not
R52665:52666 IndProp <> l3 var
R52671:52672 IndProp <> l4 var
R52700:52708 Poly <> app_assoc thm
R52700:52708 Poly <> app_assoc thm
R52719:52727 Poly <> app_assoc thm
R52719:52727 Poly <> app_assoc thm
R52738:52746 Poly <> app_assoc thm
R52738:52746 Poly <> app_assoc thm
prf 52769:52783 Pumping match_empty_str
R52810:52813 Poly <> list ind
R52815:52815 IndProp <> T var
R52839:52841 Coq.Init.Logic <> :type_scope:x_'='_x not
R52838:52838 IndProp <> s var
R52842:52843 Poly <> ::'['_']' not
R52822:52825 IndProp <> ::x_'=~'_x not
R52821:52821 IndProp <> s var
R52826:52833 IndProp Pumping EmptyStr constr
prf 52895:52902 Pumping whatever
R52923:52926 Poly <> list ind
R52928:52928 IndProp <> T var
R52959:52962 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R52954:52956 Coq.Init.Logic <> :type_scope:x_'='_x not
R52952:52953 IndProp <> l1 var
R52957:52958 Poly <> ::'['_']' not
R52965:52967 Coq.Init.Logic <> :type_scope:x_'='_x not
R52963:52964 IndProp <> l2 var
R52968:52969 Poly <> ::'['_']' not
R52943:52945 Coq.Init.Logic <> :type_scope:x_'='_x not
R52937:52940 Poly <> ::x_'++'_x not
R52935:52936 IndProp <> l1 var
R52941:52942 IndProp <> l2 var
R52946:52947 Poly <> ::'['_']' not
prf 53067:53073 Pumping pumping
R53092:53098 IndProp Pumping reg_exp ind
R53100:53100 IndProp <> T var
R53158:53164 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53173:53178 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R53197:53204 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53180:53182 Coq.Init.Logic <> :type_scope:x_'='_x not
R53179:53179 IndProp <> s var
R53185:53188 Poly <> ::x_'++'_x not
R53183:53184 IndProp <> s1 var
R53191:53194 Poly <> ::x_'++'_x not
R53189:53190 IndProp <> s2 var
R53195:53196 IndProp <> s3 var
R53213:53220 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R53207:53210 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R53205:53206 IndProp <> s2 var
R53211:53212 Poly <> ::'['_']' not
R53252:53255 IndProp <> ::x_'=~'_x not
R53233:53236 Poly <> ::x_'++'_x not
R53231:53232 IndProp <> s1 var
R53246:53249 Poly <> ::x_'++'_x not
R53237:53240 IndProp Pumping napp def
R53244:53245 IndProp <> s2 var
R53242:53242 IndProp <> m var
R53250:53251 IndProp <> s3 var
R53256:53257 IndProp <> re var
R53140:53143 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R53121:53136 IndProp Pumping pumping_constant def
R53138:53139 IndProp <> re var
R53144:53149 Poly <> length def
R53151:53151 IndProp <> s var
R53109:53112 IndProp <> ::x_'=~'_x not
R53108:53108 IndProp <> s var
R53113:53114 IndProp <> re var
R54022:54031 Poly <> app_length thm
R54022:54031 Poly <> app_length thm
R54082:54087 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54069:54072 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R54049:54064 IndProp Pumping pumping_constant def
R54073:54078 Poly <> length def
R54108:54111 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R54088:54103 IndProp Pumping pumping_constant def
R54112:54117 Poly <> length def
R54082:54087 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R54069:54072 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R54049:54064 IndProp Pumping pumping_constant def
R54073:54078 Poly <> length def
R54108:54111 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R54088:54103 IndProp Pumping pumping_constant def
R54112:54117 Poly <> length def
R54134:54147 IndProp Pumping plus_less_plus thm
R54134:54147 IndProp Pumping plus_less_plus thm
R54314:54317 Poly <> ::x_'++'_x not
R54314:54317 Poly <> ::x_'++'_x not
R54357:54369 IndProp Pumping some_dumb_app thm
R54357:54369 IndProp Pumping some_dumb_app thm
R54453:54465 IndProp Pumping some_dumb_app thm
R54453:54465 IndProp Pumping some_dumb_app thm
R54474:54477 IndProp Pumping MApp constr
R54474:54477 IndProp Pumping MApp constr
R54640:54643 Poly <> ::x_'++'_x not
R54640:54643 Poly <> ::x_'++'_x not
R54690:54698 Poly <> app_assoc thm
R54690:54698 Poly <> app_assoc thm
R54782:54790 Poly <> app_assoc thm
R54782:54790 Poly <> app_assoc thm
R54799:54802 IndProp Pumping MApp constr
R54799:54802 IndProp Pumping MApp constr
R54890:54893 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R54870:54885 IndProp Pumping pumping_constant def
R54894:54899 Poly <> length def
R54890:54893 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R54870:54885 IndProp Pumping pumping_constant def
R54894:54899 Poly <> length def
R54921:54936 IndProp Pumping pumping_constant def
R54921:54936 IndProp Pumping pumping_constant def
R54952:54959 Coq.Arith.Plus <> plus_0_r def
R54952:54959 Coq.Arith.Plus <> plus_0_r def
R54986:54994 Induction <> plus_n_Sm prfax
R54986:54994 Induction <> plus_n_Sm prfax
R55019:55025 IndProp Pumping Sn_le_m thm
R55019:55025 IndProp Pumping Sn_le_m thm
R55215:55221 IndProp Pumping MUnionL constr
R55215:55221 IndProp Pumping MUnionL constr
R55289:55292 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R55269:55284 IndProp Pumping pumping_constant def
R55293:55298 Poly <> length def
R55289:55292 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R55269:55284 IndProp Pumping pumping_constant def
R55293:55298 Poly <> length def
R55320:55335 IndProp Pumping pumping_constant def
R55320:55335 IndProp Pumping pumping_constant def
R55558:55564 IndProp Pumping MUnionR constr
R55558:55564 IndProp Pumping MUnionR constr
R55680:55689 Poly <> app_length thm
R55680:55689 Poly <> app_length thm
R55776:55778 Poly <> nil constr
R55785:55787 Poly <> nil constr
R55776:55778 Poly <> nil constr
R55785:55787 Poly <> nil constr
R55828:55830 Coq.Init.Logic <> not def
R55909:55917 Poly <> app_nil_r thm
R55909:55917 Poly <> app_nil_r thm
R55950:55955 IndProp Pumping MStar0 constr
R55950:55955 IndProp Pumping MStar0 constr
R55971:55978 IndProp Pumping MStarApp constr
R55971:55978 IndProp Pumping MStarApp constr
R56027:56029 Poly <> nil constr
R56035:56038 Poly <> ::x_'++'_x not
R56041:56044 Poly <> ::x_'++'_x not
R56050:56052 Poly <> nil constr
R56027:56029 Poly <> nil constr
R56035:56038 Poly <> ::x_'++'_x not
R56041:56044 Poly <> ::x_'++'_x not
R56050:56052 Poly <> nil constr
R56081:56089 Poly <> app_nil_r thm
R56081:56089 Poly <> app_nil_r thm
R56116:56118 Coq.Init.Logic <> not def
R56135:56142 IndProp Pumping whatever thm
R56135:56142 IndProp Pumping whatever thm
R56260:56268 Poly <> app_nil_r thm
R56260:56268 Poly <> app_nil_r thm
R56301:56306 IndProp Pumping MStar0 constr
R56301:56306 IndProp Pumping MStar0 constr
R56326:56333 IndProp Pumping star_app thm
R56326:56333 IndProp Pumping star_app thm
R56342:56349 IndProp Pumping MStarApp constr
R56342:56349 IndProp Pumping MStarApp constr
R56446:56452 IndProp <> <> mod
prf 56864:56882 <> filter_not_empty_In
R56932:56933 Logic <> In def
R56937:56937 IndProp <> l var
R56935:56935 IndProp <> n var
R56920:56923 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R56900:56905 Poly <> filter def
R56919:56919 IndProp <> l var
R56908:56914 Basics <> beq_nat def
R56916:56916 IndProp <> n var
R56924:56925 Poly <> ::'['_']' not
R57093:57099 Basics <> beq_nat def
R57093:57099 Basics <> beq_nat def
R57168:57183 Logic <> beq_nat_true_iff thm
R57168:57183 Logic <> beq_nat_true_iff thm
mod 58086:58093 <> FirstTry
ind 58107:58113 FirstTry reflect
constr 58143:58150 FirstTry ReflectT
constr 58193:58200 FirstTry ReflectF
R58125:58128 Basics <> bool ind
R58176:58182 IndProp <> reflect ind
R58186:58189 Basics <> true constr
R58184:58184 IndProp <> P var
R58171:58171 IndProp <> P var
R58228:58234 IndProp <> reflect ind
R58238:58242 Basics <> false constr
R58236:58236 IndProp <> P var
R58221:58222 Coq.Init.Logic <> :type_scope:'~'_x not
R58223:58223 IndProp <> P var
R58540:58547 IndProp <> <> mod
ind 58561:58567 <> reflect
constr 58600:58607 <> ReflectT
constr 58633:58640 <> ReflectF
R58582:58585 Basics <> bool ind
R58616:58622 IndProp <> reflect ind
R58626:58629 Basics <> true constr
R58651:58657 IndProp <> reflect ind
R58661:58665 Basics <> false constr
R58644:58645 Coq.Init.Logic <> :type_scope:'~'_x not
prf 59476:59486 <> iff_reflect
R59522:59528 IndProp <> reflect ind
R59532:59532 IndProp <> b var
R59530:59530 IndProp <> P var
R59504:59508 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R59503:59503 IndProp <> P var
R59510:59512 Coq.Init.Logic <> :type_scope:x_'='_x not
R59509:59509 IndProp <> b var
R59513:59516 Basics <> true constr
R59604:59611 IndProp <> ReflectT constr
R59604:59611 IndProp <> ReflectT constr
R59648:59655 IndProp <> ReflectF constr
R59648:59655 IndProp <> ReflectF constr
prf 59766:59776 <> reflect_iff
R59809:59813 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R59808:59808 IndProp <> P var
R59815:59817 Coq.Init.Logic <> :type_scope:x_'='_x not
R59814:59814 IndProp <> b var
R59818:59821 Basics <> true constr
R59792:59798 IndProp <> reflect ind
R59802:59802 IndProp <> b var
R59800:59800 IndProp <> P var
prf 60322:60329 <> beq_natP
R60345:60351 IndProp <> reflect ind
R60362:60368 Basics <> beq_nat def
R60372:60372 IndProp <> m var
R60370:60370 IndProp <> n var
R60355:60357 Coq.Init.Logic <> :type_scope:x_'='_x not
R60354:60354 IndProp <> n var
R60358:60358 IndProp <> m var
R60405:60415 IndProp <> iff_reflect thm
R60405:60415 IndProp <> iff_reflect thm
R60426:60441 Logic <> beq_nat_true_iff thm
R60426:60441 Logic <> beq_nat_true_iff thm
prf 60838:60857 <> filter_not_empty_In'
R60907:60908 Logic <> In def
R60912:60912 IndProp <> l var
R60910:60910 IndProp <> n var
R60895:60898 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R60875:60880 Poly <> filter def
R60894:60894 IndProp <> l var
R60883:60889 Basics <> beq_nat def
R60891:60891 IndProp <> n var
R60899:60900 Poly <> ::'['_']' not
R61068:61075 IndProp <> beq_natP thm
R61068:61075 IndProp <> beq_natP thm
def 61358:61362 <> count
R61379:61379 IndProp <> l var
R61390:61391 Poly <> ::'['_']' not
R61403:61406 Poly <> ::x_'::'_x not
R61413:61413 Basics <> :nat_scope:x_'+'_x not
R61442:61445 Basics <> :nat_scope:x_'+'_x not
R61417:61423 Basics <> beq_nat def
R61425:61425 IndProp <> n var
R61446:61450 IndProp <> count def
R61452:61452 IndProp <> n var
prf 61473:61489 <> beq_natP_practice
R61524:61525 Coq.Init.Logic <> :type_scope:'~'_x not
R61532:61532 Coq.Init.Logic <> :type_scope:'~'_x not
R61526:61527 Logic <> In def
R61531:61531 IndProp <> l var
R61529:61529 IndProp <> n var
R61516:61518 Coq.Init.Logic <> :type_scope:x_'='_x not
R61507:61511 IndProp <> count def
R61515:61515 IndProp <> l var
R61513:61513 IndProp <> n var
R61614:61621 IndProp <> beq_natP thm
R61614:61621 IndProp <> beq_natP thm
ind 63128:63136 <> nostutter
constr 63175:63181 <> nilstut
constr 63202:63208 <> onestut
constr 63246:63251 <> nostut
R63152:63155 Poly <> list ind
R63185:63193 IndProp <> nostutter ind
R63195:63196 Poly <> ::'['_']' not
R63228:63236 IndProp <> nostutter ind
R63238:63238 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R63240:63240 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R63239:63239 IndProp <> x var
R63388:63396 IndProp <> nostutter ind
R63402:63405 Poly <> ::x_'::'_x not
R63399:63401 IndProp <> hd1 var
R63409:63412 Poly <> ::x_'::'_x not
R63406:63408 IndProp <> hd2 var
R63413:63414 IndProp <> tl var
R63290:63298 IndProp <> nostutter ind
R63304:63307 Poly <> ::x_'::'_x not
R63301:63303 IndProp <> hd2 var
R63308:63309 IndProp <> tl var
R63278:63281 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R63275:63277 IndProp <> hd1 var
R63282:63284 IndProp <> hd2 var
def 64013:64028 <> test_nostutter_1
R64031:64039 IndProp <> nostutter ind
R64041:64041 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64043:64043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64045:64045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64047:64047 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64049:64049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64051:64051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64053:64053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64089:64105 Logic <> beq_nat_false_iff thm
R64089:64105 Logic <> beq_nat_false_iff thm
R64089:64105 Logic <> beq_nat_false_iff thm
R64089:64105 Logic <> beq_nat_false_iff thm
R64089:64105 Logic <> beq_nat_false_iff thm
R64089:64105 Logic <> beq_nat_false_iff thm
def 64128:64143 <> test_nostutter_2
R64147:64155 IndProp <> nostutter ind
R64159:64161 Poly <> nil constr
R64163:64165 Coq.Init.Datatypes <> nat ind
R64202:64218 Logic <> beq_nat_false_iff thm
def 64241:64256 <> test_nostutter_3
R64260:64268 IndProp <> nostutter ind
R64270:64270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64272:64272 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 64343:64358 <> test_nostutter_4
R64366:64368 Coq.Init.Logic <> not def
R64371:64379 IndProp <> nostutter ind
R64381:64381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64383:64383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64385:64385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64387:64387 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64389:64389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R64439:64447 IndProp <> nostutter ind
R64439:64447 IndProp <> nostutter ind
ind 65672:65676 <> merge
constr 65799:65807 <> MergeNilL
constr 65838:65846 <> MergeNilR
constr 65898:65903 <> MergeL
constr 65977:65982 <> MergeR
R65717:65720 Poly <> list ind
R65705:65708 Poly <> list ind
R65692:65695 Poly <> list ind
R65821:65825 IndProp <> merge ind
R65832:65832 IndProp <> l var
R65829:65830 Poly <> ::'['_']' not
R65827:65827 IndProp <> l var
R65860:65864 IndProp <> merge ind
R65870:65871 Poly <> ::'['_']' not
R65868:65868 IndProp <> l var
R65866:65866 IndProp <> l var
R65943:65947 IndProp <> merge ind
R65970:65971 IndProp <> l2 var
R65962:65965 Poly <> ::x_'::'_x not
R65960:65961 IndProp <> hd var
R65966:65967 IndProp <> l1 var
R65952:65955 Poly <> ::x_'::'_x not
R65950:65951 IndProp <> hd var
R65956:65956 IndProp <> l var
R65926:65930 IndProp <> merge ind
R65937:65938 IndProp <> l2 var
R65934:65935 IndProp <> l1 var
R65932:65932 IndProp <> l var
R66022:66026 IndProp <> merge ind
R66044:66047 Poly <> ::x_'::'_x not
R66042:66043 IndProp <> hd var
R66048:66049 IndProp <> l2 var
R66038:66039 IndProp <> l1 var
R66031:66034 Poly <> ::x_'::'_x not
R66029:66030 IndProp <> hd var
R66035:66035 IndProp <> l var
R66005:66009 IndProp <> merge ind
R66016:66017 IndProp <> l2 var
R66013:66014 IndProp <> l1 var
R66011:66011 IndProp <> l var
def 66062:66070 <> merge_ex1
R66074:66078 IndProp <> merge ind
R66102:66102 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66104:66105 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66107:66107 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66092:66092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66094:66095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66097:66098 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66100:66100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66080:66080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66082:66082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66084:66084 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66086:66086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66088:66088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66090:66090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 66150:66158 <> merge_ex2
R66162:66166 IndProp <> merge ind
R66179:66179 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66181:66181 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66175:66175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66177:66177 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66168:66168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66170:66171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66173:66173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 66224:66232 <> merge_ex3
R66260:66264 Coq.Init.Logic <> False ind
R66236:66240 IndProp <> merge ind
R66253:66253 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66255:66255 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66249:66249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66251:66251 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66242:66242 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66244:66245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R66247:66247 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 66342:66353 <> merge_nil_x3
R66384:66387 Poly <> list ind
R66389:66389 IndProp <> T var
R66420:66423 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R66415:66417 Coq.Init.Logic <> :type_scope:x_'='_x not
R66413:66414 IndProp <> l1 var
R66418:66419 Poly <> ::'['_']' not
R66426:66428 Coq.Init.Logic <> :type_scope:x_'='_x not
R66424:66425 IndProp <> l2 var
R66429:66430 Poly <> ::'['_']' not
R66395:66399 IndProp <> merge ind
R66407:66408 IndProp <> l2 var
R66404:66405 IndProp <> l1 var
R66401:66402 Poly <> ::'['_']' not
prf 66487:66495 <> merge_sym
R66528:66531 Poly <> list ind
R66533:66533 IndProp <> T var
R66556:66560 IndProp <> merge ind
R66567:66568 IndProp <> l1 var
R66564:66565 IndProp <> l2 var
R66562:66562 IndProp <> l var
R66539:66543 IndProp <> merge ind
R66550:66551 IndProp <> l2 var
R66547:66548 IndProp <> l1 var
R66545:66545 IndProp <> l var
R66611:66622 IndProp <> merge_nil_x3 thm
R66611:66622 IndProp <> merge_nil_x3 thm
R66674:66682 IndProp <> MergeNilR constr
R66674:66682 IndProp <> MergeNilR constr
R66714:66722 IndProp <> MergeNilR constr
R66714:66722 IndProp <> MergeNilR constr
R66737:66745 IndProp <> MergeNilL constr
R66737:66745 IndProp <> MergeNilL constr
R66760:66765 IndProp <> MergeR constr
R66760:66765 IndProp <> MergeR constr
R66797:66802 IndProp <> MergeL constr
R66797:66802 IndProp <> MergeL constr
prf 67088:67096 <> filter_in
R67126:67129 Poly <> list ind
R67131:67131 IndProp <> T var
R67139:67139 IndProp <> T var
R67155:67158 Basics <> bool ind
R67150:67150 IndProp <> T var
R67204:67206 Coq.Init.Logic <> :type_scope:x_'='_x not
R67198:67201 IndProp <> test var
R67203:67203 IndProp <> t var
R67207:67210 Basics <> true constr
R67187:67188 Logic <> In def
R67192:67193 IndProp <> l' var
R67190:67190 IndProp <> t var
R67177:67179 Coq.Init.Logic <> :type_scope:x_'='_x not
R67164:67169 Poly <> filter def
R67176:67176 IndProp <> l var
R67171:67174 IndProp <> test var
R67180:67181 IndProp <> l' var
prf 67603:67614 <> merge_filter
R67649:67652 Basics <> bool ind
R67644:67644 IndProp <> X var
R67665:67668 Poly <> list ind
R67670:67670 IndProp <> X var
R67799:67801 Coq.Init.Logic <> :type_scope:x_'='_x not
R67786:67791 Poly <> filter def
R67798:67798 IndProp <> l var
R67793:67796 IndProp <> test var
R67802:67803 IndProp <> l1 var
R67771:67773 Coq.Init.Logic <> :type_scope:x_'='_x not
R67764:67767 IndProp <> test var
R67769:67770 IndProp <> x2 var
R67774:67778 Basics <> false constr
R67752:67753 Logic <> In def
R67758:67759 IndProp <> l2 var
R67755:67756 IndProp <> x2 var
R67726:67728 Coq.Init.Logic <> :type_scope:x_'='_x not
R67719:67722 IndProp <> test var
R67724:67725 IndProp <> x1 var
R67729:67732 Basics <> true constr
R67707:67708 Logic <> In def
R67713:67714 IndProp <> l1 var
R67710:67711 IndProp <> x1 var
R67676:67680 IndProp <> merge ind
R67687:67688 IndProp <> l2 var
R67684:67685 IndProp <> l1 var
R67682:67682 IndProp <> l var
R67846:67857 IndProp <> merge_nil_x3 thm
R67846:67857 IndProp <> merge_nil_x3 thm
R67967:67968 Logic <> In def
R67967:67968 Logic <> In def
R68126:68128 Coq.Init.Logic <> :type_scope:x_'='_x not
R68124:68125 IndProp <> x' var
R68129:68133 Basics <> false constr
R68108:68109 Logic <> In def
R68111:68112 IndProp <> x' var
R68126:68128 Coq.Init.Logic <> :type_scope:x_'='_x not
R68124:68125 IndProp <> x' var
R68129:68133 Basics <> false constr
R68108:68109 Logic <> In def
R68111:68112 IndProp <> x' var
R68236:68244 IndProp <> MergeNilL constr
R68236:68244 IndProp <> MergeNilL constr
R68318:68320 Coq.Init.Logic <> :type_scope:x_'='_x not
R68316:68317 IndProp <> x' var
R68321:68324 Basics <> true constr
R68300:68301 Logic <> In def
R68303:68304 IndProp <> x' var
R68318:68320 Coq.Init.Logic <> :type_scope:x_'='_x not
R68316:68317 IndProp <> x' var
R68321:68324 Basics <> true constr
R68300:68301 Logic <> In def
R68303:68304 IndProp <> x' var
R68460:68462 Coq.Init.Logic <> :type_scope:x_'='_x not
R68447:68452 Poly <> filter def
R68460:68462 Coq.Init.Logic <> :type_scope:x_'='_x not
R68447:68452 Poly <> filter def
R68482:68484 Poly <> nil constr
R68482:68484 Poly <> nil constr
R68499:68507 IndProp <> MergeNilR constr
R68499:68507 IndProp <> MergeNilR constr
R68572:68573 Logic <> In def
R68572:68573 Logic <> In def
R68709:68711 Coq.Init.Logic <> :type_scope:x_'='_x not
R68712:68715 Basics <> true constr
R68709:68711 Coq.Init.Logic <> :type_scope:x_'='_x not
R68712:68715 Basics <> true constr
R68802:68804 Coq.Init.Logic <> :type_scope:x_'='_x not
R68789:68794 Poly <> filter def
R68802:68804 Coq.Init.Logic <> :type_scope:x_'='_x not
R68789:68794 Poly <> filter def
R68989:68991 Coq.Init.Logic <> :type_scope:x_'='_x not
R68992:68996 Basics <> false constr
R68989:68991 Coq.Init.Logic <> :type_scope:x_'='_x not
R68992:68996 Basics <> false constr
prf 69567:69577 <> cons_filter
R69602:69602 IndProp <> T var
R69609:69612 Poly <> list ind
R69614:69614 IndProp <> T var
R69629:69632 Basics <> bool ind
R69624:69624 IndProp <> T var
R69675:69677 Coq.Init.Logic <> :type_scope:x_'='_x not
R69656:69660 Poly <> ::x_'::'_x not
R69674:69674 Poly <> ::x_'::'_x not
R69655:69655 IndProp <> t var
R69661:69666 Poly <> filter def
R69673:69673 IndProp <> l var
R69668:69671 IndProp <> test var
R69678:69683 Poly <> filter def
R69692:69695 Poly <> ::x_'::'_x not
R69691:69691 IndProp <> t var
R69696:69696 IndProp <> l var
R69685:69688 IndProp <> test var
R69644:69646 Coq.Init.Logic <> :type_scope:x_'='_x not
R69638:69641 IndProp <> test var
R69643:69643 IndProp <> t var
R69647:69650 Basics <> true constr
prf 69858:69878 <> filter_subseq_longest
R69908:69911 Poly <> list ind
R69913:69913 IndProp <> T var
R69928:69931 Basics <> bool ind
R69923:69923 IndProp <> T var
R70016:70019 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R70005:70010 Poly <> length def
R70012:70015 IndProp <> subl var
R70020:70025 Poly <> length def
R70028:70033 Poly <> filter def
R70040:70040 IndProp <> l var
R70035:70038 IndProp <> test var
R69967:69967 IndProp <> T var
R69990:69992 Coq.Init.Logic <> :type_scope:x_'='_x not
R69984:69987 IndProp <> test var
R69989:69989 IndProp <> t var
R69993:69996 Basics <> true constr
R69971:69972 Logic <> In def
R69976:69979 IndProp <> subl var
R69974:69974 IndProp <> t var
R69937:69942 IndProp <> subseq ind
R69949:69949 IndProp <> l var
R69944:69947 IndProp <> subl var
R70119:70124 IndProp <> O_le_n thm
R70119:70124 IndProp <> O_le_n thm
R70152:70154 Coq.Init.Logic <> :type_scope:x_'='_x not
R70155:70158 Basics <> true constr
R70152:70154 Coq.Init.Logic <> :type_scope:x_'='_x not
R70155:70158 Basics <> true constr
R70233:70236 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R70224:70229 Poly <> length def
R70237:70242 Poly <> length def
R70245:70250 Poly <> filter def
R70233:70236 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R70224:70229 Poly <> length def
R70237:70242 Poly <> length def
R70245:70250 Poly <> filter def
R70331:70346 IndProp <> n_le_m__Sn_le_Sm thm
R70331:70346 IndProp <> n_le_m__Sn_le_Sm thm
R70383:70386 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R70374:70379 Poly <> length def
R70387:70392 Poly <> length def
R70395:70400 Poly <> filter def
R70383:70386 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R70374:70379 Poly <> length def
R70387:70392 Poly <> length def
R70395:70400 Poly <> filter def
R70481:70484 Coq.Init.Peano <> le_S constr
R70481:70484 Coq.Init.Peano <> le_S constr
ind 71174:71176 <> pal
constr 71213:71218 <> palnil
constr 71233:71238 <> palone
constr 71270:71276 <> palrule
R71191:71194 Poly <> list ind
R71222:71224 IndProp <> pal ind
R71226:71227 Poly <> ::'['_']' not
R71258:71260 IndProp <> pal ind
R71262:71262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71264:71264 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71263:71263 IndProp <> t var
R71296:71299 Poly <> list ind
R71314:71316 IndProp <> pal ind
R71320:71323 Poly <> ::x_'::'_x not
R71319:71319 IndProp <> t var
R71325:71328 Poly <> ::x_'++'_x not
R71324:71324 IndProp <> l var
R71329:71329 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71331:71331 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71330:71330 IndProp <> t var
R71305:71307 IndProp <> pal ind
R71309:71309 IndProp <> l var
def 71358:71364 <> pal_ex2
R71368:71370 IndProp <> pal ind
R71376:71379 Poly <> ::x_'++'_x not
R71373:71373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71375:71375 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71383:71386 Poly <> ::x_'++'_x not
R71380:71380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71382:71382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71387:71387 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71389:71389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 71426:71432 <> pal_ex3
R71436:71438 IndProp <> pal ind
R71444:71447 Poly <> ::x_'++'_x not
R71441:71441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71443:71443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71448:71448 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71450:71450 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71473:71476 Poly <> ::x_'++'_x not
R71470:71470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71472:71472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71477:71477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71479:71479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71491:71494 Poly <> ::x_'++'_x not
R71488:71488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71490:71490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71497:71500 Poly <> ::x_'++'_x not
R71495:71496 Poly <> ::'['_']' not
R71501:71501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71503:71503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71491:71494 Poly <> ::x_'++'_x not
R71488:71488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71490:71490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71497:71500 Poly <> ::x_'++'_x not
R71495:71496 Poly <> ::'['_']' not
R71501:71501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71503:71503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71473:71476 Poly <> ::x_'++'_x not
R71470:71470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71472:71472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71477:71477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71479:71479 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 71575:71585 <> pal_app_rev
R71609:71612 Poly <> list ind
R71614:71614 IndProp <> T var
R71618:71620 IndProp <> pal ind
R71624:71627 Poly <> ::x_'++'_x not
R71623:71623 IndProp <> l var
R71628:71630 Poly <> rev def
R71632:71632 IndProp <> l var
R71683:71688 IndProp <> palnil constr
R71683:71688 IndProp <> palnil constr
R71710:71718 Poly <> app_assoc thm
R71710:71718 Poly <> app_assoc thm
R71727:71733 IndProp <> palrule constr
R71727:71733 IndProp <> palrule constr
prf 71756:71763 <> pal_twin
R71788:71788 IndProp <> X var
R71792:71794 IndProp <> pal ind
R71796:71796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71798:71799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71801:71801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71800:71800 IndProp <> x var
R71797:71797 IndProp <> x var
R71829:71829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71831:71832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71834:71834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71843:71846 Poly <> ::x_'::'_x not
R71849:71852 Poly <> ::x_'++'_x not
R71847:71848 Poly <> ::'['_']' not
R71853:71853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71855:71855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71843:71846 Poly <> ::x_'::'_x not
R71849:71852 Poly <> ::x_'++'_x not
R71847:71848 Poly <> ::'['_']' not
R71853:71853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71855:71855 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71829:71829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71831:71832 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R71834:71834 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 71912:71918 <> pal_rev
R71942:71945 Poly <> list ind
R71947:71947 IndProp <> T var
R71961:71963 Coq.Init.Logic <> :type_scope:x_'='_x not
R71960:71960 IndProp <> l var
R71964:71966 Poly <> rev def
R71968:71968 IndProp <> l var
R71951:71953 IndProp <> pal ind
R71955:71955 IndProp <> l var
R72052:72064 Poly <> rev_app_distr thm
R72052:72064 Poly <> rev_app_distr thm
prf 72403:72415 <> the_lone_tail
R72439:72439 IndProp <> X var
R72492:72498 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R72501:72502 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R72505:72507 Coq.Init.Logic <> :type_scope:x_'='_x not
R72503:72504 IndProp <> l2 var
R72510:72513 Poly <> ::x_'++'_x not
R72508:72509 IndProp <> l4 var
R72514:72514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R72516:72516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R72515:72515 IndProp <> x var
R72480:72483 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R72478:72479 IndProp <> l2 var
R72484:72485 Poly <> ::'['_']' not
R72462:72464 Coq.Init.Logic <> :type_scope:x_'='_x not
R72456:72459 Poly <> ::x_'++'_x not
R72454:72455 IndProp <> l1 var
R72460:72461 IndProp <> l2 var
R72467:72470 Poly <> ::x_'++'_x not
R72465:72466 IndProp <> l3 var
R72471:72471 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R72473:72473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R72472:72472 IndProp <> x var
R72625:72634 IndProp <> app_is_nil thm
R72625:72634 IndProp <> app_is_nil thm
prf 72738:72749 <> app_cancel_l
R72782:72785 Poly <> list ind
R72787:72787 IndProp <> X var
R72816:72818 Coq.Init.Logic <> :type_scope:x_'='_x not
R72814:72815 IndProp <> l1 var
R72819:72820 IndProp <> l2 var
R72800:72802 Coq.Init.Logic <> :type_scope:x_'='_x not
R72794:72797 Poly <> ::x_'++'_x not
R72793:72793 IndProp <> l var
R72798:72799 IndProp <> l1 var
R72804:72807 Poly <> ::x_'++'_x not
R72803:72803 IndProp <> l var
R72808:72809 IndProp <> l2 var
prf 72939:72947 <> app_add_l
R72980:72983 Poly <> list ind
R72985:72985 IndProp <> X var
R73009:73011 Coq.Init.Logic <> :type_scope:x_'='_x not
R73003:73006 Poly <> ::x_'++'_x not
R73002:73002 IndProp <> l var
R73007:73008 IndProp <> l1 var
R73013:73016 Poly <> ::x_'++'_x not
R73012:73012 IndProp <> l var
R73017:73018 IndProp <> l2 var
R72993:72995 Coq.Init.Logic <> :type_scope:x_'='_x not
R72991:72992 IndProp <> l1 var
R72996:72997 IndProp <> l2 var
prf 73129:73140 <> cons_tradict
R73165:73165 IndProp <> X var
R73172:73175 Poly <> list ind
R73177:73177 IndProp <> X var
R73197:73201 Coq.Init.Logic <> False ind
R73184:73186 Coq.Init.Logic <> :type_scope:x_'='_x not
R73183:73183 IndProp <> l var
R73188:73191 Poly <> ::x_'::'_x not
R73187:73187 IndProp <> x var
R73192:73192 IndProp <> l var
prf 73293:73302 <> shadow_nat
R73319:73321 Coq.Init.Datatypes <> nat ind
R73341:73343 Coq.Init.Logic <> :type_scope:x_'='_x not
R73340:73340 IndProp <> m var
R73328:73330 Coq.Init.Logic <> :type_scope:x_'='_x not
R73327:73327 IndProp <> n var
R73332:73334 Basics <> :nat_scope:x_'+'_x not
R73331:73331 IndProp <> m var
R73335:73335 IndProp <> n var
R73385:73397 Coq.Arith.Plus <> plus_0_r def
R73385:73397 Coq.Arith.Plus <> plus_0_r def
R73434:73442 Induction <> plus_n_Sm prfax
R73434:73442 Induction <> plus_n_Sm prfax
prf 73494:73504 <> length_is_0
R73531:73534 Poly <> list ind
R73536:73536 IndProp <> X var
R73559:73561 Coq.Init.Logic <> :type_scope:x_'='_x not
R73558:73558 IndProp <> l var
R73562:73563 Poly <> ::'['_']' not
R73550:73552 Coq.Init.Logic <> :type_scope:x_'='_x not
R73542:73547 Poly <> length def
R73549:73549 IndProp <> l var
prf 73642:73652 <> shadow_list
R73682:73685 Poly <> list ind
R73687:73687 IndProp <> X var
R73712:73714 Coq.Init.Logic <> :type_scope:x_'='_x not
R73709:73711 IndProp <> sha var
R73715:73717 Poly <> nil constr
R73694:73696 Coq.Init.Logic <> :type_scope:x_'='_x not
R73693:73693 IndProp <> l var
R73700:73703 Poly <> ::x_'++'_x not
R73697:73699 IndProp <> sha var
R73704:73704 IndProp <> l var
R73753:73755 Coq.Init.Logic <> :type_scope:x_'='_x not
R73745:73750 Poly <> length def
R73756:73761 Poly <> length def
R73767:73770 Poly <> ::x_'++'_x not
R73753:73755 Coq.Init.Logic <> :type_scope:x_'='_x not
R73745:73750 Poly <> length def
R73756:73761 Poly <> length def
R73767:73770 Poly <> ::x_'++'_x not
R73810:73819 Poly <> app_length thm
R73810:73819 Poly <> app_length thm
R73836:73845 IndProp <> shadow_nat thm
R73836:73845 IndProp <> shadow_nat thm
R73860:73870 IndProp <> length_is_0 thm
R73860:73870 IndProp <> length_is_0 thm
prf 73958:73969 <> app_cancel_r
R74001:74004 Poly <> list ind
R74006:74006 IndProp <> X var
R74035:74037 Coq.Init.Logic <> :type_scope:x_'='_x not
R74033:74034 IndProp <> l1 var
R74038:74039 IndProp <> l2 var
R74019:74021 Coq.Init.Logic <> :type_scope:x_'='_x not
R74014:74017 Poly <> ::x_'++'_x not
R74012:74013 IndProp <> l1 var
R74018:74018 IndProp <> l var
R74024:74027 Poly <> ::x_'++'_x not
R74022:74023 IndProp <> l2 var
R74028:74028 IndProp <> l var
R74092:74102 IndProp <> shadow_list thm
R74092:74102 IndProp <> shadow_list thm
R74184:74187 Poly <> ::x_'::'_x not
R74190:74193 Poly <> ::x_'++'_x not
R74203:74203 Poly <> ::x_'++'_x not
R74211:74215 Poly <> ::x_'++'_x not
R74205:74208 Poly <> ::x_'::'_x not
R74203:74203 Poly <> ::x_'++'_x not
R74211:74215 Poly <> ::x_'++'_x not
R74205:74208 Poly <> ::x_'::'_x not
R74184:74187 Poly <> ::x_'::'_x not
R74190:74193 Poly <> ::x_'++'_x not
R74233:74243 IndProp <> shadow_list thm
R74233:74243 IndProp <> shadow_list thm
R74290:74292 Coq.Init.Logic <> :type_scope:x_'='_x not
R74290:74292 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 74351:74359 <> app_add_r
R74391:74394 Poly <> list ind
R74396:74396 IndProp <> X var
R74420:74422 Coq.Init.Logic <> :type_scope:x_'='_x not
R74415:74418 Poly <> ::x_'++'_x not
R74413:74414 IndProp <> l1 var
R74419:74419 IndProp <> l var
R74425:74428 Poly <> ::x_'++'_x not
R74423:74424 IndProp <> l2 var
R74429:74429 IndProp <> l var
R74404:74406 Coq.Init.Logic <> :type_scope:x_'='_x not
R74402:74403 IndProp <> l1 var
R74407:74408 IndProp <> l2 var
prf 74544:74554 <> app_swap_lr
R74587:74590 Poly <> list ind
R74592:74592 IndProp <> X var
R74626:74628 Coq.Init.Logic <> :type_scope:x_'='_x not
R74621:74624 Poly <> ::x_'++'_x not
R74619:74620 IndProp <> l1 var
R74625:74625 IndProp <> l var
R74631:74634 Poly <> ::x_'++'_x not
R74629:74630 IndProp <> l2 var
R74635:74635 IndProp <> l var
R74605:74607 Coq.Init.Logic <> :type_scope:x_'='_x not
R74599:74602 Poly <> ::x_'++'_x not
R74598:74598 IndProp <> l var
R74603:74604 IndProp <> l1 var
R74609:74612 Poly <> ::x_'++'_x not
R74608:74608 IndProp <> l var
R74613:74614 IndProp <> l2 var
R74659:74670 IndProp <> app_cancel_l thm
R74659:74670 IndProp <> app_cancel_l thm
prf 74712:74722 <> app_swap_rl
R74755:74758 Poly <> list ind
R74760:74760 IndProp <> X var
R74794:74796 Coq.Init.Logic <> :type_scope:x_'='_x not
R74788:74791 Poly <> ::x_'++'_x not
R74787:74787 IndProp <> l var
R74792:74793 IndProp <> l1 var
R74798:74801 Poly <> ::x_'++'_x not
R74797:74797 IndProp <> l var
R74802:74803 IndProp <> l2 var
R74773:74775 Coq.Init.Logic <> :type_scope:x_'='_x not
R74768:74771 Poly <> ::x_'++'_x not
R74766:74767 IndProp <> l1 var
R74772:74772 IndProp <> l var
R74778:74781 Poly <> ::x_'++'_x not
R74776:74777 IndProp <> l2 var
R74782:74782 IndProp <> l var
R74829:74840 IndProp <> app_cancel_r thm
R74829:74840 IndProp <> app_cancel_r thm
prf 74882:74899 <> nth_error_all_none
R74926:74929 Poly <> list ind
R74931:74931 IndProp <> X var
R74982:74984 Coq.Init.Logic <> :type_scope:x_'='_x not
R74981:74981 IndProp <> l var
R74985:74986 Poly <> ::'['_']' not
R74950:74952 Coq.Init.Datatypes <> nat ind
R74969:74971 Coq.Init.Logic <> :type_scope:x_'='_x not
R74956:74964 Poly <> nth_error def
R74968:74968 IndProp <> n var
R74966:74966 IndProp <> l var
R74972:74975 Poly <> None constr
R75025:75027 Coq.Init.Logic <> :type_scope:x_'='_x not
R75012:75020 Poly <> nth_error def
R75028:75031 Poly <> None constr
R75025:75027 Coq.Init.Logic <> :type_scope:x_'='_x not
R75012:75020 Poly <> nth_error def
R75028:75031 Poly <> None constr
prf 75142:75156 <> nth_error_equal
R75187:75190 Poly <> list ind
R75192:75192 IndProp <> X var
R75257:75259 Coq.Init.Logic <> :type_scope:x_'='_x not
R75255:75256 IndProp <> l1 var
R75260:75261 IndProp <> l2 var
R75211:75213 Coq.Init.Datatypes <> nat ind
R75231:75233 Coq.Init.Logic <> :type_scope:x_'='_x not
R75217:75225 Poly <> nth_error def
R75230:75230 IndProp <> n var
R75227:75228 IndProp <> l1 var
R75234:75242 Poly <> nth_error def
R75247:75247 IndProp <> n var
R75244:75245 IndProp <> l2 var
R75347:75364 IndProp <> nth_error_all_none thm
R75347:75364 IndProp <> nth_error_all_none thm
R75425:75442 IndProp <> nth_error_all_none thm
R75425:75442 IndProp <> nth_error_all_none thm
R75507:75509 Coq.Init.Logic <> :type_scope:x_'='_x not
R75485:75493 Poly <> nth_error def
R75498:75501 Poly <> ::x_'::'_x not
R75510:75518 Poly <> nth_error def
R75522:75525 Poly <> ::x_'::'_x not
R75507:75509 Coq.Init.Logic <> :type_scope:x_'='_x not
R75485:75493 Poly <> nth_error def
R75498:75501 Poly <> ::x_'::'_x not
R75510:75518 Poly <> nth_error def
R75522:75525 Poly <> ::x_'::'_x not
R75608:75610 Coq.Init.Logic <> :type_scope:x_'='_x not
R75608:75610 Coq.Init.Logic <> :type_scope:x_'='_x not
R75646:75659 Tactics <> nth_error_cons thm
R75646:75659 Tactics <> nth_error_cons thm
R75684:75697 Tactics <> nth_error_cons thm
R75684:75697 Tactics <> nth_error_cons thm
def 75840:75849 <> last_error
R75866:75869 Poly <> list ind
R75871:75871 IndProp <> X var
R75876:75881 Poly <> option ind
R75883:75883 IndProp <> X var
R75894:75894 IndProp <> l var
R75905:75906 Poly <> ::'['_']' not
R75911:75914 Poly <> None constr
R75923:75926 Poly <> ::x_'::'_x not
R75953:75954 Poly <> ::'['_']' not
R75959:75962 Poly <> Some constr
R75976:75979 Poly <> ::x_'::'_x not
R75987:75996 IndProp <> last_error def
def 76022:76035 <> last_error_ex1
R76060:76062 Coq.Init.Logic <> :type_scope:x_'='_x not
R76039:76048 IndProp <> last_error def
R76050:76050 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76052:76053 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76055:76055 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76057:76057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76059:76059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76063:76066 Poly <> Some constr
def 76097:76110 <> last_error_ex2
R76128:76130 Coq.Init.Logic <> :type_scope:x_'='_x not
R76114:76123 IndProp <> last_error def
R76125:76125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76127:76127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76131:76134 Poly <> Some constr
def 76165:76178 <> last_error_ex3
R76201:76203 Coq.Init.Logic <> :type_scope:x_'='_x not
R76183:76192 IndProp <> last_error def
R76198:76200 Poly <> nil constr
R76194:76196 Coq.Init.Datatypes <> nat ind
R76204:76207 Poly <> None constr
prf 76237:76248 <> last_is_last
R76275:76278 Poly <> list ind
R76280:76280 IndProp <> X var
R76321:76323 Coq.Init.Logic <> :type_scope:x_'='_x not
R76309:76318 IndProp <> last_error def
R76320:76320 IndProp <> l var
R76324:76333 IndProp <> last_error def
R76338:76340 Poly <> ::x_'++'_x not
R76336:76337 IndProp <> l' var
R76341:76341 IndProp <> l var
R76287:76290 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R76286:76286 IndProp <> l var
R76291:76292 Poly <> ::'['_']' not
R76424:76427 Poly <> ::x_'++'_x not
R76424:76427 Poly <> ::x_'++'_x not
R76452:76461 IndProp <> app_is_nil thm
R76452:76461 IndProp <> app_is_nil thm
R76519:76519 Poly <> ::x_'++'_x not
R76527:76531 Poly <> ::x_'++'_x not
R76521:76524 Poly <> ::x_'::'_x not
R76542:76545 Poly <> ::x_'::'_x not
R76548:76551 Poly <> ::x_'++'_x not
R76542:76545 Poly <> ::x_'::'_x not
R76548:76551 Poly <> ::x_'++'_x not
R76519:76519 Poly <> ::x_'++'_x not
R76527:76531 Poly <> ::x_'++'_x not
R76521:76524 Poly <> ::x_'::'_x not
prf 76606:76619 <> nth_error_last
R76645:76648 Poly <> list ind
R76650:76650 IndProp <> X var
R76669:76671 Coq.Init.Datatypes <> nat ind
R76709:76711 Coq.Init.Logic <> :type_scope:x_'='_x not
R76696:76704 Poly <> nth_error def
R76708:76708 IndProp <> n var
R76706:76706 IndProp <> l var
R76712:76721 IndProp <> last_error def
R76723:76723 IndProp <> l var
R76678:76680 Coq.Init.Logic <> :type_scope:x_'='_x not
R76675:76675 Coq.Init.Datatypes <> S constr
R76677:76677 IndProp <> n var
R76681:76686 Poly <> length def
R76688:76688 IndProp <> l var
R76831:76841 IndProp <> length_is_0 thm
R76831:76841 IndProp <> length_is_0 thm
R76916:76924 Poly <> nth_error def
R76936:76936 Coq.Init.Datatypes <> S constr
R76928:76931 Poly <> ::x_'::'_x not
R76948:76956 Poly <> nth_error def
R76948:76956 Poly <> nth_error def
R76916:76924 Poly <> nth_error def
R76936:76936 Coq.Init.Datatypes <> S constr
R76928:76931 Poly <> ::x_'::'_x not
R76978:76981 Poly <> ::x_'::'_x not
R76994:76997 Poly <> ::x_'++'_x not
R76991:76991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76993:76993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76994:76997 Poly <> ::x_'++'_x not
R76991:76991 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76993:76993 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R76978:76981 Poly <> ::x_'::'_x not
R77017:77028 IndProp <> last_is_last thm
R77017:77028 IndProp <> last_is_last thm
prf 77133:77145 <> pal_nth_error
R77172:77175 Poly <> list ind
R77177:77177 IndProp <> X var
R77244:77246 Coq.Init.Logic <> :type_scope:x_'='_x not
R77231:77239 Poly <> nth_error def
R77243:77243 IndProp <> n var
R77241:77241 IndProp <> l var
R77247:77255 Poly <> nth_error def
R77259:77259 IndProp <> m var
R77257:77257 IndProp <> l var
R77214:77216 Coq.Init.Logic <> :type_scope:x_'='_x not
R77205:77205 Coq.Init.Datatypes <> S constr
R77209:77211 Basics <> :nat_scope:x_'+'_x not
R77208:77208 IndProp <> n var
R77212:77212 IndProp <> m var
R77217:77222 Poly <> length def
R77224:77224 IndProp <> l var
R77183:77185 IndProp <> pal ind
R77187:77187 IndProp <> l var
R77535:77548 IndProp <> nth_error_last thm
R77535:77548 IndProp <> nth_error_last thm
R77566:77577 IndProp <> last_is_last thm
R77566:77577 IndProp <> last_is_last thm
R77634:77642 Induction <> plus_comm prfax
R77634:77642 Induction <> plus_comm prfax
R77690:77703 IndProp <> nth_error_last thm
R77690:77703 IndProp <> nth_error_last thm
R77721:77732 IndProp <> last_is_last thm
R77721:77732 IndProp <> last_is_last thm
R77796:77804 Induction <> plus_comm prfax
R77796:77804 Induction <> plus_comm prfax
R77825:77834 Poly <> app_length thm
R77825:77834 Poly <> app_length thm
R77856:77864 Induction <> plus_comm prfax
R77879:77884 Poly <> length def
R77886:77886 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R77888:77888 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R77867:77872 Poly <> length def
R77856:77864 Induction <> plus_comm prfax
R77879:77884 Poly <> length def
R77886:77886 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R77888:77888 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R77867:77872 Poly <> length def
R77981:77982 IndProp <> PX var
R78046:78048 Coq.Init.Logic <> :type_scope:x_'='_x not
R78021:78029 Poly <> nth_error def
R78044:78045 IndProp <> pn var
R78034:78037 Poly <> ::x_'++'_x not
R78032:78033 IndProp <> pl var
R78038:78038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78041:78041 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78039:78040 IndProp <> px var
R78049:78057 Poly <> nth_error def
R78062:78063 IndProp <> pn var
R78059:78060 IndProp <> pl var
R78000:78002 IndProp <> ::x_'<'_x not
R77998:77999 IndProp <> pn var
R78003:78008 Poly <> length def
R78010:78011 IndProp <> pl var
R77981:77982 IndProp <> PX var
R78046:78048 Coq.Init.Logic <> :type_scope:x_'='_x not
R78021:78029 Poly <> nth_error def
R78044:78045 IndProp <> pn var
R78034:78037 Poly <> ::x_'++'_x not
R78032:78033 IndProp <> pl var
R78038:78038 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78041:78041 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78039:78040 IndProp <> px var
R78049:78057 Poly <> nth_error def
R78062:78063 IndProp <> pn var
R78059:78060 IndProp <> pl var
R78000:78002 IndProp <> ::x_'<'_x not
R77998:77999 IndProp <> pn var
R78003:78008 Poly <> length def
R78010:78011 IndProp <> pl var
R78198:78199 IndProp <> lt def
R78222:78237 IndProp <> Sn_le_Sm__n_le_m thm
R78222:78237 IndProp <> Sn_le_Sm__n_le_m thm
R78273:78274 IndProp <> lt def
R78339:78347 Induction <> plus_comm prfax
R78339:78347 Induction <> plus_comm prfax
R78369:78370 IndProp <> lt def
R78394:78409 IndProp <> n_le_m__Sn_le_Sm thm
R78394:78409 IndProp <> n_le_m__Sn_le_Sm thm
R78422:78430 IndProp <> le_plus_l thm
R78422:78430 IndProp <> le_plus_l thm
R78448:78449 IndProp <> lt def
R78475:78483 Induction <> plus_comm prfax
R78475:78483 Induction <> plus_comm prfax
R78496:78511 IndProp <> n_le_m__Sn_le_Sm thm
R78496:78511 IndProp <> n_le_m__Sn_le_Sm thm
R78520:78528 IndProp <> le_plus_l thm
R78520:78528 IndProp <> le_plus_l thm
prf 78547:78558 <> pal_sandwich
R78587:78590 Poly <> list ind
R78592:78592 IndProp <> T var
R78608:78610 IndProp <> pal ind
R78614:78617 Poly <> ::x_'++'_x not
R78613:78613 IndProp <> l var
R78620:78624 Poly <> ::x_'++'_x not
R78630:78630 Poly <> ::x_'++'_x not
R78618:78619 IndProp <> l' var
R78625:78627 Poly <> rev def
R78629:78629 IndProp <> l var
R78598:78600 IndProp <> pal ind
R78602:78603 IndProp <> l' var
R78683:78691 Poly <> app_nil_r thm
R78683:78691 Poly <> app_nil_r thm
R78721:78724 Poly <> ::x_'::'_x not
R78726:78729 Poly <> ::x_'++'_x not
R78732:78735 Poly <> ::x_'++'_x not
R78741:78744 Poly <> ::x_'++'_x not
R78736:78738 Poly <> rev def
R78745:78745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78747:78747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78762:78765 Poly <> ::x_'++'_x not
R78759:78759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78761:78761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78766:78766 Poly <> ::x_'++'_x not
R78783:78787 Poly <> ::x_'++'_x not
R78768:78771 Poly <> ::x_'++'_x not
R78774:78777 Poly <> ::x_'++'_x not
R78778:78780 Poly <> rev def
R78788:78788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78790:78790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78762:78765 Poly <> ::x_'++'_x not
R78759:78759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78761:78761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78766:78766 Poly <> ::x_'++'_x not
R78783:78787 Poly <> ::x_'++'_x not
R78768:78771 Poly <> ::x_'++'_x not
R78774:78777 Poly <> ::x_'++'_x not
R78778:78780 Poly <> rev def
R78788:78788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78790:78790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78721:78724 Poly <> ::x_'::'_x not
R78726:78729 Poly <> ::x_'++'_x not
R78732:78735 Poly <> ::x_'++'_x not
R78741:78744 Poly <> ::x_'++'_x not
R78736:78738 Poly <> rev def
R78745:78745 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78747:78747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R78802:78808 IndProp <> palrule constr
R78802:78808 IndProp <> palrule constr
R78841:78849 Poly <> app_assoc thm
R78841:78849 Poly <> app_assoc thm
R78863:78871 Poly <> app_assoc thm
R78863:78871 Poly <> app_assoc thm
def 78942:78950 <> peel_head
R78966:78969 Poly <> list ind
R78971:78971 IndProp <> X var
R78976:78979 Poly <> list ind
R78981:78981 IndProp <> X var
R78992:78992 IndProp <> l var
R79003:79004 Poly <> ::'['_']' not
R79009:79010 Poly <> ::'['_']' not
R79018:79021 Poly <> ::x_'::'_x not
def 79046:79054 <> peel_last
R79070:79073 Poly <> list ind
R79075:79075 IndProp <> X var
R79080:79083 Poly <> list ind
R79085:79085 IndProp <> X var
R79096:79096 IndProp <> l var
R79107:79108 Poly <> ::'['_']' not
R79113:79114 Poly <> ::'['_']' not
R79122:79125 Poly <> ::x_'::'_x not
R79153:79154 Poly <> ::'['_']' not
R79159:79160 Poly <> ::'['_']' not
R79169:79172 Poly <> ::x_'::'_x not
R79182:79186 Poly <> ::x_'::'_x not
R79199:79199 Poly <> ::x_'::'_x not
R79187:79195 IndProp <> peel_last def
def 79226:79229 <> peel
R79245:79248 Poly <> list ind
R79250:79250 IndProp <> X var
R79255:79258 Poly <> list ind
R79260:79260 IndProp <> X var
R79268:79276 IndProp <> peel_last def
R79279:79287 IndProp <> peel_head def
R79289:79289 IndProp <> l var
def 79336:79343 <> peel_ex1
R79363:79365 Coq.Init.Logic <> :type_scope:x_'='_x not
R79347:79350 IndProp <> peel def
R79352:79352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79354:79354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79356:79356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79358:79358 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79360:79360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79362:79362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79366:79366 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79368:79368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79370:79370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79372:79372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 79401:79408 <> peel_ex2
R79424:79426 Coq.Init.Logic <> :type_scope:x_'='_x not
R79412:79415 IndProp <> peel def
R79417:79417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79419:79419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79421:79421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79423:79423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79427:79427 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79429:79429 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 79458:79465 <> peel_ex3
R79477:79479 Coq.Init.Logic <> :type_scope:x_'='_x not
R79469:79472 IndProp <> peel def
R79474:79474 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79476:79476 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79480:79481 Poly <> ::'['_']' not
def 79544:79553 <> do_n_times
R79576:79576 IndProp <> X var
R79571:79571 IndProp <> X var
R79584:79586 Coq.Init.Datatypes <> nat ind
R79594:79594 IndProp <> X var
R79599:79599 IndProp <> X var
R79612:79612 IndProp <> n var
R79628:79628 IndProp <> x var
R79634:79634 Coq.Init.Datatypes <> S constr
R79642:79651 IndProp <> do_n_times def
R79659:79659 IndProp <> f var
R79661:79661 IndProp <> x var
R79653:79653 IndProp <> f var
def 79678:79682 <> doex1
R79709:79711 Coq.Init.Logic <> :type_scope:x_'='_x not
R79686:79695 IndProp <> do_n_times def
R79698:79701 Coq.Init.Peano <> plus def
def 79742:79746 <> doex2
R79775:79777 Coq.Init.Logic <> :type_scope:x_'='_x not
R79750:79759 IndProp <> do_n_times def
R79772:79772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79774:79774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79762:79765 Poly <> cons constr
R79778:79778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79780:79780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79782:79782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R79784:79784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 79864:79875 <> fstl_correct
R79903:79906 Poly <> list ind
R79908:79908 IndProp <> X var
R79917:79920 Poly <> list ind
R79922:79922 IndProp <> Y var
R79973:79975 Coq.Init.Logic <> :type_scope:x_'='_x not
R79953:79956 Poly <> fstl def
R79959:79965 Poly <> combine def
R79970:79971 IndProp <> l2 var
R79967:79968 IndProp <> l1 var
R79976:79977 IndProp <> l1 var
R79937:79939 Coq.Init.Logic <> :type_scope:x_'='_x not
R79928:79933 Poly <> length def
R79935:79936 IndProp <> l1 var
R79940:79945 Poly <> length def
R79947:79948 IndProp <> l2 var
R80121:80123 Coq.Init.Logic <> :type_scope:x_'='_x not
R80101:80104 Poly <> fstl def
R80107:80113 Poly <> combine def
R80121:80123 Coq.Init.Logic <> :type_scope:x_'='_x not
R80101:80104 Poly <> fstl def
R80107:80113 Poly <> combine def
prf 80223:80234 <> sndl_correct
R80263:80266 Poly <> list ind
R80268:80268 IndProp <> X var
R80277:80280 Poly <> list ind
R80282:80282 IndProp <> Y var
R80333:80335 Coq.Init.Logic <> :type_scope:x_'='_x not
R80313:80316 Poly <> sndl def
R80319:80325 Poly <> combine def
R80330:80331 IndProp <> l2 var
R80327:80328 IndProp <> l1 var
R80336:80337 IndProp <> l2 var
R80297:80299 Coq.Init.Logic <> :type_scope:x_'='_x not
R80288:80293 Poly <> length def
R80295:80296 IndProp <> l1 var
R80300:80305 Poly <> length def
R80307:80308 IndProp <> l2 var
R80396:80406 IndProp <> length_is_0 thm
R80396:80406 IndProp <> length_is_0 thm
R80521:80523 Coq.Init.Logic <> :type_scope:x_'='_x not
R80501:80504 Poly <> sndl def
R80507:80513 Poly <> combine def
R80521:80523 Coq.Init.Logic <> :type_scope:x_'='_x not
R80501:80504 Poly <> sndl def
R80507:80513 Poly <> combine def
prf 80591:80602 <> rev_pres_len
R80627:80630 Poly <> list ind
R80632:80632 IndProp <> T var
R80652:80654 Coq.Init.Logic <> :type_scope:x_'='_x not
R80638:80643 Poly <> length def
R80646:80648 Poly <> rev def
R80650:80650 IndProp <> l var
R80655:80660 Poly <> length def
R80662:80662 IndProp <> l var
R80731:80740 Poly <> app_length thm
R80731:80740 Poly <> app_length thm
R80751:80759 Induction <> plus_comm prfax
R80751:80759 Induction <> plus_comm prfax
prf 80804:80819 <> combine_pres_len
R80847:80850 Poly <> list ind
R80852:80852 IndProp <> T var
R80860:80863 Poly <> list ind
R80865:80865 IndProp <> Y var
R80918:80920 Coq.Init.Logic <> :type_scope:x_'='_x not
R80896:80901 Poly <> length def
R80904:80910 Poly <> combine def
R80915:80916 IndProp <> l2 var
R80912:80913 IndProp <> l1 var
R80921:80926 Poly <> length def
R80928:80929 IndProp <> l1 var
R80880:80882 Coq.Init.Logic <> :type_scope:x_'='_x not
R80871:80876 Poly <> length def
R80878:80879 IndProp <> l1 var
R80883:80888 Poly <> length def
R80890:80891 IndProp <> l2 var
R81042:81044 Coq.Init.Logic <> :type_scope:x_'='_x not
R81020:81025 Poly <> length def
R81028:81034 Poly <> combine def
R81045:81050 Poly <> length def
R81042:81044 Coq.Init.Logic <> :type_scope:x_'='_x not
R81020:81025 Poly <> length def
R81028:81034 Poly <> combine def
R81045:81050 Poly <> length def
prf 81128:81137 <> l_is_rev_l
R81162:81165 Poly <> list ind
R81167:81167 IndProp <> T var
R81174:81174 IndProp <> T var
R81206:81208 Coq.Init.Logic <> :type_scope:x_'='_x not
R81194:81197 Poly <> ::x_'::'_x not
R81193:81193 IndProp <> t var
R81199:81202 Poly <> ::x_'++'_x not
R81198:81198 IndProp <> l var
R81203:81203 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R81205:81205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R81204:81204 IndProp <> t var
R81209:81211 Poly <> rev def
R81215:81218 Poly <> ::x_'::'_x not
R81214:81214 IndProp <> t var
R81220:81223 Poly <> ::x_'++'_x not
R81219:81219 IndProp <> l var
R81224:81224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R81226:81226 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R81225:81225 IndProp <> t var
R81181:81183 Coq.Init.Logic <> :type_scope:x_'='_x not
R81180:81180 IndProp <> l var
R81184:81186 Poly <> rev def
R81188:81188 IndProp <> l var
R81260:81272 Poly <> rev_app_distr thm
R81260:81272 Poly <> rev_app_distr thm
prf 81316:81327 <> l_is_rev_l_2
R81352:81355 Poly <> list ind
R81357:81357 IndProp <> T var
R81364:81364 IndProp <> T var
R81383:81385 IndProp <> pal ind
R81389:81392 Poly <> ::x_'++'_x not
R81388:81388 IndProp <> l var
R81393:81393 IndProp <> l var
R81371:81373 Coq.Init.Logic <> :type_scope:x_'='_x not
R81370:81370 IndProp <> l var
R81374:81376 Poly <> rev def
R81378:81378 IndProp <> l var
R81422:81425 Poly <> ::x_'++'_x not
R81436:81439 Poly <> ::x_'++'_x not
R81440:81442 Poly <> rev def
R81436:81439 Poly <> ::x_'++'_x not
R81440:81442 Poly <> rev def
R81422:81425 Poly <> ::x_'++'_x not
R81454:81464 IndProp <> pal_app_rev thm
R81454:81464 IndProp <> pal_app_rev thm
prf 81501:81504 <> yolo
R81530:81533 Poly <> list ind
R81535:81535 IndProp <> T var
R81542:81542 IndProp <> T var
R81557:81559 IndProp <> pal ind
R81562:81564 Poly <> rev def
R81566:81566 IndProp <> l var
R81548:81550 IndProp <> pal ind
R81552:81552 IndProp <> l var
R81613:81618 IndProp <> palnil constr
R81613:81618 IndProp <> palnil constr
R81636:81641 IndProp <> palone constr
R81636:81641 IndProp <> palone constr
R81661:81673 Poly <> rev_app_distr thm
R81661:81673 Poly <> rev_app_distr thm
R81689:81695 IndProp <> palrule constr
R81689:81695 IndProp <> palrule constr
prf 81718:81728 <> cons_to_app
R81754:81757 Poly <> list ind
R81759:81759 IndProp <> T var
R81766:81766 IndProp <> T var
R81778:81780 Coq.Init.Logic <> :type_scope:x_'='_x not
R81773:81776 Poly <> ::x_'::'_x not
R81772:81772 IndProp <> t var
R81777:81777 IndProp <> l var
R81784:81787 Poly <> ::x_'++'_x not
R81781:81781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R81783:81783 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R81782:81782 IndProp <> t var
R81788:81788 IndProp <> l var
prf 81825:81832 <> rev_dual
R81857:81860 Poly <> list ind
R81862:81862 IndProp <> T var
R81887:81889 Coq.Init.Logic <> :type_scope:x_'='_x not
R81882:81885 Poly <> ::x_'++'_x not
R81881:81881 IndProp <> l var
R81886:81886 IndProp <> l var
R81890:81892 Poly <> rev def
R81896:81899 Poly <> ::x_'++'_x not
R81895:81895 IndProp <> l var
R81900:81900 IndProp <> l var
R81869:81871 Coq.Init.Logic <> :type_scope:x_'='_x not
R81868:81868 IndProp <> l var
R81872:81874 Poly <> rev def
R81876:81876 IndProp <> l var
R81920:81932 Poly <> rev_app_distr thm
R81920:81932 Poly <> rev_app_distr thm
prf 81969:81980 <> pal_app_rev2
R82005:82008 Poly <> list ind
R82010:82010 IndProp <> T var
R82017:82017 IndProp <> T var
R82023:82025 IndProp <> pal ind
R82029:82032 Poly <> ::x_'++'_x not
R82028:82028 IndProp <> l var
R82036:82039 Poly <> ::x_'++'_x not
R82033:82033 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82035:82035 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82034:82034 IndProp <> t var
R82040:82042 Poly <> rev def
R82044:82044 IndProp <> l var
R82091:82096 IndProp <> palone constr
R82091:82096 IndProp <> palone constr
R82117:82127 IndProp <> cons_to_app thm
R82137:82140 Poly <> ::x_'++'_x not
R82132:82134 Poly <> rev def
R82141:82141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82143:82143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82117:82127 IndProp <> cons_to_app thm
R82137:82140 Poly <> ::x_'++'_x not
R82132:82134 Poly <> rev def
R82141:82141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82143:82143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82156:82166 IndProp <> cons_to_app thm
R82156:82166 IndProp <> cons_to_app thm
R82182:82202 IndProp Pumping some_dumb_app thm
R82182:82202 IndProp Pumping some_dumb_app thm
R82223:82229 IndProp <> palrule constr
R82223:82229 IndProp <> palrule constr
R82240:82250 IndProp <> cons_to_app thm
R82240:82250 IndProp <> cons_to_app thm
prf 82278:82291 <> last_error_app
R82316:82319 Poly <> list ind
R82321:82321 IndProp <> T var
R82328:82328 IndProp <> T var
R82355:82357 Coq.Init.Logic <> :type_scope:x_'='_x not
R82334:82343 IndProp <> last_error def
R82347:82350 Poly <> ::x_'++'_x not
R82346:82346 IndProp <> l var
R82351:82351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82353:82353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82352:82352 IndProp <> t var
R82358:82361 Poly <> Some constr
R82363:82363 IndProp <> t var
R82392:82403 IndProp <> last_is_last thm
R82392:82403 IndProp <> last_is_last thm
prf 82463:82476 <> pal_break_down
R82501:82504 Poly <> list ind
R82506:82506 IndProp <> T var
R82513:82513 IndProp <> T var
R82542:82544 IndProp <> pal ind
R82546:82546 IndProp <> l var
R82519:82521 IndProp <> pal ind
R82525:82528 Poly <> ::x_'::'_x not
R82524:82524 IndProp <> t var
R82530:82533 Poly <> ::x_'++'_x not
R82529:82529 IndProp <> l var
R82534:82534 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82536:82536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82535:82535 IndProp <> t var
R82599:82604 IndProp <> palnil constr
R82599:82604 IndProp <> palnil constr
R82631:82642 IndProp <> app_cancel_r thm
R82631:82642 IndProp <> app_cancel_r thm
prf 82687:82704 <> l_is_rev_breakdown
R82729:82732 Poly <> list ind
R82734:82734 IndProp <> T var
R82741:82741 IndProp <> T var
R82787:82789 Coq.Init.Logic <> :type_scope:x_'='_x not
R82786:82786 IndProp <> l var
R82790:82792 Poly <> rev def
R82794:82794 IndProp <> l var
R82760:82762 Coq.Init.Logic <> :type_scope:x_'='_x not
R82748:82751 Poly <> ::x_'::'_x not
R82747:82747 IndProp <> t var
R82753:82756 Poly <> ::x_'++'_x not
R82752:82752 IndProp <> l var
R82757:82757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82759:82759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82758:82758 IndProp <> t var
R82763:82765 Poly <> rev def
R82769:82772 Poly <> ::x_'::'_x not
R82768:82768 IndProp <> t var
R82774:82777 Poly <> ::x_'++'_x not
R82773:82773 IndProp <> l var
R82778:82778 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82780:82780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R82779:82779 IndProp <> t var
R82832:82842 IndProp <> cons_to_app thm
R82832:82842 IndProp <> cons_to_app thm
R82858:82866 Poly <> app_assoc thm
R82858:82866 Poly <> app_assoc thm
R82880:82891 IndProp <> app_cancel_r thm
R82880:82891 IndProp <> app_cancel_r thm
R82919:82931 Poly <> rev_app_distr thm
R82919:82931 Poly <> rev_app_distr thm
def 83089:83091 <> ltb
R83099:83101 Coq.Init.Datatypes <> nat ind
R83106:83109 Basics <> bool ind
R83114:83116 Basics <> leb def
R83124:83124 IndProp <> m var
R83119:83119 Coq.Init.Datatypes <> S constr
R83121:83121 IndProp <> n var
def 83207:83213 <> balance
R83228:83230 Coq.Init.Datatypes <> nat ind
R83235:83237 Coq.Init.Datatypes <> nat ind
R83251:83253 IndProp <> ltb def
R83261:83263 IndProp <> big var
R83255:83259 IndProp <> small var
R83277:83281 Basics <> false constr
R83294:83297 Basics <> true constr
R83308:83310 IndProp <> big var
R83340:83340 Coq.Init.Datatypes <> S constr
R83350:83350 Coq.Init.Datatypes <> S constr
R83353:83359 IndProp <> balance def
R83366:83370 IndProp <> small var
R83395:83401 IndProp <> balance def
R83418:83424 IndProp <> balance def
R83441:83447 IndProp <> balance def
R83464:83470 IndProp <> balance def
R83487:83493 IndProp <> balance def
prf 83510:83514 <> ltb_n
R83535:83537 Coq.Init.Logic <> :type_scope:x_'='_x not
R83528:83530 IndProp <> ltb def
R83534:83534 IndProp <> n var
R83532:83532 IndProp <> n var
R83538:83542 Basics <> false constr
prf 83593:83603 <> ltb_correct
R83635:83637 Coq.Init.Logic <> :type_scope:x_'='_x not
R83628:83630 IndProp <> ltb def
R83634:83634 IndProp <> m var
R83632:83632 IndProp <> n var
R83638:83641 Basics <> true constr
R83620:83622 IndProp <> ::x_'<'_x not
R83619:83619 IndProp <> n var
R83623:83623 IndProp <> m var
R83666:83667 IndProp <> lt def
R83682:83684 IndProp <> ltb def
R83693:83703 IndProp <> leb_correct thm
R83693:83703 IndProp <> leb_correct thm
prf 83726:83737 <> ltb_complete
R83772:83774 IndProp <> ::x_'<'_x not
R83771:83771 IndProp <> n var
R83775:83775 IndProp <> m var
R83760:83762 Coq.Init.Logic <> :type_scope:x_'='_x not
R83753:83755 IndProp <> ltb def
R83759:83759 IndProp <> m var
R83757:83757 IndProp <> n var
R83763:83766 Basics <> true constr
R83800:83801 IndProp <> lt def
R83816:83818 IndProp <> ltb def
R83827:83838 IndProp <> leb_complete thm
R83827:83838 IndProp <> leb_complete thm
prf 83883:83886 <> lebP
R83902:83908 IndProp <> reflect ind
R83920:83922 Basics <> leb def
R83926:83926 IndProp <> m var
R83924:83924 IndProp <> n var
R83911:83912 Coq.Init.Peano <> le ind
R83916:83916 IndProp <> m var
R83914:83914 IndProp <> n var
R83951:83961 IndProp <> iff_reflect thm
R83951:83961 IndProp <> iff_reflect thm
R83977:83987 IndProp <> leb_correct thm
R83977:83987 IndProp <> leb_correct thm
R83996:84007 IndProp <> leb_complete thm
R83996:84007 IndProp <> leb_complete thm
prf 84022:84025 <> ltbP
R84040:84046 IndProp <> reflect ind
R84058:84060 IndProp <> ltb def
R84064:84064 IndProp <> m var
R84062:84062 IndProp <> n var
R84049:84050 IndProp <> lt def
R84054:84054 IndProp <> m var
R84052:84052 IndProp <> n var
R84090:84091 IndProp <> lt def
R84101:84103 IndProp <> ltb def
R84112:84115 IndProp <> lebP thm
R84112:84115 IndProp <> lebP thm
prf 84132:84141 <> balance_eq
R84166:84168 Coq.Init.Logic <> :type_scope:x_'='_x not
R84155:84161 IndProp <> balance def
R84165:84165 IndProp <> n var
R84163:84163 IndProp <> n var
R84224:84228 IndProp <> ltb_n thm
R84224:84228 IndProp <> ltb_n thm
prf 84251:84265 <> balance_0_small
R84290:84292 Coq.Init.Logic <> :type_scope:x_'='_x not
R84279:84285 IndProp <> balance def
R84287:84287 IndProp <> n var
R84293:84293 IndProp <> n var
prf 84374:84380 <> ltb_n_0
R84401:84403 Coq.Init.Logic <> :type_scope:x_'='_x not
R84394:84396 IndProp <> ltb def
R84398:84398 IndProp <> n var
R84404:84408 Basics <> false constr
R84433:84435 IndProp <> ltb def
prf 84465:84472 <> ltb_Sn_m
R84520:84522 Coq.Init.Logic <> :type_scope:x_'='_x not
R84513:84515 IndProp <> ltb def
R84519:84519 IndProp <> m var
R84517:84517 IndProp <> n var
R84523:84526 Basics <> true constr
R84502:84504 Coq.Init.Logic <> :type_scope:x_'='_x not
R84491:84493 IndProp <> ltb def
R84501:84501 IndProp <> m var
R84496:84496 Coq.Init.Datatypes <> S constr
R84498:84498 IndProp <> n var
R84505:84508 Basics <> true constr
R84544:84546 IndProp <> ltb def
R84556:84558 IndProp <> ltb def
R84573:84584 IndProp <> leb_complete thm
R84573:84584 IndProp <> leb_complete thm
R84598:84608 IndProp <> leb_correct thm
R84598:84608 IndProp <> leb_correct thm
R84617:84623 IndProp <> Sn_le_m thm
R84617:84623 IndProp <> Sn_le_m thm
prf 84651:84662 <> balance_Sbig
R84723:84725 Coq.Init.Logic <> :type_scope:x_'='_x not
R84702:84708 IndProp <> balance def
R84718:84722 IndProp <> small var
R84711:84711 Coq.Init.Datatypes <> S constr
R84713:84715 IndProp <> big var
R84726:84726 Coq.Init.Datatypes <> S constr
R84729:84735 IndProp <> balance def
R84741:84745 IndProp <> small var
R84737:84739 IndProp <> big var
R84691:84694 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R84686:84690 IndProp <> small var
R84695:84697 IndProp <> big var
R84805:84807 IndProp <> ltb def
R84818:84818 Coq.Init.Logic <> :type_scope:x_'='_x not
R84844:84847 Coq.Init.Logic <> :type_scope:x_'='_x not
R84819:84821 Basics <> leb def
R84838:84838 Coq.Init.Datatypes <> S constr
R84824:84824 Coq.Init.Datatypes <> S constr
R84827:84827 Coq.Init.Datatypes <> S constr
R84848:84851 Basics <> true constr
R84818:84818 Coq.Init.Logic <> :type_scope:x_'='_x not
R84844:84847 Coq.Init.Logic <> :type_scope:x_'='_x not
R84819:84821 Basics <> leb def
R84838:84838 Coq.Init.Datatypes <> S constr
R84824:84824 Coq.Init.Datatypes <> S constr
R84827:84827 Coq.Init.Datatypes <> S constr
R84848:84851 Basics <> true constr
R84863:84873 IndProp <> leb_correct thm
R84863:84873 IndProp <> leb_correct thm
R84882:84897 IndProp <> n_le_m__Sn_le_Sm thm
R84882:84897 IndProp <> n_le_m__Sn_le_Sm thm
prf 84940:84953 <> le_is_lt_or_eq
R84984:84987 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R84980:84982 IndProp <> ::x_'<'_x not
R84979:84979 IndProp <> n var
R84983:84983 IndProp <> m var
R84989:84991 Coq.Init.Logic <> :type_scope:x_'='_x not
R84988:84988 IndProp <> n var
R84992:84992 IndProp <> m var
R84970:84973 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R84969:84969 IndProp <> n var
R84974:84974 IndProp <> m var
R85047:85048 IndProp <> lt def
R85063:85078 IndProp <> n_le_m__Sn_le_Sm thm
R85063:85078 IndProp <> n_le_m__Sn_le_Sm thm
prf 85101:85114 <> balance_Ssmall
R85178:85181 Coq.Init.Logic <> :type_scope:x_'='_x not
R85199:85199 Coq.Init.Logic <> :type_scope:x_'='_x not
R85153:85153 Coq.Init.Datatypes <> S constr
R85156:85162 IndProp <> balance def
R85169:85169 Coq.Init.Datatypes <> S constr
R85171:85175 IndProp <> small var
R85164:85166 IndProp <> big var
R85182:85188 IndProp <> balance def
R85194:85198 IndProp <> small var
R85190:85192 IndProp <> big var
R85143:85145 IndProp <> ::x_'<'_x not
R85138:85142 IndProp <> small var
R85146:85148 IndProp <> big var
R85256:85257 IndProp <> lt def
R85279:85281 IndProp <> ltb def
R85291:85292 IndProp <> lt def
R85310:85323 IndProp <> le_is_lt_or_eq thm
R85310:85323 IndProp <> le_is_lt_or_eq thm
R85354:85355 IndProp <> lt def
R85398:85400 Coq.Init.Logic <> :type_scope:x_'='_x not
R85373:85375 Basics <> leb def
R85392:85392 Coq.Init.Datatypes <> S constr
R85378:85378 Coq.Init.Datatypes <> S constr
R85381:85381 Coq.Init.Datatypes <> S constr
R85401:85404 Basics <> true constr
R85398:85400 Coq.Init.Logic <> :type_scope:x_'='_x not
R85373:85375 Basics <> leb def
R85392:85392 Coq.Init.Datatypes <> S constr
R85378:85378 Coq.Init.Datatypes <> S constr
R85381:85381 Coq.Init.Datatypes <> S constr
R85401:85404 Basics <> true constr
R85418:85428 IndProp <> leb_correct thm
R85418:85428 IndProp <> leb_correct thm
R85470:85472 Coq.Init.Logic <> :type_scope:x_'='_x not
R85449:85451 Basics <> leb def
R85464:85464 Coq.Init.Datatypes <> S constr
R85454:85454 Coq.Init.Datatypes <> S constr
R85473:85476 Basics <> true constr
R85470:85472 Coq.Init.Logic <> :type_scope:x_'='_x not
R85449:85451 Basics <> leb def
R85464:85464 Coq.Init.Datatypes <> S constr
R85454:85454 Coq.Init.Datatypes <> S constr
R85473:85476 Basics <> true constr
R85490:85500 IndProp <> leb_correct thm
R85490:85500 IndProp <> leb_correct thm
R85509:85515 IndProp <> Sn_le_m thm
R85509:85515 IndProp <> Sn_le_m thm
R85587:85589 Coq.Init.Logic <> :type_scope:x_'='_x not
R85562:85562 Coq.Init.Datatypes <> S constr
R85565:85571 IndProp <> balance def
R85578:85578 Coq.Init.Datatypes <> S constr
R85590:85596 IndProp <> balance def
R85587:85589 Coq.Init.Logic <> :type_scope:x_'='_x not
R85562:85562 Coq.Init.Datatypes <> S constr
R85565:85571 IndProp <> balance def
R85578:85578 Coq.Init.Datatypes <> S constr
R85590:85596 IndProp <> balance def
R85633:85648 IndProp <> Sn_le_Sm__n_le_m thm
R85633:85648 IndProp <> Sn_le_Sm__n_le_m thm
R85715:85719 Coq.Init.Logic <> False ind
R85701:85701 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R85705:85709 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R85702:85702 Coq.Init.Datatypes <> S constr
R85704:85704 IndProp <> n var
R85710:85710 IndProp <> n var
R85715:85719 Coq.Init.Logic <> False ind
R85701:85701 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R85705:85709 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R85702:85702 Coq.Init.Datatypes <> S constr
R85704:85704 IndProp <> n var
R85710:85710 IndProp <> n var
R85792:85807 IndProp <> Sn_le_Sm__n_le_m thm
R85792:85807 IndProp <> Sn_le_Sm__n_le_m thm
R85853:85855 Coq.Init.Logic <> :type_scope:x_'='_x not
R85828:85830 Basics <> leb def
R85847:85847 Coq.Init.Datatypes <> S constr
R85833:85833 Coq.Init.Datatypes <> S constr
R85836:85836 Coq.Init.Datatypes <> S constr
R85856:85860 Basics <> false constr
R85853:85855 Coq.Init.Logic <> :type_scope:x_'='_x not
R85828:85830 Basics <> leb def
R85847:85847 Coq.Init.Datatypes <> S constr
R85833:85833 Coq.Init.Datatypes <> S constr
R85836:85836 Coq.Init.Datatypes <> S constr
R85856:85860 Basics <> false constr
R85889:85892 IndProp <> lebP thm
R85907:85907 Coq.Init.Datatypes <> S constr
R85895:85895 Coq.Init.Datatypes <> S constr
R85898:85898 Coq.Init.Datatypes <> S constr
R85889:85892 IndProp <> lebP thm
R85907:85907 Coq.Init.Datatypes <> S constr
R85895:85895 Coq.Init.Datatypes <> S constr
R85898:85898 Coq.Init.Datatypes <> S constr
R86006:86013 Induction <> leb_refl prfax
R86006:86013 Induction <> leb_refl prfax
R86040:86049 IndProp <> balance_eq thm
R86040:86049 IndProp <> balance_eq thm
prf 86090:86100 <> expose_last
R86125:86128 Poly <> list ind
R86130:86130 IndProp <> T var
R86147:86154 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R86172:86174 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R86158:86158 IndProp <> T var
R86166:86169 Poly <> list ind
R86171:86171 IndProp <> T var
R86176:86178 Coq.Init.Logic <> :type_scope:x_'='_x not
R86175:86175 IndProp <> l var
R86181:86184 Poly <> ::x_'++'_x not
R86179:86180 IndProp <> l' var
R86185:86185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R86187:86187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R86186:86186 IndProp <> t var
R86137:86140 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R86136:86136 IndProp <> l var
R86141:86142 Poly <> ::'['_']' not
R86260:86261 Poly <> ::'['_']' not
R86260:86261 Poly <> ::'['_']' not
R86286:86289 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R86281:86284 Poly <> ::x_'::'_x not
R86290:86291 Poly <> ::'['_']' not
R86286:86289 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R86281:86284 Poly <> ::x_'::'_x not
R86290:86291 Poly <> ::'['_']' not
R86376:86379 Poly <> ::x_'::'_x not
R86376:86379 Poly <> ::x_'::'_x not
prf 86424:86441 <> last_error_non_nil
R86466:86469 Poly <> list ind
R86471:86471 IndProp <> T var
R86479:86486 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R86492:86494 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R86491:86491 IndProp <> T var
R86514:86516 Coq.Init.Logic <> :type_scope:x_'='_x not
R86495:86504 IndProp <> last_error def
R86508:86511 Poly <> ::x_'::'_x not
R86507:86507 IndProp <> t var
R86512:86512 IndProp <> l var
R86517:86520 Poly <> Some constr
R86522:86523 IndProp <> t' var
R86600:86603 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R86589:86592 Poly <> ::x_'::'_x not
R86595:86598 Poly <> ::x_'::'_x not
R86604:86605 Poly <> ::'['_']' not
R86600:86603 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R86589:86592 Poly <> ::x_'::'_x not
R86595:86598 Poly <> ::x_'::'_x not
R86604:86605 Poly <> ::'['_']' not
R86639:86649 IndProp <> expose_last thm
R86639:86649 IndProp <> expose_last thm
R86708:86721 IndProp <> last_error_app thm
R86708:86721 IndProp <> last_error_app thm
prf 86738:86752 <> nth_error_cons2
R86779:86779 IndProp <> X var
R86787:86790 Poly <> list ind
R86792:86792 IndProp <> X var
R86824:86826 Coq.Init.Logic <> :type_scope:x_'='_x not
R86800:86808 Poly <> nth_error def
R86820:86820 Coq.Init.Datatypes <> S constr
R86822:86822 IndProp <> n var
R86812:86815 Poly <> ::x_'::'_x not
R86811:86811 IndProp <> x var
R86816:86816 IndProp <> l var
R86827:86835 Poly <> nth_error def
R86839:86839 IndProp <> n var
R86837:86837 IndProp <> l var
prf 86876:86894 <> nth_error_safe_zone
R86920:86923 Poly <> list ind
R86925:86925 IndProp <> T var
R86965:86971 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R86974:86975 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R86989:86991 Coq.Init.Logic <> :type_scope:x_'='_x not
R86976:86984 Poly <> nth_error def
R86988:86988 IndProp <> n var
R86986:86986 IndProp <> l var
R86992:86995 Poly <> Some constr
R86997:86998 IndProp <> t' var
R86950:86953 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R86933:86941 Poly <> nth_error def
R86946:86946 Coq.Init.Datatypes <> S constr
R86948:86948 IndProp <> n var
R86943:86943 IndProp <> l var
R86954:86957 Poly <> None constr
prf 87161:87176 <> nth_error_safe_2
R87202:87205 Poly <> list ind
R87207:87207 IndProp <> T var
R87245:87251 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R87254:87255 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R87276:87278 Coq.Init.Logic <> :type_scope:x_'='_x not
R87256:87264 Poly <> nth_error def
R87275:87275 IndProp <> n var
R87268:87271 Poly <> ::x_'::'_x not
R87267:87267 IndProp <> t var
R87272:87272 IndProp <> l var
R87279:87282 Poly <> Some constr
R87284:87285 IndProp <> t' var
R87230:87233 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R87217:87225 Poly <> nth_error def
R87229:87229 IndProp <> n var
R87227:87227 IndProp <> l var
R87234:87237 Poly <> None constr
R87362:87380 IndProp <> nth_error_safe_zone thm
R87362:87380 IndProp <> nth_error_safe_zone thm
prf 87403:87423 <> nth_error_before_last
R87450:87453 Poly <> list ind
R87455:87455 IndProp <> T var
R87478:87484 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R87486:87487 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R87501:87503 Coq.Init.Logic <> :type_scope:x_'='_x not
R87488:87496 Poly <> nth_error def
R87500:87500 IndProp <> n var
R87498:87498 IndProp <> l var
R87504:87507 Poly <> Some constr
R87509:87509 IndProp <> t var
R87462:87464 IndProp <> ::x_'<'_x not
R87461:87461 IndProp <> n var
R87465:87470 Poly <> length def
R87472:87472 IndProp <> l var
R87527:87528 IndProp <> lt def
R87646:87659 IndProp <> nth_error_last thm
R87646:87659 IndProp <> nth_error_last thm
R87702:87719 IndProp <> last_error_non_nil thm
R87702:87719 IndProp <> last_error_non_nil thm
R87740:87758 IndProp <> nth_error_safe_zone thm
R87740:87758 IndProp <> nth_error_safe_zone thm
R87821:87823 Coq.Init.Logic <> :type_scope:x_'='_x not
R87814:87817 Poly <> Some constr
R87824:87827 Poly <> None constr
R87821:87823 Coq.Init.Logic <> :type_scope:x_'='_x not
R87814:87817 Poly <> Some constr
R87824:87827 Poly <> None constr
prf 87899:87910 <> balance_is_0
R87962:87965 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R87959:87961 IndProp <> big var
R87966:87970 IndProp <> small var
R87951:87953 Coq.Init.Logic <> :type_scope:x_'='_x not
R87934:87940 IndProp <> balance def
R87946:87950 IndProp <> small var
R87942:87944 IndProp <> big var
R87998:88001 IndProp <> lebP thm
R87998:88001 IndProp <> lebP thm
R88056:88061 IndProp <> O_le_n thm
R88056:88061 IndProp <> O_le_n thm
R88085:88087 IndProp <> ltb def
R88119:88122 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R88110:88113 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R88103:88103 Coq.Init.Datatypes <> S constr
R88114:88114 Coq.Init.Datatypes <> S constr
R88128:88131 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R88123:88123 Coq.Init.Datatypes <> S constr
R88132:88132 Coq.Init.Datatypes <> S constr
R88119:88122 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R88110:88113 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R88103:88103 Coq.Init.Datatypes <> S constr
R88114:88114 Coq.Init.Datatypes <> S constr
R88128:88131 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R88123:88123 Coq.Init.Datatypes <> S constr
R88132:88132 Coq.Init.Datatypes <> S constr
R88150:88171 Coq.Numbers.Natural.Peano.NPeano Nat le_ge_cases thm
R88150:88171 Coq.Numbers.Natural.Peano.NPeano Nat le_ge_cases thm
R88195:88205 IndProp <> leb_correct thm
R88195:88205 IndProp <> leb_correct thm
R88287:88289 Coq.Init.Logic <> :type_scope:x_'='_x not
R88266:88268 Basics <> leb def
R88281:88281 Coq.Init.Datatypes <> S constr
R88271:88271 Coq.Init.Datatypes <> S constr
R88290:88293 Basics <> true constr
R88287:88289 Coq.Init.Logic <> :type_scope:x_'='_x not
R88266:88268 Basics <> leb def
R88281:88281 Coq.Init.Datatypes <> S constr
R88271:88271 Coq.Init.Datatypes <> S constr
R88290:88293 Basics <> true constr
R88325:88332 Induction <> leb_refl prfax
R88325:88332 Induction <> leb_refl prfax
prf 88385:88398 <> n_le_m__m_le_n
R88437:88439 Coq.Init.Logic <> :type_scope:x_'='_x not
R88436:88436 IndProp <> n var
R88440:88440 IndProp <> m var
R88422:88425 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R88417:88420 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R88416:88416 IndProp <> n var
R88421:88421 IndProp <> m var
R88427:88430 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R88426:88426 IndProp <> m var
R88431:88431 IndProp <> n var
prf 88492:88511 <> l_is_rev_l_even_core
R88538:88540 Coq.Init.Datatypes <> nat ind
R88568:88571 Poly <> list ind
R88573:88573 IndProp <> T var
R88610:88616 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R88622:88623 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R88636:88639 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R88632:88634 Coq.Init.Logic <> :type_scope:x_'='_x not
R88626:88629 Poly <> ::x_'++'_x not
R88624:88625 IndProp <> ll var
R88630:88631 IndProp <> lr var
R88635:88635 IndProp <> l var
R88642:88644 Coq.Init.Logic <> :type_scope:x_'='_x not
R88640:88641 IndProp <> lr var
R88645:88647 Poly <> rev def
R88649:88650 IndProp <> ll var
R88596:88598 Coq.Init.Logic <> :type_scope:x_'='_x not
R88595:88595 IndProp <> l var
R88599:88601 Poly <> rev def
R88603:88603 IndProp <> l var
R88585:88587 Coq.Init.Logic <> :type_scope:x_'='_x not
R88577:88582 Poly <> length def
R88584:88584 IndProp <> l var
R88588:88590 IndProp <> len var
R88546:88547 IndProp <> ev ind
R88549:88551 IndProp <> len var
R88726:88736 IndProp <> length_is_0 thm
R88726:88736 IndProp <> length_is_0 thm
R88762:88763 Poly <> ::'['_']' not
R88766:88767 Poly <> ::'['_']' not
R88762:88763 Poly <> ::'['_']' not
R88766:88767 Poly <> ::'['_']' not
R88919:88929 IndProp <> cons_to_app thm
R88919:88929 IndProp <> cons_to_app thm
R88947:88957 IndProp <> cons_to_app thm
R88947:88957 IndProp <> cons_to_app thm
R88997:89003 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R89006:89007 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R89017:89019 Coq.Init.Logic <> :type_scope:x_'='_x not
R89012:89015 Poly <> ::x_'++'_x not
R89008:89008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89011:89011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89022:89025 Poly <> ::x_'++'_x not
R89020:89021 IndProp <> l' var
R89026:89026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89028:89028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R88997:89003 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R89006:89007 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R89017:89019 Coq.Init.Logic <> :type_scope:x_'='_x not
R89012:89015 Poly <> ::x_'++'_x not
R89008:89008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89011:89011 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89022:89025 Poly <> ::x_'++'_x not
R89020:89021 IndProp <> l' var
R89026:89026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89028:89028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89039:89051 IndProp <> the_lone_tail thm
R89079:89082 Poly <> ::x_'++'_x not
R89074:89076 Poly <> rev def
R89083:89083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89086:89086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89066:89069 Poly <> ::x_'++'_x not
R89062:89062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89065:89065 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89057:89057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89059:89059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89039:89051 IndProp <> the_lone_tail thm
R89079:89082 Poly <> ::x_'++'_x not
R89074:89076 Poly <> rev def
R89083:89083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89086:89086 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89066:89069 Poly <> ::x_'++'_x not
R89062:89062 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89065:89065 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89057:89057 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89059:89059 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89202:89204 Coq.Init.Logic <> :type_scope:x_'='_x not
R89191:89194 Poly <> ::x_'::'_x not
R89197:89200 Poly <> ::x_'::'_x not
R89208:89211 Poly <> ::x_'++'_x not
R89205:89205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89207:89207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89214:89217 Poly <> ::x_'++'_x not
R89218:89218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89220:89220 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89202:89204 Coq.Init.Logic <> :type_scope:x_'='_x not
R89191:89194 Poly <> ::x_'::'_x not
R89197:89200 Poly <> ::x_'::'_x not
R89208:89211 Poly <> ::x_'++'_x not
R89205:89205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89207:89207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89214:89217 Poly <> ::x_'++'_x not
R89218:89218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89220:89220 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89232:89242 IndProp <> cons_to_app thm
R89232:89242 IndProp <> cons_to_app thm
R89254:89264 IndProp <> cons_to_app thm
R89254:89264 IndProp <> cons_to_app thm
R89351:89353 Coq.Init.Logic <> :type_scope:x_'='_x not
R89342:89347 Poly <> length def
R89351:89353 Coq.Init.Logic <> :type_scope:x_'='_x not
R89342:89347 Poly <> length def
R89389:89391 Coq.Init.Logic <> :type_scope:x_'='_x not
R89368:89373 Poly <> length def
R89377:89380 Poly <> ::x_'::'_x not
R89383:89386 Poly <> ::x_'::'_x not
R89392:89397 Poly <> length def
R89403:89406 Poly <> ::x_'++'_x not
R89400:89400 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89402:89402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89409:89412 Poly <> ::x_'++'_x not
R89413:89413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89415:89415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89389:89391 Coq.Init.Logic <> :type_scope:x_'='_x not
R89368:89373 Poly <> length def
R89377:89380 Poly <> ::x_'::'_x not
R89383:89386 Poly <> ::x_'::'_x not
R89392:89397 Poly <> length def
R89403:89406 Poly <> ::x_'++'_x not
R89400:89400 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89402:89402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89409:89412 Poly <> ::x_'++'_x not
R89413:89413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89415:89415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89459:89468 Poly <> app_length thm
R89459:89468 Poly <> app_length thm
R89485:89493 Induction <> plus_comm prfax
R89485:89493 Induction <> plus_comm prfax
R89572:89574 Coq.Init.Logic <> :type_scope:x_'='_x not
R89575:89577 Poly <> rev def
R89572:89574 Coq.Init.Logic <> :type_scope:x_'='_x not
R89575:89577 Poly <> rev def
R89593:89610 IndProp <> l_is_rev_breakdown thm
R89593:89610 IndProp <> l_is_rev_breakdown thm
R89765:89768 Poly <> ::x_'++'_x not
R89762:89762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89764:89764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89776:89779 Poly <> ::x_'++'_x not
R89780:89780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89782:89782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89765:89768 Poly <> ::x_'++'_x not
R89762:89762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89764:89764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89776:89779 Poly <> ::x_'++'_x not
R89780:89780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89782:89782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R89807:89815 Poly <> app_assoc thm
R89807:89815 Poly <> app_assoc thm
R89827:89835 Poly <> app_assoc thm
R89827:89835 Poly <> app_assoc thm
prf 89931:89945 <> l_is_rev_l_even
R89971:89974 Poly <> list ind
R89976:89976 IndProp <> T var
R90014:90020 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90026:90027 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90040:90043 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R90036:90038 Coq.Init.Logic <> :type_scope:x_'='_x not
R90030:90033 Poly <> ::x_'++'_x not
R90028:90029 IndProp <> ll var
R90034:90035 IndProp <> lr var
R90039:90039 IndProp <> l var
R90046:90048 Coq.Init.Logic <> :type_scope:x_'='_x not
R90044:90045 IndProp <> lr var
R90049:90051 Poly <> rev def
R90053:90054 IndProp <> ll var
R90000:90002 Coq.Init.Logic <> :type_scope:x_'='_x not
R89999:89999 IndProp <> l var
R90003:90005 Poly <> rev def
R90007:90007 IndProp <> l var
R89982:89983 IndProp <> ev ind
R89986:89991 Poly <> length def
R89993:89993 IndProp <> l var
R90105:90110 Poly <> length def
R90078:90097 IndProp <> l_is_rev_l_even_core thm
R90105:90110 Poly <> length def
R90078:90097 IndProp <> l_is_rev_l_even_core thm
prf 90136:90154 <> l_is_rev_l_odd_core
R90181:90183 Coq.Init.Datatypes <> nat ind
R90211:90214 Poly <> list ind
R90216:90216 IndProp <> T var
R90255:90261 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90271:90272 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90294:90297 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R90290:90292 Coq.Init.Logic <> :type_scope:x_'='_x not
R90275:90278 Poly <> ::x_'++'_x not
R90273:90274 IndProp <> ll var
R90284:90287 Poly <> ::x_'++'_x not
R90279:90279 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90283:90283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90280:90282 IndProp <> mid var
R90288:90289 IndProp <> lr var
R90293:90293 IndProp <> l var
R90300:90302 Coq.Init.Logic <> :type_scope:x_'='_x not
R90298:90299 IndProp <> lr var
R90303:90305 Poly <> rev def
R90307:90308 IndProp <> ll var
R90241:90243 Coq.Init.Logic <> :type_scope:x_'='_x not
R90240:90240 IndProp <> l var
R90244:90246 Poly <> rev def
R90248:90248 IndProp <> l var
R90228:90230 Coq.Init.Logic <> :type_scope:x_'='_x not
R90220:90225 Poly <> length def
R90227:90227 IndProp <> l var
R90231:90231 Coq.Init.Datatypes <> S constr
R90233:90235 IndProp <> len var
R90189:90190 IndProp <> ev ind
R90192:90194 IndProp <> len var
R90424:90425 Poly <> ::'['_']' not
R90428:90429 Poly <> ::'['_']' not
R90424:90425 Poly <> ::'['_']' not
R90428:90429 Poly <> ::'['_']' not
R90660:90670 IndProp <> cons_to_app thm
R90660:90670 IndProp <> cons_to_app thm
R90705:90711 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90714:90715 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90729:90731 Coq.Init.Logic <> :type_scope:x_'='_x not
R90718:90721 Poly <> ::x_'::'_x not
R90724:90727 Poly <> ::x_'::'_x not
R90734:90737 Poly <> ::x_'++'_x not
R90732:90733 IndProp <> l' var
R90738:90738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90740:90740 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90705:90711 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90714:90715 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R90729:90731 Coq.Init.Logic <> :type_scope:x_'='_x not
R90718:90721 Poly <> ::x_'::'_x not
R90724:90727 Poly <> ::x_'::'_x not
R90734:90737 Poly <> ::x_'++'_x not
R90732:90733 IndProp <> l' var
R90738:90738 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90740:90740 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90753:90765 IndProp <> the_lone_tail thm
R90792:90792 Poly <> ::x_'++'_x not
R90806:90810 Poly <> ::x_'++'_x not
R90798:90801 Poly <> ::x_'++'_x not
R90793:90795 Poly <> rev def
R90802:90802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90805:90805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90811:90811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90814:90814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90778:90781 Poly <> ::x_'::'_x not
R90784:90787 Poly <> ::x_'::'_x not
R90771:90771 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90773:90773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90753:90765 IndProp <> the_lone_tail thm
R90792:90792 Poly <> ::x_'++'_x not
R90806:90810 Poly <> ::x_'++'_x not
R90798:90801 Poly <> ::x_'++'_x not
R90793:90795 Poly <> rev def
R90802:90802 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90805:90805 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90811:90811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90814:90814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90778:90781 Poly <> ::x_'::'_x not
R90784:90787 Poly <> ::x_'::'_x not
R90771:90771 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90773:90773 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90938:90940 Coq.Init.Logic <> :type_scope:x_'='_x not
R90921:90924 Poly <> ::x_'::'_x not
R90927:90930 Poly <> ::x_'::'_x not
R90933:90936 Poly <> ::x_'::'_x not
R90942:90945 Poly <> ::x_'::'_x not
R90948:90951 Poly <> ::x_'++'_x not
R90952:90952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90954:90954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90938:90940 Coq.Init.Logic <> :type_scope:x_'='_x not
R90921:90924 Poly <> ::x_'::'_x not
R90927:90930 Poly <> ::x_'::'_x not
R90933:90936 Poly <> ::x_'::'_x not
R90942:90945 Poly <> ::x_'::'_x not
R90948:90951 Poly <> ::x_'++'_x not
R90952:90952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R90954:90954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91038:91040 Coq.Init.Logic <> :type_scope:x_'='_x not
R91029:91034 Poly <> length def
R91041:91041 Coq.Init.Datatypes <> S constr
R91038:91040 Coq.Init.Logic <> :type_scope:x_'='_x not
R91029:91034 Poly <> length def
R91041:91041 Coq.Init.Datatypes <> S constr
R91084:91086 Coq.Init.Logic <> :type_scope:x_'='_x not
R91057:91062 Poly <> length def
R91066:91069 Poly <> ::x_'::'_x not
R91072:91075 Poly <> ::x_'::'_x not
R91078:91081 Poly <> ::x_'::'_x not
R91087:91092 Poly <> length def
R91096:91099 Poly <> ::x_'::'_x not
R91102:91105 Poly <> ::x_'++'_x not
R91106:91106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91108:91108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91084:91086 Coq.Init.Logic <> :type_scope:x_'='_x not
R91057:91062 Poly <> length def
R91066:91069 Poly <> ::x_'::'_x not
R91072:91075 Poly <> ::x_'::'_x not
R91078:91081 Poly <> ::x_'::'_x not
R91087:91092 Poly <> length def
R91096:91099 Poly <> ::x_'::'_x not
R91102:91105 Poly <> ::x_'++'_x not
R91106:91106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91108:91108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91152:91161 Poly <> app_length thm
R91152:91161 Poly <> app_length thm
R91178:91186 Induction <> plus_comm prfax
R91178:91186 Induction <> plus_comm prfax
R91265:91267 Coq.Init.Logic <> :type_scope:x_'='_x not
R91268:91270 Poly <> rev def
R91265:91267 Coq.Init.Logic <> :type_scope:x_'='_x not
R91268:91270 Poly <> rev def
R91286:91303 IndProp <> l_is_rev_breakdown thm
R91286:91303 IndProp <> l_is_rev_breakdown thm
R91470:91473 Poly <> ::x_'++'_x not
R91467:91467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91469:91469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91481:91484 Poly <> ::x_'++'_x not
R91485:91485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91487:91487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91470:91473 Poly <> ::x_'++'_x not
R91467:91467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91469:91469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91481:91484 Poly <> ::x_'++'_x not
R91485:91485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91487:91487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91546:91556 IndProp <> cons_to_app thm
R91546:91556 IndProp <> cons_to_app thm
R91568:91578 IndProp <> cons_to_app thm
R91585:91588 Poly <> ::x_'++'_x not
R91589:91589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91591:91591 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91568:91578 IndProp <> cons_to_app thm
R91585:91588 Poly <> ::x_'++'_x not
R91589:91589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91591:91591 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91605:91615 IndProp <> cons_to_app thm
R91620:91620 Poly <> ::x_'++'_x not
R91634:91638 Poly <> ::x_'++'_x not
R91622:91625 Poly <> ::x_'++'_x not
R91628:91631 Poly <> ::x_'::'_x not
R91639:91639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91641:91641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91605:91615 IndProp <> cons_to_app thm
R91620:91620 Poly <> ::x_'++'_x not
R91634:91638 Poly <> ::x_'++'_x not
R91622:91625 Poly <> ::x_'++'_x not
R91628:91631 Poly <> ::x_'::'_x not
R91639:91639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91641:91641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91655:91665 IndProp <> cons_to_app thm
R91655:91665 IndProp <> cons_to_app thm
R91682:91702 IndProp Pumping some_dumb_app thm
R91682:91702 IndProp Pumping some_dumb_app thm
prf 91752:91765 <> l_is_rev_l_odd
R91791:91794 Poly <> list ind
R91796:91796 IndProp <> T var
R91838:91844 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91854:91855 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R91877:91880 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R91873:91875 Coq.Init.Logic <> :type_scope:x_'='_x not
R91858:91861 Poly <> ::x_'++'_x not
R91856:91857 IndProp <> ll var
R91867:91870 Poly <> ::x_'++'_x not
R91862:91862 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91866:91866 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R91863:91865 IndProp <> mid var
R91871:91872 IndProp <> lr var
R91876:91876 IndProp <> l var
R91883:91885 Coq.Init.Logic <> :type_scope:x_'='_x not
R91881:91882 IndProp <> lr var
R91886:91888 Poly <> rev def
R91890:91891 IndProp <> ll var
R91824:91826 Coq.Init.Logic <> :type_scope:x_'='_x not
R91823:91823 IndProp <> l var
R91827:91829 Poly <> rev def
R91831:91831 IndProp <> l var
R91802:91803 IndProp <> ev ind
R91806:91806 Coq.Init.Datatypes <> S constr
R91809:91814 Poly <> length def
R91816:91816 IndProp <> l var
R91941:91944 Coq.Init.Peano <> pred def
R91947:91952 Poly <> length def
R91915:91933 IndProp <> l_is_rev_l_odd_core thm
R91941:91944 Coq.Init.Peano <> pred def
R91947:91952 Poly <> length def
R91915:91933 IndProp <> l_is_rev_l_odd_core thm
prf 92037:92047 <> even_or_odd
R92067:92070 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R92063:92064 IndProp <> ev ind
R92066:92066 IndProp <> n var
R92071:92072 IndProp <> ev ind
R92075:92075 Coq.Init.Datatypes <> S constr
R92077:92077 IndProp <> n var
R92123:92126 IndProp <> ev_0 constr
R92123:92126 IndProp <> ev_0 constr
R92160:92164 IndProp <> ev_SS constr
R92160:92164 IndProp <> ev_SS constr
prf 92201:92218 <> l_is_rev_l_allstar
R92243:92246 Poly <> list ind
R92248:92248 IndProp <> T var
R92267:92267 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R92309:92316 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R92371:92371 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R92268:92274 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R92280:92281 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R92294:92297 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92290:92292 Coq.Init.Logic <> :type_scope:x_'='_x not
R92284:92287 Poly <> ::x_'++'_x not
R92282:92283 IndProp <> ll var
R92288:92289 IndProp <> lr var
R92293:92293 IndProp <> l var
R92300:92302 Coq.Init.Logic <> :type_scope:x_'='_x not
R92298:92299 IndProp <> lr var
R92303:92305 Poly <> rev def
R92307:92308 IndProp <> ll var
R92317:92323 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R92333:92334 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R92356:92359 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R92352:92354 Coq.Init.Logic <> :type_scope:x_'='_x not
R92337:92340 Poly <> ::x_'++'_x not
R92335:92336 IndProp <> ll var
R92346:92349 Poly <> ::x_'++'_x not
R92341:92341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R92345:92345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R92342:92344 IndProp <> mid var
R92350:92351 IndProp <> lr var
R92355:92355 IndProp <> l var
R92362:92364 Coq.Init.Logic <> :type_scope:x_'='_x not
R92360:92361 IndProp <> lr var
R92365:92367 Poly <> rev def
R92369:92370 IndProp <> ll var
R92255:92257 Coq.Init.Logic <> :type_scope:x_'='_x not
R92254:92254 IndProp <> l var
R92258:92260 Poly <> rev def
R92262:92262 IndProp <> l var
R92410:92413 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R92397:92398 IndProp <> ev ind
R92401:92406 Poly <> length def
R92414:92415 IndProp <> ev ind
R92418:92418 Coq.Init.Datatypes <> S constr
R92421:92426 Poly <> length def
R92410:92413 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R92397:92398 IndProp <> ev ind
R92401:92406 Poly <> length def
R92414:92415 IndProp <> ev ind
R92418:92418 Coq.Init.Datatypes <> S constr
R92421:92426 Poly <> length def
R92442:92452 IndProp <> even_or_odd thm
R92442:92452 IndProp <> even_or_odd thm
R92484:92498 IndProp <> l_is_rev_l_even thm
R92484:92498 IndProp <> l_is_rev_l_even thm
R92523:92536 IndProp <> l_is_rev_l_odd thm
R92523:92536 IndProp <> l_is_rev_l_odd thm
prf 92578:92584 <> rev_pal
R92609:92612 Poly <> list ind
R92614:92614 IndProp <> T var
R92634:92636 IndProp <> pal ind
R92638:92638 IndProp <> l var
R92622:92624 Coq.Init.Logic <> :type_scope:x_'='_x not
R92621:92621 IndProp <> l var
R92625:92627 Poly <> rev def
R92629:92629 IndProp <> l var
R92662:92679 IndProp <> l_is_rev_l_allstar thm
R92662:92679 IndProp <> l_is_rev_l_allstar thm
R92778:92788 IndProp <> pal_app_rev thm
R92778:92788 IndProp <> pal_app_rev thm
R92881:92892 IndProp <> pal_sandwich thm
R92881:92892 IndProp <> pal_sandwich thm
R92901:92906 IndProp <> palone constr
R92901:92906 IndProp <> palone constr
def 93504:93511 <> disjoint
R93532:93535 Poly <> list ind
R93537:93537 IndProp <> X var
R93557:93557 IndProp <> X var
R93572:93574 Coq.Init.Logic <> :type_scope:'~'_x not
R93582:93582 Coq.Init.Logic <> :type_scope:'~'_x not
R93575:93576 Logic <> In def
R93580:93581 IndProp <> l2 var
R93578:93578 IndProp <> x var
R93561:93562 Logic <> In def
R93566:93567 IndProp <> l1 var
R93564:93564 IndProp <> x var
ind 93964:93968 <> NoDup
constr 94006:94013 <> nodupnil
constr 94030:94038 <> noduprule
R93983:93986 Poly <> list ind
R94017:94021 IndProp <> NoDup ind
R94023:94024 Poly <> ::'['_']' not
R94079:94083 IndProp <> NoDup ind
R94087:94090 Poly <> ::x_'::'_x not
R94086:94086 IndProp <> x var
R94091:94091 IndProp <> l var
R94065:94067 Coq.Init.Logic <> :type_scope:'~'_x not
R94074:94074 Coq.Init.Logic <> :type_scope:'~'_x not
R94068:94069 Logic <> In def
R94073:94073 IndProp <> l var
R94071:94071 IndProp <> x var
R94054:94058 IndProp <> NoDup ind
R94060:94060 IndProp <> l var
prf 94228:94244 <> disjoin_app_nodup
R94273:94276 Poly <> list ind
R94278:94278 IndProp <> X var
R94304:94311 IndProp <> disjoint def
R94316:94317 IndProp <> l2 var
R94313:94314 IndProp <> l1 var
R94284:94288 IndProp <> NoDup ind
R94293:94296 Poly <> ::x_'++'_x not
R94291:94292 IndProp <> l1 var
R94297:94298 IndProp <> l2 var
R94358:94365 IndProp <> disjoint def
R94413:94420 IndProp <> disjoint def
R94413:94420 IndProp <> disjoint def
R94465:94472 IndProp <> disjoint def
R94491:94500 Logic <> in_app_iff thm
R94491:94500 Logic <> in_app_iff thm
R94515:94530 Coq.Logic.Decidable <> not_or thm
R94515:94530 Coq.Logic.Decidable <> not_or thm
prf 95068:95075 <> in_split
R95098:95098 IndProp <> X var
R95104:95107 Poly <> list ind
R95109:95109 IndProp <> X var
R95127:95133 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R95139:95140 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R95142:95144 Coq.Init.Logic <> :type_scope:x_'='_x not
R95141:95141 IndProp <> l var
R95147:95150 Poly <> ::x_'++'_x not
R95145:95146 IndProp <> l1 var
R95152:95155 Poly <> ::x_'::'_x not
R95151:95151 IndProp <> x var
R95156:95157 IndProp <> l2 var
R95115:95116 Logic <> In def
R95120:95120 IndProp <> l var
R95118:95118 IndProp <> x var
R95254:95255 Poly <> ::'['_']' not
R95254:95255 Poly <> ::'['_']' not
R95344:95347 Poly <> ::x_'::'_x not
R95344:95347 Poly <> ::x_'::'_x not
ind 95542:95548 <> repeats
constr 95583:95593 <> repeat_rule
constr 95640:95650 <> repeat_more
R95561:95564 Poly <> list ind
R95619:95625 IndProp <> repeats ind
R95629:95632 Poly <> ::x_'::'_x not
R95628:95628 IndProp <> x var
R95633:95633 IndProp <> l var
R95609:95610 Logic <> In def
R95614:95614 IndProp <> l var
R95612:95612 IndProp <> x var
R95679:95685 IndProp <> repeats ind
R95689:95692 Poly <> ::x_'::'_x not
R95688:95688 IndProp <> x var
R95693:95693 IndProp <> l var
R95666:95672 IndProp <> repeats ind
R95674:95674 IndProp <> l var
prf 96384:96393 <> nothing_in
R96417:96420 Poly <> list ind
R96422:96422 IndProp <> X var
R96455:96457 Coq.Init.Logic <> :type_scope:x_'='_x not
R96454:96454 IndProp <> l var
R96458:96459 Poly <> ::'['_']' not
R96439:96441 Coq.Init.Logic <> :type_scope:'~'_x not
R96448:96448 Coq.Init.Logic <> :type_scope:'~'_x not
R96442:96443 Logic <> In def
R96447:96447 IndProp <> l var
R96445:96445 IndProp <> x var
R96507:96508 Coq.Init.Logic <> :type_scope:'~'_x not
R96509:96510 Logic <> In def
R96516:96519 Poly <> ::x_'::'_x not
R96507:96508 Coq.Init.Logic <> :type_scope:'~'_x not
R96509:96510 Logic <> In def
R96516:96519 Poly <> ::x_'::'_x not
R96557:96572 Coq.Logic.Decidable <> not_or thm
R96557:96572 Coq.Logic.Decidable <> not_or thm
def 96626:96633 <> every_in
R96652:96655 Poly <> list ind
R96657:96657 IndProp <> X var
R96683:96684 Logic <> In def
R96688:96689 IndProp <> l' var
R96686:96686 IndProp <> x var
R96673:96674 Logic <> In def
R96678:96678 IndProp <> l var
R96676:96676 IndProp <> x var
prf 96701:96707 <> in_cons
R96732:96735 Poly <> list ind
R96737:96737 IndProp <> X var
R96767:96768 Logic <> In def
R96775:96778 Poly <> ::x_'::'_x not
R96774:96774 IndProp <> x var
R96779:96779 IndProp <> l var
R96770:96771 IndProp <> x' var
R96756:96757 Logic <> In def
R96762:96762 IndProp <> l var
R96759:96760 IndProp <> x' var
prf 96832:96843 <> every_in_nil
R96868:96871 Poly <> list ind
R96873:96873 IndProp <> X var
R96879:96886 IndProp <> every_in def
R96891:96891 IndProp <> l var
R96888:96889 Poly <> ::'['_']' not
R96908:96915 IndProp <> every_in def
prf 96953:96968 <> every_in_app_iff
R96999:97002 Poly <> list ind
R97004:97004 IndProp <> X var
R97031:97035 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R97010:97017 IndProp <> every_in def
R97030:97030 IndProp <> l var
R97022:97025 Poly <> ::x_'++'_x not
R97020:97021 IndProp <> l1 var
R97026:97027 IndProp <> l2 var
R97049:97052 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R97036:97043 IndProp <> every_in def
R97048:97048 IndProp <> l var
R97045:97046 IndProp <> l1 var
R97053:97060 IndProp <> every_in def
R97065:97065 IndProp <> l var
R97062:97063 IndProp <> l2 var
R97082:97089 IndProp <> every_in def
R97141:97150 Logic <> in_app_iff thm
R97141:97150 Logic <> in_app_iff thm
R97191:97200 Logic <> in_app_iff thm
R97191:97200 Logic <> in_app_iff thm
R97244:97253 Logic <> in_app_iff thm
R97244:97253 Logic <> in_app_iff thm
prf 97326:97342 <> app_comm_every_in
R97374:97377 Poly <> list ind
R97379:97379 IndProp <> X var
R97410:97417 IndProp <> every_in def
R97430:97430 IndProp <> l var
R97422:97425 Poly <> ::x_'++'_x not
R97420:97421 IndProp <> l2 var
R97426:97427 IndProp <> l1 var
R97385:97392 IndProp <> every_in def
R97405:97405 IndProp <> l var
R97397:97400 Poly <> ::x_'++'_x not
R97395:97396 IndProp <> l1 var
R97401:97402 IndProp <> l2 var
R97454:97469 IndProp <> every_in_app_iff thm
R97454:97469 IndProp <> every_in_app_iff thm
R97483:97498 IndProp <> every_in_app_iff thm
R97483:97498 IndProp <> every_in_app_iff thm
R97507:97514 Coq.Init.Logic <> and_comm thm
R97507:97514 Coq.Init.Logic <> and_comm thm
prf 97537:97554 <> app_comm_every_in2
R97585:97588 Poly <> list ind
R97590:97590 IndProp <> X var
R97621:97628 IndProp <> every_in def
R97635:97638 Poly <> ::x_'++'_x not
R97633:97634 IndProp <> l2 var
R97639:97640 IndProp <> l1 var
R97630:97630 IndProp <> l var
R97596:97603 IndProp <> every_in def
R97610:97613 Poly <> ::x_'++'_x not
R97608:97609 IndProp <> l1 var
R97614:97615 IndProp <> l2 var
R97605:97605 IndProp <> l var
R97658:97665 IndProp <> every_in def
R97682:97691 Logic <> in_app_iff thm
R97682:97691 Logic <> in_app_iff thm
R97715:97724 Logic <> in_app_iff thm
R97715:97724 Logic <> in_app_iff thm
R97739:97745 Coq.Init.Logic <> or_comm thm
R97739:97745 Coq.Init.Logic <> or_comm thm
prf 97769:97780 <> nodup_repeat
R97805:97808 Poly <> list ind
R97810:97810 IndProp <> X var
R97829:97830 Coq.Init.Logic <> :type_scope:'~'_x not
R97831:97835 IndProp <> NoDup ind
R97837:97837 IndProp <> l var
R97816:97822 IndProp <> repeats ind
R97824:97824 IndProp <> l var
prf 98007:98019 <> every_in_refl
R98045:98048 Poly <> list ind
R98050:98050 IndProp <> X var
R98056:98063 IndProp <> every_in def
R98067:98067 IndProp <> l var
R98065:98065 IndProp <> l var
R98099:98106 IndProp <> every_in def
R98132:98139 IndProp <> every_in def
prf 98235:98249 <> every_in_extend
R98277:98280 Poly <> list ind
R98282:98282 IndProp <> X var
R98319:98326 IndProp <> every_in def
R98333:98336 Poly <> ::x_'++'_x not
R98331:98332 IndProp <> l1 var
R98339:98342 Poly <> ::x_'++'_x not
R98337:98338 IndProp <> lb var
R98343:98344 IndProp <> l2 var
R98328:98328 IndProp <> l var
R98288:98295 IndProp <> every_in def
R98299:98300 IndProp <> lb var
R98297:98297 IndProp <> l var
R98362:98369 IndProp <> every_in def
R98386:98395 Logic <> in_app_iff thm
R98386:98395 Logic <> in_app_iff thm
R98411:98420 Logic <> in_app_iff thm
R98411:98420 Logic <> in_app_iff thm
prf 98458:98463 <> pigeon
R98491:98494 Poly <> list ind
R98496:98496 IndProp <> X var
R98532:98538 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R98550:98551 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R98574:98577 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R98569:98571 Coq.Init.Logic <> :type_scope:x_'='_x not
R98555:98558 Poly <> ::x_'++'_x not
R98552:98554 IndProp <> lb1 var
R98562:98565 Poly <> ::x_'++'_x not
R98559:98561 IndProp <> lb' var
R98566:98568 IndProp <> lb2 var
R98572:98573 IndProp <> lb var
R98587:98592 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R98581:98584 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R98578:98580 IndProp <> lb' var
R98585:98586 Poly <> ::'['_']' not
R98593:98600 IndProp <> every_in def
R98606:98606 IndProp <> l var
R98602:98604 IndProp <> lb' var
R98509:98512 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R98503:98506 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R98502:98502 IndProp <> l var
R98507:98508 Poly <> ::'['_']' not
R98513:98520 IndProp <> every_in def
R98524:98525 IndProp <> lb var
R98522:98522 IndProp <> l var
R98711:98718 IndProp <> every_in def
R98735:98736 Logic <> In def
R98735:98736 Logic <> In def
R98794:98801 IndProp <> in_split thm
R98794:98801 IndProp <> in_split thm
R98860:98860 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R98862:98862 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R98860:98860 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R98862:98862 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R98926:98938 IndProp <> every_in_refl thm
R98926:98938 IndProp <> every_in_refl thm
R99019:99021 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R99013:99016 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R99008:99011 Poly <> ::x_'::'_x not
R99017:99018 Poly <> ::'['_']' not
R99022:99029 IndProp <> every_in def
R99034:99037 Poly <> ::x_'::'_x not
R99019:99021 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R99013:99016 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R99008:99011 Poly <> ::x_'::'_x not
R99017:99018 Poly <> ::'['_']' not
R99022:99029 IndProp <> every_in def
R99034:99037 Poly <> ::x_'::'_x not
R99087:99097 IndProp <> cons_to_app thm
R99087:99097 IndProp <> cons_to_app thm
R99112:99127 IndProp <> every_in_app_iff thm
R99112:99127 IndProp <> every_in_app_iff thm
R99380:99390 IndProp <> cons_to_app thm
R99380:99390 IndProp <> cons_to_app thm
R99405:99408 Poly <> ::x_'++'_x not
R99402:99402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99404:99404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99411:99414 Poly <> ::x_'::'_x not
R99427:99430 Poly <> ::x_'++'_x not
R99424:99424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99426:99426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99431:99431 Poly <> ::x_'++'_x not
R99439:99443 Poly <> ::x_'++'_x not
R99434:99437 Poly <> ::x_'::'_x not
R99444:99445 Poly <> ::'['_']' not
R99427:99430 Poly <> ::x_'++'_x not
R99424:99424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99426:99426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99431:99431 Poly <> ::x_'++'_x not
R99439:99443 Poly <> ::x_'++'_x not
R99434:99437 Poly <> ::x_'::'_x not
R99444:99445 Poly <> ::'['_']' not
R99405:99408 Poly <> ::x_'++'_x not
R99402:99402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99404:99404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R99411:99414 Poly <> ::x_'::'_x not
R99466:99474 Poly <> app_nil_r thm
R99466:99474 Poly <> app_nil_r thm
R99489:99503 IndProp <> every_in_extend thm
R99489:99503 IndProp <> every_in_extend thm
prf 99524:99536 <> repeats_app_l
R99565:99568 Poly <> list ind
R99570:99570 IndProp <> X var
R99589:99595 IndProp <> repeats ind
R99600:99603 Poly <> ::x_'++'_x not
R99598:99599 IndProp <> ll var
R99604:99604 IndProp <> l var
R99576:99582 IndProp <> repeats ind
R99584:99584 IndProp <> l var
R99660:99670 IndProp <> repeat_more constr
R99660:99670 IndProp <> repeat_more constr
prf 99703:99715 <> repeats_app_r
R99743:99746 Poly <> list ind
R99748:99748 IndProp <> X var
R99767:99773 IndProp <> repeats ind
R99777:99780 Poly <> ::x_'++'_x not
R99776:99776 IndProp <> l var
R99781:99782 IndProp <> lr var
R99754:99760 IndProp <> repeats ind
R99762:99762 IndProp <> l var
R99852:99859 IndProp <> in_split thm
R99852:99859 IndProp <> in_split thm
R99919:99929 IndProp <> repeat_rule constr
R99919:99929 IndProp <> repeat_rule constr
R99938:99947 Logic <> in_app_iff thm
R99938:99947 Logic <> in_app_iff thm
R99962:99971 Logic <> in_app_iff thm
R99962:99971 Logic <> in_app_iff thm
R100047:100057 IndProp <> repeat_more constr
R100047:100057 IndProp <> repeat_more constr
prf 100080:100090 <> repeats_app
R100122:100125 Poly <> list ind
R100127:100127 IndProp <> X var
R100147:100153 IndProp <> repeats ind
R100158:100161 Poly <> ::x_'++'_x not
R100156:100157 IndProp <> ll var
R100163:100166 Poly <> ::x_'++'_x not
R100162:100162 IndProp <> l var
R100167:100168 IndProp <> lr var
R100134:100140 IndProp <> repeats ind
R100142:100142 IndProp <> l var
R100193:100205 IndProp <> repeats_app_l thm
R100193:100205 IndProp <> repeats_app_l thm
R100214:100226 IndProp <> repeats_app_r thm
R100214:100226 IndProp <> repeats_app_r thm
prf 100249:100258 <> in_repeats
R100288:100291 Poly <> list ind
R100293:100293 IndProp <> X var
R100320:100326 IndProp <> repeats ind
R100331:100334 Poly <> ::x_'++'_x not
R100329:100330 IndProp <> l1 var
R100336:100339 Poly <> ::x_'::'_x not
R100335:100335 IndProp <> x var
R100340:100341 IndProp <> l2 var
R100301:100302 Logic <> In def
R100309:100312 Poly <> ::x_'++'_x not
R100307:100308 IndProp <> l1 var
R100313:100314 IndProp <> l2 var
R100304:100304 IndProp <> x var
R100366:100375 Logic <> in_app_iff thm
R100366:100375 Logic <> in_app_iff thm
R100405:100415 IndProp <> cons_to_app thm
R100405:100415 IndProp <> cons_to_app thm
R100426:100434 Poly <> app_assoc thm
R100426:100434 Poly <> app_assoc thm
R100443:100455 IndProp <> repeats_app_r thm
R100443:100455 IndProp <> repeats_app_r thm
R100464:100471 IndProp <> in_split thm
R100464:100471 IndProp <> in_split thm
R100526:100534 Poly <> app_assoc thm
R100526:100534 Poly <> app_assoc thm
R100543:100555 IndProp <> repeats_app_l thm
R100543:100555 IndProp <> repeats_app_l thm
R100571:100581 IndProp <> repeat_rule constr
R100571:100581 IndProp <> repeat_rule constr
R100590:100599 Logic <> in_app_iff thm
R100590:100599 Logic <> in_app_iff thm
R100642:100654 IndProp <> repeats_app_l thm
R100642:100654 IndProp <> repeats_app_l thm
R100663:100673 IndProp <> repeat_rule constr
R100663:100673 IndProp <> repeat_rule constr
prf 100696:100706 <> in_app_comm
R100735:100738 Poly <> list ind
R100740:100740 IndProp <> X var
R100775:100776 Logic <> In def
R100783:100786 Poly <> ::x_'++'_x not
R100781:100782 IndProp <> l2 var
R100787:100788 IndProp <> l1 var
R100778:100778 IndProp <> x var
R100756:100757 Logic <> In def
R100764:100767 Poly <> ::x_'++'_x not
R100762:100763 IndProp <> l1 var
R100768:100769 IndProp <> l2 var
R100759:100759 IndProp <> x var
R100815:100824 Logic <> in_app_iff thm
R100815:100824 Logic <> in_app_iff thm
R100838:100847 Logic <> in_app_iff thm
R100838:100847 Logic <> in_app_iff thm
R100856:100862 Coq.Init.Logic <> or_comm thm
R100856:100862 Coq.Init.Logic <> or_comm thm
prf 100885:100892 <> or_false
R100928:100928 IndProp <> p var
R100915:100918 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R100914:100914 IndProp <> p var
R100919:100923 Coq.Init.Logic <> False ind
prf 100995:101009 <> every_in_expand
R101038:101041 Poly <> list ind
R101043:101043 IndProp <> X var
R101088:101095 IndProp <> every_in def
R101106:101107 IndProp <> lb var
R101099:101102 Poly <> ::x_'::'_x not
R101098:101098 IndProp <> x var
R101103:101103 IndProp <> l var
R101077:101078 Logic <> In def
R101082:101083 IndProp <> lb var
R101080:101080 IndProp <> x var
R101049:101056 IndProp <> every_in def
R101060:101061 IndProp <> lb var
R101058:101058 IndProp <> l var
R101134:101144 IndProp <> cons_to_app thm
R101134:101144 IndProp <> cons_to_app thm
R101153:101168 IndProp <> every_in_app_iff thm
R101153:101168 IndProp <> every_in_app_iff thm
R101187:101194 IndProp <> every_in def
R101224:101231 IndProp <> or_false thm
R101224:101231 IndProp <> or_false thm
prf 101283:101298 <> every_in_expand2
R101326:101329 Poly <> list ind
R101331:101331 IndProp <> X var
R101364:101371 IndProp <> every_in def
R101377:101380 Poly <> ::x_'::'_x not
R101376:101376 IndProp <> x var
R101381:101382 IndProp <> lb var
R101373:101373 IndProp <> l var
R101337:101344 IndProp <> every_in def
R101348:101349 IndProp <> lb var
R101346:101346 IndProp <> l var
R101400:101407 IndProp <> every_in def
prf 101461:101474 <> every_in_trans
R101506:101509 Poly <> list ind
R101511:101511 IndProp <> X var
R101553:101560 IndProp <> every_in def
R101565:101566 IndProp <> l3 var
R101562:101563 IndProp <> l1 var
R101535:101542 IndProp <> every_in def
R101547:101548 IndProp <> l3 var
R101544:101545 IndProp <> l2 var
R101517:101524 IndProp <> every_in def
R101529:101530 IndProp <> l2 var
R101526:101527 IndProp <> l1 var
R101606:101617 IndProp <> every_in_nil thm
R101606:101617 IndProp <> every_in_nil thm
R101630:101637 IndProp <> every_in def
R101630:101637 IndProp <> every_in def
R101657:101667 IndProp <> cons_to_app thm
R101657:101667 IndProp <> cons_to_app thm
R101682:101697 IndProp <> every_in_app_iff thm
R101682:101697 IndProp <> every_in_app_iff thm
R101733:101747 IndProp <> every_in_expand thm
R101733:101747 IndProp <> every_in_expand thm
R101783:101790 IndProp <> every_in def
R101817:101824 IndProp <> every_in def
prf 101880:101899 <> pigeonhole_principle
R101924:101927 Poly <> list ind
R101929:101929 IndProp <> X var
R102054:102060 IndProp <> repeats ind
R102062:102062 IndProp <> l var
R102037:102039 IndProp <> ::x_'<'_x not
R102028:102033 Poly <> length def
R102035:102036 IndProp <> lb var
R102040:102045 Poly <> length def
R102047:102047 IndProp <> l var
R102009:102016 IndProp <> every_in def
R102020:102021 IndProp <> lb var
R102018:102018 IndProp <> l var
R101948:101948 IndProp <> X var
R101955:101955 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R101963:101967 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R101956:101957 Logic <> In def
R101961:101962 IndProp <> l' var
R101959:101959 IndProp <> x var
R101968:101970 Coq.Init.Logic <> :type_scope:'~'_x not
R101978:101978 Coq.Init.Logic <> :type_scope:'~'_x not
R101971:101972 Logic <> In def
R101976:101977 IndProp <> l' var
R101974:101974 IndProp <> x var
R102079:102086 IndProp <> every_in def
R102137:102138 Logic <> In def
R102137:102138 Logic <> In def
R102187:102194 IndProp <> in_split thm
R102187:102194 IndProp <> in_split thm
R102270:102270 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R102277:102281 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R102271:102272 Logic <> In def
R102282:102284 Coq.Init.Logic <> :type_scope:'~'_x not
R102291:102291 Coq.Init.Logic <> :type_scope:'~'_x not
R102285:102286 Logic <> In def
R102270:102270 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R102277:102281 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R102271:102272 Logic <> In def
R102282:102284 Coq.Init.Logic <> :type_scope:'~'_x not
R102291:102291 Coq.Init.Logic <> :type_scope:'~'_x not
R102285:102286 Logic <> In def
R102339:102349 IndProp <> repeat_rule constr
R102339:102349 IndProp <> repeat_rule constr
R102368:102370 Coq.Init.Logic <> not def
R102387:102394 IndProp <> every_in def
R102387:102394 IndProp <> every_in def
R102412:102419 IndProp <> every_in def
R102488:102498 IndProp <> cons_to_app thm
R102488:102498 IndProp <> cons_to_app thm
R102513:102530 IndProp <> app_comm_every_in2 thm
R102513:102530 IndProp <> app_comm_every_in2 thm
R102550:102558 Poly <> app_assoc thm
R102550:102558 Poly <> app_assoc thm
R102575:102582 IndProp <> every_in def
R102612:102619 IndProp <> every_in def
R102626:102629 Poly <> ::x_'++'_x not
R102612:102619 IndProp <> every_in def
R102626:102629 Poly <> ::x_'++'_x not
R102645:102652 IndProp <> every_in def
R102677:102680 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R102672:102674 Coq.Init.Logic <> :type_scope:x_'='_x not
R102681:102682 Logic <> In def
R102690:102693 Poly <> ::x_'++'_x not
R102677:102680 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R102672:102674 Coq.Init.Logic <> :type_scope:x_'='_x not
R102681:102682 Logic <> In def
R102690:102693 Poly <> ::x_'++'_x not
R102826:102836 IndProp <> repeat_more constr
R102826:102836 IndProp <> repeat_more constr
R102857:102860 Poly <> ::x_'++'_x not
R102857:102860 Poly <> ::x_'++'_x not
R102885:102886 IndProp <> lt def
R102896:102897 IndProp <> lt def
R102932:102942 IndProp <> cons_to_app thm
R102932:102942 IndProp <> cons_to_app thm
R102959:102968 Poly <> app_length thm
R102959:102968 Poly <> app_length thm
R102985:102993 Induction <> plus_comm prfax
R102985:102993 Induction <> plus_comm prfax
R103021:103036 IndProp <> Sn_le_Sm__n_le_m thm
R103021:103036 IndProp <> Sn_le_Sm__n_le_m thm
R103047:103056 Poly <> app_length thm
R103047:103056 Poly <> app_length thm
